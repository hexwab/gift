!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.2.2	//
AF_LOCAL	/home/jasta/c/giFT/lib/platform.c	37;"	d	file:
AF_LOCAL	/home/jasta/c/giFT/lib/platform.c	47;"	d	file:
APPEND	/home/jasta/c/giFT/src/hook.c	26;"	d	file:
APP_NAME	/home/jasta/c/giFT/win32/giFTsetup/giFTsetup.c	38;"	d	file:
APP_NAME	/home/jasta/c/giFT/win32/giFTtray/giFTtray.c	37;"	d	file:
ASSERT_VALID	/home/jasta/c/giFT/lib/log.h	89;"	d
ASSERT_VALID	/home/jasta/c/giFT/lib/log.h	99;"	d
ATOI	/home/jasta/c/giFT/lib/parse.c	/^long ATOI (char *string)$/;"	f
ATOUL	/home/jasta/c/giFT/lib/parse.c	/^unsigned long ATOUL (char *string)$/;"	f
ATTACH_ATTEMPTS	/home/jasta/c/giFT/win32/giFTtray/giFTtray.c	352;"	d	file:
AUTH_ACCEPTED	/home/jasta/c/giFT/src/upload.h	/^	AUTH_ACCEPTED = 0,                 \/* success *\/$/;"	e
AUTH_INVALID	/home/jasta/c/giFT/src/upload.h	/^	AUTH_INVALID,                      \/* share is invalid *\/$/;"	e
AUTH_MAX	/home/jasta/c/giFT/src/upload.h	/^	AUTH_MAX,                          \/* maximum total transfer reached *\/$/;"	e
AUTH_MAX_PERUSER	/home/jasta/c/giFT/src/upload.h	/^	AUTH_MAX_PERUSER,                  \/* maximum transfers per user reached *\/$/;"	e
AUTH_STALE	/home/jasta/c/giFT/src/upload.h	/^	AUTH_STALE,                        \/* share is stale, will be refreshed$/;"	e
AuthReason	/home/jasta/c/giFT/src/upload.h	/^} AuthReason;$/;"	t
CHILD_FUNC	/home/jasta/c/giFT/lib/platform.h	59;"	d
CHILD_FUNC	/home/jasta/c/giFT/lib/platform.h	63;"	d
CHILD_FUNC	/home/jasta/c/giFT/src/share_cache.c	/^static CHILD_FUNC (child_add_entry)$/;"	f	file:
CHILD_FUNC	/home/jasta/c/giFT/src/share_cache.c	/^static CHILD_FUNC (child_remove_entry)$/;"	f	file:
CHILD_FUNC	/home/jasta/c/giFT/src/share_cache.c	/^static CHILD_FUNC (child_update_index)$/;"	f	file:
CLAMP	/home/jasta/c/giFT/lib/gift.h	125;"	d
CMP_THRESHOLD	/home/jasta/c/giFT/src/transfer.c	34;"	d	file:
COMPLETED_PATH	/home/jasta/c/giFT/src/transfer.h	31;"	d
CONNECTING	/home/jasta/c/giFT/win32/giFTtray/giFTtray.c	65;"	d	file:
ChildFunc	/home/jasta/c/giFT/lib/platform.h	/^typedef int (*ChildFunc) (void *udata);$/;"	t
ChildFunc	/home/jasta/c/giFT/lib/platform.h	/^typedef unsigned (__stdcall *ChildFunc) (void *udata);$/;"	t
Chunk	/home/jasta/c/giFT/src/transfer.h	/^} Chunk;$/;"	t
CompareFunc	/home/jasta/c/giFT/lib/list.h	/^typedef int (*CompareFunc)     (void *a, void *b);$/;"	t
Config	/home/jasta/c/giFT/lib/conf.h	/^} Config;$/;"	t
ConfigHeader	/home/jasta/c/giFT/lib/conf.h	/^} ConfigHeader;$/;"	t
ConnForeachFunc	/home/jasta/c/giFT/OpenFT/netorg.h	/^typedef Connection* (*ConnForeachFunc) (Connection *c, Node *node, void *data);$/;"	t
Connection	/home/jasta/c/giFT/lib/connection.h	/^} Connection;$/;"	t
DATA_DIR	/home/jasta/c/giFT/acconfig.h	2;"	d
DATA_DIR	/home/jasta/c/giFT/config.h	4;"	d
DBG	/home/jasta/c/giFT/win32/giFTsetup/giFTsetup.c	82;"	d	file:
DBG	/home/jasta/c/giFT/win32/giFTsetup/giFTsetup.c	97;"	d	file:
DBG	/home/jasta/c/giFT/win32/giFTtray/giFTtray.c	81;"	d	file:
DBG	/home/jasta/c/giFT/win32/giFTtray/giFTtray.c	96;"	d	file:
DEBUG	/home/jasta/c/giFT/lib/log.h	64;"	d
DEBUG	/home/jasta/c/giFT/src/perl.c	29;"	d	file:
DEBUG_TAG	/home/jasta/c/giFT/lib/log.h	86;"	d
DEFAULT_IP	/home/jasta/c/giFT/win32/giFTtray/giFTtray.c	32;"	d	file:
DEFAULT_PORT	/home/jasta/c/giFT/win32/giFTtray/giFTtray.c	33;"	d	file:
DEF_HEIGHT	/home/jasta/c/giFT/ui/fe_ui.h	24;"	d
DEF_WIDTH	/home/jasta/c/giFT/ui/fe_ui.h	23;"	d
DIVIDE_THRESHOLD	/home/jasta/c/giFT/src/download.c	44;"	d	file:
DOWNLOAD_COMPLETED	/home/jasta/c/giFT/win32/giFTsetup/giFTsetup.c	69;"	d	file:
DaemonEvent	/home/jasta/c/giFT/ui/fe_daemon.h	/^} DaemonEvent;$/;"	t
Dataset	/home/jasta/c/giFT/lib/dataset.h	/^typedef struct _hash_table Dataset;$/;"	t
EV_HANDLER	/home/jasta/c/giFT/OpenFT/daemon.c	/^EV_HANDLER (daemon_promote)$/;"	f
EV_HANDLER	/home/jasta/c/giFT/OpenFT/daemon.c	/^EV_HANDLER (daemon_search)$/;"	f
EV_HANDLER	/home/jasta/c/giFT/OpenFT/daemon.c	/^EV_HANDLER (daemon_share)$/;"	f
EV_HANDLER	/home/jasta/c/giFT/OpenFT/daemon.c	/^EV_HANDLER (daemon_stats)$/;"	f
EV_HANDLER	/home/jasta/c/giFT/OpenFT/daemon.c	31;"	d	file:
EV_HANDLER	/home/jasta/c/giFT/src/daemon.c	/^EV_HANDLER (attach)$/;"	f
EV_HANDLER	/home/jasta/c/giFT/src/daemon.c	/^EV_HANDLER (opt)$/;"	f
EV_HANDLER	/home/jasta/c/giFT/src/daemon.c	/^EV_HANDLER (quit)$/;"	f
EV_HANDLER	/home/jasta/c/giFT/src/daemon.c	/^EV_HANDLER (search)$/;"	f
EV_HANDLER	/home/jasta/c/giFT/src/daemon.c	/^EV_HANDLER (share)$/;"	f
EV_HANDLER	/home/jasta/c/giFT/src/daemon.c	/^EV_HANDLER (stats)$/;"	f
EV_HANDLER	/home/jasta/c/giFT/src/daemon.c	/^EV_HANDLER (transfer)$/;"	f
EV_HANDLER	/home/jasta/c/giFT/src/daemon.c	37;"	d	file:
EventCallback	/home/jasta/c/giFT/OpenFT/daemon.c	/^typedef void (*EventCallback) (Protocol *p, Connection *c, Dataset *event);$/;"	t	file:
EventCallback	/home/jasta/c/giFT/src/daemon.c	/^typedef void (*EventCallback) (Protocol *p, Connection *c, Dataset *event);$/;"	t	file:
F1	/home/jasta/c/giFT/src/md5.c	236;"	d	file:
F2	/home/jasta/c/giFT/src/md5.c	237;"	d	file:
F3	/home/jasta/c/giFT/src/md5.c	238;"	d	file:
F4	/home/jasta/c/giFT/src/md5.c	239;"	d	file:
FALSE	/home/jasta/c/giFT/OpenFT/openft.h	88;"	d
FALSE	/home/jasta/c/giFT/lib/gift.h	111;"	d
FD_SETSIZE	/home/jasta/c/giFT/lib/platform.h	45;"	d
FEConnection	/home/jasta/c/giFT/ui/fe_connect.h	/^} FEConnection;$/;"	t
FEConnectionCallback	/home/jasta/c/giFT/ui/fe_connect.h	/^typedef int (*FEConnectionCallback) (int sock, struct _fe_connection *c);$/;"	t
FEEventHandler	/home/jasta/c/giFT/ui/fe_daemon.c	/^typedef int (*FEEventHandler) (FEConnection *c, char *head, GData *datalist);$/;"	t	file:
FE_EV_HANDLER	/home/jasta/c/giFT/ui/fe_daemon.c	/^FE_EV_HANDLER (event)$/;"	f
FE_EV_HANDLER	/home/jasta/c/giFT/ui/fe_daemon.c	/^FE_EV_HANDLER (transfer)$/;"	f
FE_EV_HANDLER	/home/jasta/c/giFT/ui/fe_daemon.c	44;"	d	file:
FORK_INDEX_BUILD	/home/jasta/c/giFT/src/share_cache.c	43;"	d	file:
FTApp	/home/jasta/c/giFT/ui/gift-fe.h	/^} FTApp;$/;"	t
FTPacket	/home/jasta/c/giFT/OpenFT/packet.h	/^} FTPacket;$/;"	t
FT_CHILD_REQUEST	/home/jasta/c/giFT/OpenFT/protocol.h	/^	FT_CHILD_REQUEST   = 100,$/;"	e
FT_CHILD_RESPONSE	/home/jasta/c/giFT/OpenFT/protocol.h	/^	FT_CHILD_RESPONSE,$/;"	e
FT_CLASS_REQUEST	/home/jasta/c/giFT/OpenFT/protocol.h	/^	FT_CLASS_REQUEST,$/;"	e
FT_CLASS_RESPONSE	/home/jasta/c/giFT/OpenFT/protocol.h	/^	FT_CLASS_RESPONSE,$/;"	e
FT_HANDLER	/home/jasta/c/giFT/OpenFT/protocol.c	/^FT_HANDLER (child_request)$/;"	f
FT_HANDLER	/home/jasta/c/giFT/OpenFT/protocol.c	/^FT_HANDLER (child_response)$/;"	f
FT_HANDLER	/home/jasta/c/giFT/OpenFT/protocol.c	/^FT_HANDLER (class_request)$/;"	f
FT_HANDLER	/home/jasta/c/giFT/OpenFT/protocol.c	/^FT_HANDLER (class_response)$/;"	f
FT_HANDLER	/home/jasta/c/giFT/OpenFT/protocol.c	/^FT_HANDLER (modshare_request)$/;"	f
FT_HANDLER	/home/jasta/c/giFT/OpenFT/protocol.c	/^FT_HANDLER (modshare_response)$/;"	f
FT_HANDLER	/home/jasta/c/giFT/OpenFT/protocol.c	/^FT_HANDLER (nodecap_request)$/;"	f
FT_HANDLER	/home/jasta/c/giFT/OpenFT/protocol.c	/^FT_HANDLER (nodecap_response)$/;"	f
FT_HANDLER	/home/jasta/c/giFT/OpenFT/protocol.c	/^FT_HANDLER (nodeinfo_request)$/;"	f
FT_HANDLER	/home/jasta/c/giFT/OpenFT/protocol.c	/^FT_HANDLER (nodeinfo_response)$/;"	f
FT_HANDLER	/home/jasta/c/giFT/OpenFT/protocol.c	/^FT_HANDLER (nodelist_request)$/;"	f
FT_HANDLER	/home/jasta/c/giFT/OpenFT/protocol.c	/^FT_HANDLER (nodelist_response)$/;"	f
FT_HANDLER	/home/jasta/c/giFT/OpenFT/protocol.c	/^FT_HANDLER (ping_request)$/;"	f
FT_HANDLER	/home/jasta/c/giFT/OpenFT/protocol.c	/^FT_HANDLER (ping_response)$/;"	f
FT_HANDLER	/home/jasta/c/giFT/OpenFT/protocol.c	/^FT_HANDLER (push_request)$/;"	f
FT_HANDLER	/home/jasta/c/giFT/OpenFT/protocol.c	/^FT_HANDLER (push_response)$/;"	f
FT_HANDLER	/home/jasta/c/giFT/OpenFT/protocol.c	/^FT_HANDLER (search_request)$/;"	f
FT_HANDLER	/home/jasta/c/giFT/OpenFT/protocol.c	/^FT_HANDLER (search_response)$/;"	f
FT_HANDLER	/home/jasta/c/giFT/OpenFT/protocol.c	/^FT_HANDLER (share_request)$/;"	f
FT_HANDLER	/home/jasta/c/giFT/OpenFT/protocol.c	/^FT_HANDLER (share_response)$/;"	f
FT_HANDLER	/home/jasta/c/giFT/OpenFT/protocol.c	/^FT_HANDLER (stats_request)$/;"	f
FT_HANDLER	/home/jasta/c/giFT/OpenFT/protocol.c	/^FT_HANDLER (stats_response)$/;"	f
FT_HANDLER	/home/jasta/c/giFT/OpenFT/protocol.c	/^FT_HANDLER (version_request)$/;"	f
FT_HANDLER	/home/jasta/c/giFT/OpenFT/protocol.c	/^FT_HANDLER (version_request_003)$/;"	f
FT_HANDLER	/home/jasta/c/giFT/OpenFT/protocol.c	/^FT_HANDLER (version_response)$/;"	f
FT_HANDLER	/home/jasta/c/giFT/OpenFT/protocol.c	/^FT_HANDLER (version_response_003)$/;"	f
FT_HANDLER	/home/jasta/c/giFT/OpenFT/protocol.c	43;"	d	file:
FT_HEADER_LEN	/home/jasta/c/giFT/OpenFT/packet.h	30;"	d
FT_HostShare	/home/jasta/c/giFT/OpenFT/share.h	/^} FT_HostShare;$/;"	t
FT_MODSHARE_REQUEST	/home/jasta/c/giFT/OpenFT/protocol.h	/^	FT_MODSHARE_REQUEST,$/;"	e
FT_MODSHARE_RESPONSE	/home/jasta/c/giFT/OpenFT/protocol.h	/^	FT_MODSHARE_RESPONSE,$/;"	e
FT_NODECAP_REQUEST	/home/jasta/c/giFT/OpenFT/protocol.h	/^	FT_NODECAP_REQUEST,$/;"	e
FT_NODECAP_RESPONSE	/home/jasta/c/giFT/OpenFT/protocol.h	/^	FT_NODECAP_RESPONSE,$/;"	e
FT_NODEINFO_REQUEST	/home/jasta/c/giFT/OpenFT/protocol.h	/^	FT_NODEINFO_REQUEST,$/;"	e
FT_NODEINFO_RESPONSE	/home/jasta/c/giFT/OpenFT/protocol.h	/^	FT_NODEINFO_RESPONSE,$/;"	e
FT_NODELIST_REQUEST	/home/jasta/c/giFT/OpenFT/protocol.h	/^	FT_NODELIST_REQUEST,$/;"	e
FT_NODELIST_RESPONSE	/home/jasta/c/giFT/OpenFT/protocol.h	/^	FT_NODELIST_RESPONSE,$/;"	e
FT_PACKET_COMPRESSED	/home/jasta/c/giFT/OpenFT/packet.h	26;"	d
FT_PING_REQUEST	/home/jasta/c/giFT/OpenFT/protocol.h	/^	FT_PING_REQUEST,$/;"	e
FT_PING_RESPONSE	/home/jasta/c/giFT/OpenFT/protocol.h	/^	FT_PING_RESPONSE,$/;"	e
FT_PUSH_REQUEST	/home/jasta/c/giFT/OpenFT/protocol.h	/^	FT_PUSH_REQUEST    = 300,$/;"	e
FT_PUSH_RESPONSE	/home/jasta/c/giFT/OpenFT/protocol.h	/^	FT_PUSH_RESPONSE$/;"	e
FT_SEARCH_REQUEST	/home/jasta/c/giFT/OpenFT/protocol.h	/^	FT_SEARCH_REQUEST  = 200,$/;"	e
FT_SEARCH_RESPONSE	/home/jasta/c/giFT/OpenFT/protocol.h	/^	FT_SEARCH_RESPONSE,$/;"	e
FT_SHARE_REQUEST	/home/jasta/c/giFT/OpenFT/protocol.h	/^	FT_SHARE_REQUEST,$/;"	e
FT_SHARE_RESPONSE	/home/jasta/c/giFT/OpenFT/protocol.h	/^	FT_SHARE_RESPONSE,$/;"	e
FT_STATS_REQUEST	/home/jasta/c/giFT/OpenFT/protocol.h	/^	FT_STATS_REQUEST,$/;"	e
FT_STATS_RESPONSE	/home/jasta/c/giFT/OpenFT/protocol.h	/^	FT_STATS_RESPONSE,$/;"	e
FT_Share	/home/jasta/c/giFT/OpenFT/share.h	/^} FT_Share;$/;"	t
FT_Stats	/home/jasta/c/giFT/OpenFT/share.h	/^} FT_Stats;$/;"	t
FT_Transfer	/home/jasta/c/giFT/OpenFT/xfer.h	/^} FT_Transfer;$/;"	t
FT_TransferCB	/home/jasta/c/giFT/OpenFT/xfer.h	/^typedef void (*FT_TransferCB) (Chunk *chunk, char *data, size_t len);$/;"	t
FT_VERSION_REQUEST	/home/jasta/c/giFT/OpenFT/protocol.h	/^	FT_VERSION_REQUEST = 0,$/;"	e
FT_VERSION_RESPONSE	/home/jasta/c/giFT/OpenFT/protocol.h	/^	FT_VERSION_RESPONSE,$/;"	e
FileShare	/home/jasta/c/giFT/src/share_file.h	/^} FileShare;$/;"	t
GC_strdup	/home/jasta/c/giFT/lib/gift.h	/^static char *GC_strdup (char *x) { char *str = GC_malloc (strlen (x)); strcpy (str, x); return str; }$/;"	f
GIFT_DEBUG	/home/jasta/c/giFT/lib/log.h	76;"	d
GIFT_DEBUG	/home/jasta/c/giFT/lib/log.h	93;"	d
GIFT_ERRNO	/home/jasta/c/giFT/lib/log.h	70;"	d
GIFT_ERROR	/home/jasta/c/giFT/lib/log.h	68;"	d
GIFT_FATAL	/home/jasta/c/giFT/lib/log.h	69;"	d
GIFT_FE_PACKAGE	/home/jasta/c/giFT/ui/gift-fe.h	58;"	d
GIFT_FE_VERSION	/home/jasta/c/giFT/ui/gift-fe.h	59;"	d
GIFT_INFO	/home/jasta/c/giFT/lib/log.h	66;"	d
GIFT_INTERFACE_PORT	/home/jasta/c/giFT/lib/gift.h	102;"	d
GIFT_NETERROR	/home/jasta/c/giFT/lib/log.h	72;"	d
GIFT_REG_KEY	/home/jasta/c/giFT/lib/platform.c	40;"	d	file:
GIFT_REG_SUBKEY	/home/jasta/c/giFT/lib/platform.c	41;"	d	file:
GIFT_STRERROR	/home/jasta/c/giFT/lib/log.h	71;"	d
GIFT_WARN	/home/jasta/c/giFT/lib/log.h	67;"	d
GLOG_DEBUG	/home/jasta/c/giFT/lib/log.h	100;"	d
GLOG_DEBUG	/home/jasta/c/giFT/lib/log.h	90;"	d
GLOG_DEBUGGER	/home/jasta/c/giFT/lib/log.h	/^	GLOG_DEBUGGER    = 0x20  \/* log to debugger, if running within debugger *\/$/;"	e
GLOG_DEFAULT	/home/jasta/c/giFT/lib/log.h	104;"	d
GLOG_DEFAULT	/home/jasta/c/giFT/lib/log.h	106;"	d
GLOG_FILE	/home/jasta/c/giFT/lib/log.h	/^	GLOG_FILE        = 0x10, \/* log to the specified file *\/$/;"	e
GLOG_NONE	/home/jasta/c/giFT/lib/log.h	/^	GLOG_NONE        = 0x01, \/* turn logging off *\/$/;"	e
GLOG_STDERR	/home/jasta/c/giFT/lib/log.h	/^	GLOG_STDERR      = 0x02, \/* log to stderr, the default *\/$/;"	e
GLOG_STDOUT	/home/jasta/c/giFT/lib/log.h	/^	GLOG_STDOUT      = 0x04, \/* log to stdout *\/$/;"	e
GLOG_SYSLOG	/home/jasta/c/giFT/lib/log.h	/^	GLOG_SYSLOG      = 0x08, \/* log to syslog (*nix) or Event Log (Win32) *\/$/;"	e
G_FT_INT16_FORMAT	/home/jasta/c/giFT/giftconfig.h	13;"	d
G_FT_INT16_FORMAT	/home/jasta/c/giFT/win32/giftconfig.h	28;"	d
G_FT_INT32_FORMAT	/home/jasta/c/giFT/giftconfig.h	17;"	d
G_FT_INT32_FORMAT	/home/jasta/c/giFT/win32/giftconfig.h	32;"	d
G_FT_UINT16_FORMAT	/home/jasta/c/giFT/giftconfig.h	14;"	d
G_FT_UINT16_FORMAT	/home/jasta/c/giFT/win32/giftconfig.h	29;"	d
G_FT_UINT32_FORMAT	/home/jasta/c/giFT/giftconfig.h	18;"	d
G_FT_UINT32_FORMAT	/home/jasta/c/giFT/win32/giftconfig.h	33;"	d
GiftEvent	/home/jasta/c/giFT/lib/gift.c	/^} GiftEvent;$/;"	t	file:
HASH_LEN	/home/jasta/c/giFT/src/md5.c	57;"	d	file:
HASH_TABLE_MAX_SIZE	/home/jasta/c/giFT/lib/hash.c	20;"	d	file:
HASH_TABLE_MIN_SIZE	/home/jasta/c/giFT/lib/hash.c	19;"	d	file:
HAS_UNION_SEMUN	/home/jasta/c/giFT/src/perl.c	25;"	d	file:
HAVE_DIRENT_H	/home/jasta/c/giFT/config.h	10;"	d
HAVE_DLFCN_H	/home/jasta/c/giFT/config.h	13;"	d
HAVE_FCNTL_H	/home/jasta/c/giFT/config.h	16;"	d
HAVE_FCNTL_H	/home/jasta/c/giFT/win32/config.h	46;"	d
HAVE_GETPAGESIZE	/home/jasta/c/giFT/config.h	19;"	d
HAVE_INTTYPES_H	/home/jasta/c/giFT/config.h	22;"	d
HAVE_LIBNSL	/home/jasta/c/giFT/config.h	25;"	d
HAVE_LIBZ	/home/jasta/c/giFT/config.h	31;"	d
HAVE_LIMITS_H	/home/jasta/c/giFT/config.h	34;"	d
HAVE_LIMITS_H	/home/jasta/c/giFT/win32/config.h	61;"	d
HAVE_LINUX_LIMITS_H	/home/jasta/c/giFT/config.h	37;"	d
HAVE_MADVISE	/home/jasta/c/giFT/config.h	40;"	d
HAVE_MEMORY_H	/home/jasta/c/giFT/config.h	43;"	d
HAVE_MEMORY_H	/home/jasta/c/giFT/win32/config.h	67;"	d
HAVE_MMAP	/home/jasta/c/giFT/config.h	46;"	d
HAVE_NICE	/home/jasta/c/giFT/config.h	52;"	d
HAVE_SELECT	/home/jasta/c/giFT/config.h	58;"	d
HAVE_SELECT	/home/jasta/c/giFT/win32/config.h	73;"	d
HAVE_SOCKET	/home/jasta/c/giFT/config.h	61;"	d
HAVE_SOCKET	/home/jasta/c/giFT/win32/config.h	76;"	d
HAVE_STDINT_H	/home/jasta/c/giFT/config.h	64;"	d
HAVE_STDLIB_H	/home/jasta/c/giFT/config.h	67;"	d
HAVE_STDLIB_H	/home/jasta/c/giFT/win32/config.h	82;"	d
HAVE_STRDUP	/home/jasta/c/giFT/config.h	70;"	d
HAVE_STRDUP	/home/jasta/c/giFT/win32/config.h	85;"	d
HAVE_STRINGS_H	/home/jasta/c/giFT/config.h	73;"	d
HAVE_STRING_H	/home/jasta/c/giFT/config.h	76;"	d
HAVE_STRING_H	/home/jasta/c/giFT/win32/config.h	91;"	d
HAVE_STRSTR	/home/jasta/c/giFT/config.h	79;"	d
HAVE_STRSTR	/home/jasta/c/giFT/win32/config.h	94;"	d
HAVE_SYSLOG_H	/home/jasta/c/giFT/config.h	82;"	d
HAVE_SYS_MMAN_H	/home/jasta/c/giFT/config.h	89;"	d
HAVE_SYS_STAT_H	/home/jasta/c/giFT/config.h	96;"	d
HAVE_SYS_STAT_H	/home/jasta/c/giFT/win32/config.h	108;"	d
HAVE_SYS_TIME_H	/home/jasta/c/giFT/config.h	99;"	d
HAVE_SYS_TYPES_H	/home/jasta/c/giFT/config.h	102;"	d
HAVE_SYS_TYPES_H	/home/jasta/c/giFT/win32/config.h	114;"	d
HAVE_SYS_WAIT_H	/home/jasta/c/giFT/config.h	105;"	d
HAVE_UNISTD_H	/home/jasta/c/giFT/config.h	108;"	d
HIDE_DOT_FILES	/home/jasta/c/giFT/src/share_cache.c	71;"	d	file:
HIGHFIRST	/home/jasta/c/giFT/src/md5.c	45;"	d	file:
HIGH_PORT	/home/jasta/c/giFT/win32/giFTsetup/giFTsetup.c	/^static unsigned short HIGH_PORT = 65535U;$/;"	v	file:
HOOK_VAR_INT	/home/jasta/c/giFT/src/hook.h	/^	HOOK_VAR_INT,$/;"	e
HOOK_VAR_NUL	/home/jasta/c/giFT/src/hook.h	/^	HOOK_VAR_NUL = 0,$/;"	e
HOOK_VAR_STR	/home/jasta/c/giFT/src/hook.h	/^	HOOK_VAR_STR$/;"	e
HTTP_USER_AGENT	/home/jasta/c/giFT/OpenFT/http_client.c	25;"	d	file:
HashEqualFunc	/home/jasta/c/giFT/lib/hash.h	/^typedef int (*HashEqualFunc) (unsigned long key1, unsigned long key2);$/;"	t
HashFunc	/home/jasta/c/giFT/lib/hash.h	/^typedef int (*HashFunc) (unsigned long key, void *value, void *udata);$/;"	t
HashKeyFunc	/home/jasta/c/giFT/lib/hash.h	/^typedef unsigned long (*HashKeyFunc) (unsigned long key);$/;"	t
HashNode	/home/jasta/c/giFT/lib/hash.h	/^} HashNode;$/;"	t
HashTable	/home/jasta/c/giFT/lib/hash.h	/^} HashTable;$/;"	t
HookVar	/home/jasta/c/giFT/src/hook.h	/^} HookVar;$/;"	t
HookVarType	/home/jasta/c/giFT/src/hook.h	/^} HookVarType;$/;"	t
ICON_ID_LARGE	/home/jasta/c/giFT/win32/giFTtray/giFTtray.c	41;"	d	file:
ICON_ID_SMALL	/home/jasta/c/giFT/win32/giFTtray/giFTtray.c	42;"	d	file:
IDB_HEADER	/home/jasta/c/giFT/win32/giFTsetup/resource.h	12;"	d
IDB_WATERMARK	/home/jasta/c/giFT/win32/giFTsetup/resource.h	10;"	d
IDC_ADD	/home/jasta/c/giFT/win32/giFTsetup/resource.h	25;"	d
IDC_BEHIND_FIREWALL	/home/jasta/c/giFT/win32/giFTsetup/resource.h	28;"	d
IDC_BROWSE	/home/jasta/c/giFT/win32/giFTsetup/resource.h	21;"	d
IDC_DOWNLOAD_DIR	/home/jasta/c/giFT/win32/giFTsetup/resource.h	20;"	d
IDC_EDIT_HTTP_PORT	/home/jasta/c/giFT/win32/giFTsetup/resource.h	23;"	d
IDC_EDIT_OPENFT_PORT	/home/jasta/c/giFT/win32/giFTsetup/resource.h	22;"	d
IDC_NOT_BEHIND_FIREWALL	/home/jasta/c/giFT/win32/giFTsetup/resource.h	27;"	d
IDC_RADIO_INDEX	/home/jasta/c/giFT/win32/giFTsetup/resource.h	17;"	d
IDC_RADIO_SEARCH	/home/jasta/c/giFT/win32/giFTsetup/resource.h	19;"	d
IDC_RADIO_SEARCH_INDEX	/home/jasta/c/giFT/win32/giFTsetup/resource.h	18;"	d
IDC_RADIO_USER	/home/jasta/c/giFT/win32/giFTsetup/resource.h	16;"	d
IDC_REMOVE	/home/jasta/c/giFT/win32/giFTsetup/resource.h	26;"	d
IDC_SHARED_DIRS_LIST	/home/jasta/c/giFT/win32/giFTsetup/resource.h	24;"	d
IDC_SPECIFY_PORTS	/home/jasta/c/giFT/win32/giFTsetup/resource.h	29;"	d
IDC_TITLE_TEXT	/home/jasta/c/giFT/win32/giFTsetup/resource.h	15;"	d
IDD_DOWNLOAD_DIR	/home/jasta/c/giFT/win32/giFTsetup/resource.h	7;"	d
IDD_FINISH	/home/jasta/c/giFT/win32/giFTsetup/resource.h	11;"	d
IDD_FIREWALL	/home/jasta/c/giFT/win32/giFTsetup/resource.h	6;"	d
IDD_INTRO	/home/jasta/c/giFT/win32/giFTsetup/resource.h	5;"	d
IDD_NODE_CLASS	/home/jasta/c/giFT/win32/giFTsetup/resource.h	9;"	d
IDD_SHARED_DIRS	/home/jasta/c/giFT/win32/giFTsetup/resource.h	8;"	d
IDI_ICON1	/home/jasta/c/giFT/win32/giFTsetup/resource.h	13;"	d
IDI_ICON1	/home/jasta/c/giFT/win32/resource.h	5;"	d
IDI_ICON2	/home/jasta/c/giFT/win32/giFTsetup/resource.h	14;"	d
IFEVENT_OPT	/home/jasta/c/giFT/lib/if_event.h	/^	IFEVENT_OPT,$/;"	e
IFEVENT_SEARCH	/home/jasta/c/giFT/lib/if_event.h	/^	IFEVENT_SEARCH,$/;"	e
IFEVENT_STATS	/home/jasta/c/giFT/lib/if_event.h	/^	IFEVENT_STATS$/;"	e
IFEVENT_TRANSFER	/home/jasta/c/giFT/lib/if_event.h	/^	IFEVENT_TRANSFER,$/;"	e
IFEvent	/home/jasta/c/giFT/lib/if_event.h	/^} IFEvent;$/;"	t
IFEventFunc	/home/jasta/c/giFT/lib/if_event.h	/^typedef void (*IFEventFunc) (struct _if_event *event);$/;"	t
IFEventID	/home/jasta/c/giFT/lib/if_event.h	/^typedef unsigned long IFEventID;$/;"	t
IFEventType	/home/jasta/c/giFT/lib/if_event.h	/^} IFEventType;$/;"	t
IMAGE_HOST	/home/jasta/c/giFT/OpenFT/html.c	32;"	d	file:
INCOMING_PATH	/home/jasta/c/giFT/src/transfer.h	28;"	d
INITIAL_BUFFER	/home/jasta/c/giFT/lib/nb.c	28;"	d	file:
INPUT_EXCEPTION	/home/jasta/c/giFT/lib/event.h	/^	INPUT_EXCEPTION = 0x04$/;"	e
INPUT_READ	/home/jasta/c/giFT/lib/event.h	/^	INPUT_READ      = 0x01,$/;"	e
INPUT_WRITE	/home/jasta/c/giFT/lib/event.h	/^	INPUT_WRITE     = 0x02,$/;"	e
INVALIDATE	/home/jasta/c/giFT/lib/log.h	88;"	d
INVALIDATE	/home/jasta/c/giFT/lib/log.h	98;"	d
ITOA	/home/jasta/c/giFT/lib/parse.c	/^char *ITOA (long integer)$/;"	f
I_PTR	/home/jasta/c/giFT/giftconfig.h	20;"	d
I_PTR	/home/jasta/c/giFT/win32/giftconfig.h	35;"	d
Input	/home/jasta/c/giFT/lib/event.h	/^} Input;$/;"	t
InputCallback	/home/jasta/c/giFT/lib/event.h	/^typedef void (*InputCallback) (Protocol *p, Connection *c);$/;"	t
InputState	/home/jasta/c/giFT/lib/event.h	/^} InputState;$/;"	t
LIST_SIZE	/home/jasta/c/giFT/ui/fe_utils.h	24;"	d
LOG_ALERT	/home/jasta/c/giFT/lib/log.c	34;"	d	file:
LOG_ALERT	/home/jasta/c/giFT/win32/config.h	177;"	d
LOG_CRIT	/home/jasta/c/giFT/lib/log.c	38;"	d	file:
LOG_CRIT	/home/jasta/c/giFT/win32/config.h	178;"	d
LOG_DEBUG	/home/jasta/c/giFT/lib/log.c	58;"	d	file:
LOG_DEBUG	/home/jasta/c/giFT/win32/config.h	183;"	d
LOG_EMERG	/home/jasta/c/giFT/lib/log.c	30;"	d	file:
LOG_EMERG	/home/jasta/c/giFT/win32/config.h	176;"	d
LOG_ERR	/home/jasta/c/giFT/lib/log.c	42;"	d	file:
LOG_ERR	/home/jasta/c/giFT/win32/config.h	179;"	d
LOG_FORMAT	/home/jasta/c/giFT/lib/log.c	64;"	d	file:
LOG_INFO	/home/jasta/c/giFT/lib/log.c	54;"	d	file:
LOG_INFO	/home/jasta/c/giFT/win32/config.h	182;"	d
LOG_NOTICE	/home/jasta/c/giFT/lib/log.c	50;"	d	file:
LOG_NOTICE	/home/jasta/c/giFT/win32/config.h	181;"	d
LOG_PERROR	/home/jasta/c/giFT/lib/log.h	46;"	d
LOG_USER	/home/jasta/c/giFT/lib/log.c	26;"	d	file:
LOG_WARNING	/home/jasta/c/giFT/lib/log.c	46;"	d	file:
LOG_WARNING	/home/jasta/c/giFT/win32/config.h	180;"	d
LOW_PORT	/home/jasta/c/giFT/win32/giFTsetup/giFTsetup.c	/^static unsigned short LOW_PORT  = GIFT_INTERFACE_PORT + 2;$/;"	v	file:
List	/home/jasta/c/giFT/lib/list.h	/^} List;$/;"	t
ListDataset	/home/jasta/c/giFT/lib/list_dataset.h	/^} ListDataset;$/;"	t
ListForeachFunc	/home/jasta/c/giFT/lib/list.h	/^typedef int (*ListForeachFunc) (void *data, void *udata);$/;"	t
ListLock	/home/jasta/c/giFT/lib/list_lock.h	/^} ListLock;$/;"	t
ListQueue	/home/jasta/c/giFT/lib/list_queue.h	/^} ListQueue;$/;"	t
LogOptions	/home/jasta/c/giFT/lib/log.h	/^} LogOptions;$/;"	t
MAINTAIN_LINKS_TIMER	/home/jasta/c/giFT/OpenFT/openft.c	38;"	d	file:
MAIN_CLASS	/home/jasta/c/giFT/win32/giFTsetup/giFTsetup.c	72;"	d	file:
MAIN_FIREWALLED	/home/jasta/c/giFT/win32/giFTsetup/giFTsetup.c	77;"	d	file:
MAIN_HTTP_PORT	/home/jasta/c/giFT/win32/giFTsetup/giFTsetup.c	74;"	d	file:
MAIN_PORT	/home/jasta/c/giFT/win32/giFTsetup/giFTsetup.c	73;"	d	file:
MAIN_SETUP	/home/jasta/c/giFT/win32/giFTsetup/giFTsetup.c	68;"	d	file:
MAP_FAILED	/home/jasta/c/giFT/src/md5.c	34;"	d	file:
MAX	/home/jasta/c/giFT/lib/gift.h	121;"	d
MAX	/home/jasta/c/giFT/src/perl.c	28;"	d	file:
MAX_CHILDREN	/home/jasta/c/giFT/OpenFT/protocol.c	38;"	d	file:
MAX_DISCONNECT_COUNT	/home/jasta/c/giFT/OpenFT/netorg.c	98;"	d	file:
MAX_DOWNLOAD_BW	/home/jasta/c/giFT/src/download.c	63;"	d	file:
MAX_HEARTBEAT	/home/jasta/c/giFT/OpenFT/node.c	46;"	d	file:
MAX_INACTIVE	/home/jasta/c/giFT/src/download.c	47;"	d	file:
MAX_PARENTS	/home/jasta/c/giFT/OpenFT/utils.c	38;"	d	file:
MAX_PENDING_CONNECTIONS	/home/jasta/c/giFT/OpenFT/netorg.c	92;"	d	file:
MAX_PERUSER_DOWNLOADS	/home/jasta/c/giFT/src/download.c	50;"	d	file:
MAX_PERUSER_UPLOADS	/home/jasta/c/giFT/src/upload.c	43;"	d	file:
MAX_RESULTS	/home/jasta/c/giFT/ui/fe_search.c	35;"	d	file:
MAX_UPLOAD_BW	/home/jasta/c/giFT/src/upload.c	52;"	d	file:
MAX_USER_CONNECTIONS	/home/jasta/c/giFT/OpenFT/netorg.c	95;"	d	file:
MD5Context	/home/jasta/c/giFT/src/md5.c	/^struct MD5Context$/;"	s	file:
MD5Final	/home/jasta/c/giFT/src/md5.c	/^static void MD5Final(unsigned char digest[HASH_LEN], struct MD5Context *ctx)$/;"	f	file:
MD5Init	/home/jasta/c/giFT/src/md5.c	/^static void MD5Init(struct MD5Context *ctx)$/;"	f	file:
MD5STEP	/home/jasta/c/giFT/src/md5.c	242;"	d	file:
MD5SUM_READ	/home/jasta/c/giFT/src/share_cache.c	82;"	d	file:
MD5Transform	/home/jasta/c/giFT/src/md5.c	/^static void MD5Transform(ft_uint32 buf[4], ft_uint32 const in[HASH_LEN])$/;"	f	file:
MD5Update	/home/jasta/c/giFT/src/md5.c	/^static void MD5Update(struct MD5Context *ctx, unsigned char const *buf, unsigned len)$/;"	f	file:
MD5_CTX	/home/jasta/c/giFT/src/md5.c	/^typedef struct MD5Context MD5_CTX;$/;"	t	file:
MENU_ABOUT	/home/jasta/c/giFT/win32/giFTtray/giFTtray.c	/^	MENU_ABOUT,$/;"	e	file:
MENU_ENABLE_DISABLE	/home/jasta/c/giFT/win32/giFTtray/giFTtray.c	/^	MENU_ENABLE_DISABLE,$/;"	e	file:
MENU_EXIT	/home/jasta/c/giFT/win32/giFTtray/giFTtray.c	/^	MENU_EXIT,$/;"	e	file:
MENU_OPTIONS	/home/jasta/c/giFT/win32/giFTtray/giFTtray.c	/^	MENU_OPTIONS,$/;"	e	file:
MENU_RESTART	/home/jasta/c/giFT/win32/giFTtray/giFTtray.c	/^	MENU_RESTART		\/* temporary until the <opt> command works *\/$/;"	e	file:
MENU_START	/home/jasta/c/giFT/win32/giFTtray/giFTtray.c	/^	MENU_START,$/;"	e	file:
MENU_STOP	/home/jasta/c/giFT/win32/giFTtray/giFTtray.c	/^	MENU_STOP,$/;"	e	file:
MENU_VIEW_LOG	/home/jasta/c/giFT/win32/giFTtray/giFTtray.c	/^	MENU_VIEW_LOG,$/;"	e	file:
MIN	/home/jasta/c/giFT/lib/gift.h	117;"	d
MIN	/home/jasta/c/giFT/src/perl.c	27;"	d	file:
MINUTES	/home/jasta/c/giFT/lib/event.h	38;"	d
MIN_INACTIVE	/home/jasta/c/giFT/src/download.c	46;"	d	file:
MIN_INCREMENT	/home/jasta/c/giFT/src/download.c	48;"	d	file:
MSEC	/home/jasta/c/giFT/lib/event.h	36;"	d
MY_WM_SOCKET_EVENT	/home/jasta/c/giFT/win32/giFTtray/giFTtray.c	/^	MY_WM_SOCKET_EVENT$/;"	e	file:
MY_WM_TRAY	/home/jasta/c/giFT/win32/giFTtray/giFTtray.c	/^	MY_WM_TRAY			= WM_USER,$/;"	e	file:
MenuCreateFunc	/home/jasta/c/giFT/ui/fe_menu.h	/^typedef int (*MenuCreateFunc) (GtkWidget *w, void *data, guint button,$/;"	t
Mortal	/home/jasta/c/giFT/src/mortal.h	/^} Mortal;$/;"	t
MortalDestroyFunc	/home/jasta/c/giFT/src/mortal.h	/^typedef void (*MortalDestroyFunc) (void *obj);$/;"	t
NBRead	/home/jasta/c/giFT/lib/nb.h	/^} NBRead;$/;"	t
NODE	/home/jasta/c/giFT/OpenFT/node.h	100;"	d
NODE_CHILD	/home/jasta/c/giFT/OpenFT/node.h	/^		NODE_CHILD  = 0x08,        \/* node is sharing files to 'self' *\/$/;"	e
NODE_CONNECTED	/home/jasta/c/giFT/OpenFT/node.h	/^		NODE_CONNECTED     = 0x02, \/* first packet is seen *\/$/;"	e
NODE_CONNECTING	/home/jasta/c/giFT/OpenFT/node.h	/^		NODE_CONNECTING    = 0x01, \/* pending *\/$/;"	e
NODE_DISCONNECTED	/home/jasta/c/giFT/OpenFT/node.h	/^		NODE_DISCONNECTED  = 0x00, \/* functionless node *\/$/;"	e
NODE_IDLE	/home/jasta/c/giFT/OpenFT/node.h	/^		NODE_IDLE          = 0x04, \/* after handshake *\/$/;"	e
NODE_INDEX	/home/jasta/c/giFT/OpenFT/node.h	/^		NODE_INDEX  = 0x04,$/;"	e
NODE_NONE	/home/jasta/c/giFT/OpenFT/node.h	/^		NODE_NONE   = 0x00,$/;"	e
NODE_PARENT	/home/jasta/c/giFT/OpenFT/node.h	/^		NODE_PARENT = 0x10,        \/* node has 'self' files shared *\/$/;"	e
NODE_SEARCH	/home/jasta/c/giFT/OpenFT/node.h	/^		NODE_SEARCH = 0x02,$/;"	e
NODE_USER	/home/jasta/c/giFT/OpenFT/node.h	/^		NODE_USER   = 0x01,$/;"	e
NOT_CONNECTED	/home/jasta/c/giFT/win32/giFTtray/giFTtray.c	64;"	d	file:
Node	/home/jasta/c/giFT/OpenFT/node.h	/^} Node;$/;"	t
OBJECT_DATA	/home/jasta/c/giFT/ui/fe_obj.h	26;"	d
OBJ_DATA	/home/jasta/c/giFT/ui/fe_obj.h	47;"	d
OBJ_FREE	/home/jasta/c/giFT/ui/fe_obj.h	24;"	d
OBJ_NEW	/home/jasta/c/giFT/ui/fe_obj.h	22;"	d
OPENFT_LOCAL_ALLOW	/home/jasta/c/giFT/OpenFT/http_server.c	31;"	d	file:
OPENFT_LOCAL_ALLOW	/home/jasta/c/giFT/OpenFT/netorg.c	31;"	d	file:
OPENFT_LOCAL_MODE	/home/jasta/c/giFT/OpenFT/http_server.c	29;"	d	file:
OPENFT_LOCAL_MODE	/home/jasta/c/giFT/OpenFT/netorg.c	29;"	d	file:
OPENFT_MAJOR	/home/jasta/c/giFT/OpenFT/openft.h	31;"	d
OPENFT_MICRO	/home/jasta/c/giFT/OpenFT/openft.h	33;"	d
OPENFT_MINOR	/home/jasta/c/giFT/OpenFT/openft.h	32;"	d
OPENFT_REV	/home/jasta/c/giFT/OpenFT/openft.h	34;"	d
ObjDestroyFunc	/home/jasta/c/giFT/ui/fe_obj.c	/^typedef void (*ObjDestroyFunc) (void *obj);$/;"	t	file:
Object	/home/jasta/c/giFT/ui/fe_obj.h	/^} Object;$/;"	t
ObjectData	/home/jasta/c/giFT/ui/fe_obj.h	/^} ObjectData;$/;"	t
OpenFT_init	/home/jasta/c/giFT/OpenFT/openft.c	/^int OpenFT_init (Protocol *p)$/;"	f
PACK	/home/jasta/c/giFT/ui/fe_ui.h	34;"	d
PACKAGE	/home/jasta/c/giFT/config.h	111;"	d
PACKAGE	/home/jasta/c/giFT/src/perl.c	19;"	d	file:
PACKAGE	/home/jasta/c/giFT/src/perl.c	36;"	d	file:
PACKAGE	/home/jasta/c/giFT/win32/config.h	25;"	d
PACKAGE_BUGREPORT	/home/jasta/c/giFT/config.h	114;"	d
PACKAGE_BUGREPORT	/home/jasta/c/giFT/win32/config.h	123;"	d
PACKAGE_NAME	/home/jasta/c/giFT/config.h	117;"	d
PACKAGE_NAME	/home/jasta/c/giFT/win32/config.h	126;"	d
PACKAGE_STRING	/home/jasta/c/giFT/config.h	120;"	d
PACKAGE_STRING	/home/jasta/c/giFT/win32/config.h	129;"	d
PACKAGE_TARNAME	/home/jasta/c/giFT/config.h	123;"	d
PACKAGE_TARNAME	/home/jasta/c/giFT/win32/config.h	132;"	d
PACKAGE_VERSION	/home/jasta/c/giFT/config.h	126;"	d
PACKAGE_VERSION	/home/jasta/c/giFT/win32/config.h	135;"	d
PACK_END	/home/jasta/c/giFT/ui/fe_ui.h	38;"	d
PACK_EXPAND	/home/jasta/c/giFT/ui/fe_ui.h	31;"	d
PACK_FILL	/home/jasta/c/giFT/ui/fe_ui.h	30;"	d
PACK_NONE	/home/jasta/c/giFT/ui/fe_ui.h	29;"	d
PAGE_COUNT	/home/jasta/c/giFT/win32/giFTsetup/giFTsetup.c	54;"	d	file:
PAGE_DOWNLOAD_DIR	/home/jasta/c/giFT/win32/giFTsetup/giFTsetup.c	/^	PAGE_DOWNLOAD_DIR,$/;"	e	file:
PAGE_FINISH	/home/jasta/c/giFT/win32/giFTsetup/giFTsetup.c	/^	PAGE_FINISH$/;"	e	file:
PAGE_FIREWALL	/home/jasta/c/giFT/win32/giFTsetup/giFTsetup.c	/^	PAGE_FIREWALL,$/;"	e	file:
PAGE_INTRO	/home/jasta/c/giFT/win32/giFTsetup/giFTsetup.c	/^	PAGE_INTRO,$/;"	e	file:
PAGE_NODE_CLASS	/home/jasta/c/giFT/win32/giFTsetup/giFTsetup.c	/^	PAGE_NODE_CLASS,$/;"	e	file:
PAGE_SHARED_DIRS	/home/jasta/c/giFT/win32/giFTsetup/giFTsetup.c	/^	PAGE_SHARED_DIRS,$/;"	e	file:
PARENT_FUNC	/home/jasta/c/giFT/lib/platform.h	54;"	d
PARENT_FUNC	/home/jasta/c/giFT/src/share_cache.c	/^static PARENT_FUNC (parent_update_index)$/;"	f	file:
PATH_MAX	/home/jasta/c/giFT/lib/file.h	50;"	d
PERSISTENT_HTTP	/home/jasta/c/giFT/OpenFT/xfer.c	30;"	d	file:
PF_LOCAL	/home/jasta/c/giFT/lib/platform.c	649;"	d	file:
PLUGIN_DIR	/home/jasta/c/giFT/acconfig.h	1;"	d
PLUGIN_DIR	/home/jasta/c/giFT/config.h	3;"	d
PREF_APPLY	/home/jasta/c/giFT/ui/fe_pref.c	29;"	d	file:
PREF_CLOSE	/home/jasta/c/giFT/ui/fe_pref.c	28;"	d	file:
PROTOCOL_CHUNK_RESUME	/home/jasta/c/giFT/lib/protocol.h	/^	PROTOCOL_CHUNK_RESUME,$/;"	e
PROTOCOL_CHUNK_SUSPEND	/home/jasta/c/giFT/lib/protocol.h	/^	PROTOCOL_CHUNK_SUSPEND,$/;"	e
PROTOCOL_DOWNLOAD	/home/jasta/c/giFT/lib/protocol.h	/^	PROTOCOL_DOWNLOAD,$/;"	e
PROTOCOL_SHARE	/home/jasta/c/giFT/lib/protocol.h	/^	PROTOCOL_SHARE = 0,$/;"	e
PROTOCOL_SHARE_ADD	/home/jasta/c/giFT/lib/protocol.h	/^	PROTOCOL_SHARE_ADD = 0,$/;"	e
PROTOCOL_SHARE_FLUSH	/home/jasta/c/giFT/lib/protocol.h	/^	PROTOCOL_SHARE_FLUSH,              \/* remove all shares with your server *\/$/;"	e
PROTOCOL_SHARE_REMOVE	/home/jasta/c/giFT/lib/protocol.h	/^	PROTOCOL_SHARE_REMOVE,$/;"	e
PROTOCOL_SHARE_SYNC	/home/jasta/c/giFT/lib/protocol.h	/^	PROTOCOL_SHARE_SYNC,               \/* add them all again *\/$/;"	e
PROTOCOL_SOURCE_REMOVE	/home/jasta/c/giFT/lib/protocol.h	/^	PROTOCOL_SOURCE_REMOVE,$/;"	e
PROTOCOL_TRANSFER_CANCEL	/home/jasta/c/giFT/lib/protocol.h	/^	PROTOCOL_TRANSFER_CANCEL,$/;"	e
PROTOCOL_TRANSFER_REGISTER	/home/jasta/c/giFT/lib/protocol.h	/^	PROTOCOL_TRANSFER_REGISTER,        \/* register a new upload *\/$/;"	e
PROTOCOL_TRANSFER_START	/home/jasta/c/giFT/lib/protocol.h	/^	PROTOCOL_TRANSFER_START,$/;"	e
PROTOCOL_TRANSFER_UNREGISTER	/home/jasta/c/giFT/lib/protocol.h	/^	PROTOCOL_TRANSFER_UNREGISTER,      \/* unregister a complete upload *\/$/;"	e
PROTOCOL_UPLOAD	/home/jasta/c/giFT/lib/protocol.h	/^	PROTOCOL_UPLOAD$/;"	e
P_INT	/home/jasta/c/giFT/giftconfig.h	21;"	d
P_INT	/home/jasta/c/giFT/win32/giftconfig.h	36;"	d
ParentFunc	/home/jasta/c/giFT/lib/platform.h	/^typedef int (*ParentFunc) (char *data, int len, void *udata);$/;"	t
ParsePacketFunc	/home/jasta/c/giFT/ui/fe_daemon.h	/^typedef int (*ParsePacketFunc) (char *head, int keys,$/;"	t
Protocol	/home/jasta/c/giFT/lib/protocol.h	/^} Protocol;$/;"	t
ProtocolCallback	/home/jasta/c/giFT/lib/protocol.h	/^typedef void (*ProtocolCallback) (void *param, ProtocolCommand cmd,$/;"	t
ProtocolCommand	/home/jasta/c/giFT/lib/protocol.h	/^} ProtocolCommand;$/;"	t
ProtocolCommandDomain	/home/jasta/c/giFT/lib/protocol.h	/^} ProtocolCommandDomain;$/;"	t
ProtocolHandler	/home/jasta/c/giFT/OpenFT/protocol.c	/^typedef void (*ProtocolHandler) (Protocol *p, Connection *c, FTPacket *packet);$/;"	t	file:
ProtocolInit	/home/jasta/c/giFT/lib/protocol.h	/^typedef int  (*ProtocolInit)     (struct _protocol *p);$/;"	t
QueueWriteFunc	/home/jasta/c/giFT/lib/queue.h	/^typedef int (*QueueWriteFunc) (Connection *c, void *data, void *udata);$/;"	t
ROW_GET_TEXT	/home/jasta/c/giFT/ui/fe_utils.h	38;"	d
RTLD_LAZY	/home/jasta/c/giFT/src/plugin.c	36;"	d	file:
RW_BUFFER	/home/jasta/c/giFT/lib/network.h	57;"	d
RW_SOCKBUFFER	/home/jasta/c/giFT/lib/network.h	63;"	d
R_OK	/home/jasta/c/giFT/lib/platform.c	38;"	d	file:
SEARCH_FILENAME	/home/jasta/c/giFT/OpenFT/search.h	/^	SEARCH_FILENAME = 0x01,$/;"	e
SEARCH_HIDDEN	/home/jasta/c/giFT/OpenFT/search.h	/^	SEARCH_HIDDEN   = 0x10  \/* the HIDDEN flag indicates that the human$/;"	e
SEARCH_HOST	/home/jasta/c/giFT/OpenFT/search.h	/^	SEARCH_HOST     = 0x04,$/;"	e
SEARCH_LOCAL	/home/jasta/c/giFT/OpenFT/search.h	/^	SEARCH_LOCAL    = 0x08,$/;"	e
SEARCH_MD5	/home/jasta/c/giFT/OpenFT/search.h	/^	SEARCH_MD5      = 0x02,$/;"	e
SECONDS	/home/jasta/c/giFT/lib/event.h	37;"	d
SET_NODE_DATA	/home/jasta/c/giFT/ui/fe_utils.h	30;"	d
SET_PARENT	/home/jasta/c/giFT/ui/fe_utils.h	34;"	d
SET_ROW_DATA	/home/jasta/c/giFT/ui/fe_utils.h	27;"	d
SHARE	/home/jasta/c/giFT/ui/fe_share.h	42;"	d
SHARE_COMPLETED	/home/jasta/c/giFT/src/share_cache.c	75;"	d	file:
SHARE_DB_TIMER	/home/jasta/c/giFT/OpenFT/share_db.c	26;"	d	file:
SHARING_ROOT	/home/jasta/c/giFT/win32/giFTsetup/giFTsetup.c	70;"	d	file:
SHUT_RDWR	/home/jasta/c/giFT/lib/network.c	30;"	d	file:
SIZEOF_INT	/home/jasta/c/giFT/config.h	129;"	d
SIZEOF_INT	/home/jasta/c/giFT/win32/config.h	138;"	d
SIZEOF_LONG	/home/jasta/c/giFT/config.h	132;"	d
SIZEOF_LONG	/home/jasta/c/giFT/win32/config.h	141;"	d
SIZEOF_SHORT	/home/jasta/c/giFT/config.h	135;"	d
SIZEOF_SHORT	/home/jasta/c/giFT/win32/config.h	144;"	d
SIZEOF_VOID_P	/home/jasta/c/giFT/config.h	138;"	d
SIZEOF_VOID_P	/home/jasta/c/giFT/win32/config.h	147;"	d
SLEEP_BETWEEN_ATTEMPTS	/home/jasta/c/giFT/win32/giFTtray/giFTtray.c	355;"	d	file:
SOURCE_ACTIVE	/home/jasta/c/giFT/src/transfer.h	/^	SOURCE_ACTIVE,           \/* set once data has started coming in *\/$/;"	e
SOURCE_CANCELLED	/home/jasta/c/giFT/src/transfer.h	/^	SOURCE_CANCELLED,        \/* remote end cancelled an active transfer *\/$/;"	e
SOURCE_COMPLETE	/home/jasta/c/giFT/src/transfer.h	/^	SOURCE_COMPLETE,         \/* last known event was that the chunk associated$/;"	e
SOURCE_PAUSED	/home/jasta/c/giFT/src/transfer.h	/^	SOURCE_PAUSED,           \/* source has been explicitly paused by user *\/$/;"	e
SOURCE_QUEUED_LOCAL	/home/jasta/c/giFT/src/transfer.h	/^	SOURCE_QUEUED_LOCAL,     \/* we are preventing ourselves from downloading$/;"	e
SOURCE_QUEUED_REMOTE	/home/jasta/c/giFT/src/transfer.h	/^	SOURCE_QUEUED_REMOTE,    \/* protocol says the other end is preventing us$/;"	e
SOURCE_TIMEOUT	/home/jasta/c/giFT/src/transfer.h	/^	SOURCE_TIMEOUT,          \/* date timeout *\/$/;"	e
SOURCE_UNUSED	/home/jasta/c/giFT/src/transfer.h	/^	SOURCE_UNUSED = 0,       \/* this source is unused and (possibly) waiting$/;"	e
SOURCE_WAITING	/home/jasta/c/giFT/src/transfer.h	/^	SOURCE_WAITING,          \/* asked the protocol to download but haven't$/;"	e
STATS_INTERVAL	/home/jasta/c/giFT/ui/fe_download.c	32;"	d	file:
STDC_HEADERS	/home/jasta/c/giFT/config.h	141;"	d
STDC_HEADERS	/home/jasta/c/giFT/win32/config.h	150;"	d
STRCMP	/home/jasta/c/giFT/lib/parse.c	/^int STRCMP (char *s1, char *s2)$/;"	f
STRDUP	/home/jasta/c/giFT/lib/parse.c	/^char *STRDUP (char *string)$/;"	f
STRDUP	/home/jasta/c/giFT/lib/parse.h	37;"	d
STRDUP_N	/home/jasta/c/giFT/lib/parse.c	/^char *STRDUP_N (char *string, size_t string_len)$/;"	f
STRINGF	/home/jasta/c/giFT/lib/parse.c	47;"	d	file:
STR_APPEND	/home/jasta/c/giFT/OpenFT/packet.c	23;"	d	file:
SUBPROCESS	/home/jasta/c/giFT/lib/platform.c	/^static SUBPROCESS (child_wrapper)$/;"	f	file:
SUBPROCESS	/home/jasta/c/giFT/lib/platform.h	58;"	d
SUBPROCESS	/home/jasta/c/giFT/lib/platform.h	62;"	d
SUPPORTED_FORMATS	/home/jasta/c/giFT/ui/fe_ui.h	45;"	d
S_ISBLK	/home/jasta/c/giFT/lib/platform.h	97;"	d
S_ISCHR	/home/jasta/c/giFT/lib/platform.h	93;"	d
S_ISDIR	/home/jasta/c/giFT/lib/platform.h	85;"	d
S_ISFIFO	/home/jasta/c/giFT/lib/platform.h	89;"	d
S_ISREG	/home/jasta/c/giFT/lib/platform.h	101;"	d
Search	/home/jasta/c/giFT/OpenFT/search.h	/^} Search;$/;"	t
Search	/home/jasta/c/giFT/ui/fe_search.h	/^} Search;$/;"	t
SearchFunc	/home/jasta/c/giFT/OpenFT/search.c	/^typedef int (*SearchFunc) (FileShare *file, struct _match_data *mdata);$/;"	t	file:
Search_Type	/home/jasta/c/giFT/ui/fe_search.h	41;"	d
ShareData	/home/jasta/c/giFT/src/share_file.h	/^} ShareData;$/;"	t
SharedFile	/home/jasta/c/giFT/ui/fe_share.h	/^} SharedFile;$/;"	t
Source	/home/jasta/c/giFT/src/transfer.h	/^} Source;$/;"	t
SourceStatus	/home/jasta/c/giFT/src/transfer.h	/^} SourceStatus;$/;"	t
StringFunc	/home/jasta/c/giFT/lib/parse.c	/^typedef char* (*StringFunc) (char *string, char *needle);$/;"	t	file:
SubprocessData	/home/jasta/c/giFT/lib/platform.h	/^} SubprocessData;$/;"	t
THROTTLE_ENABLE	/home/jasta/c/giFT/src/transfer.h	35;"	d
THROTTLE_THRESHOLD	/home/jasta/c/giFT/src/transfer.c	35;"	d	file:
THROTTLE_TIME	/home/jasta/c/giFT/src/transfer.h	40;"	d
TICKS_PER_SEC	/home/jasta/c/giFT/src/transfer.h	38;"	d
TICK_INTERVAL	/home/jasta/c/giFT/src/transfer.h	39;"	d
TIMER_FLUSH	/home/jasta/c/giFT/ui/fe_search.c	36;"	d	file:
TIME_ADD	/home/jasta/c/giFT/lib/event.c	44;"	d	file:
TIME_ADD	/home/jasta/c/giFT/research/test.c	23;"	d	file:
TIME_ADDI	/home/jasta/c/giFT/lib/event.c	56;"	d	file:
TIME_CLEAR	/home/jasta/c/giFT/lib/event.c	79;"	d	file:
TIME_CMP	/home/jasta/c/giFT/lib/event.c	39;"	d	file:
TIME_EQ	/home/jasta/c/giFT/lib/event.c	36;"	d	file:
TIME_GT	/home/jasta/c/giFT/lib/event.c	35;"	d	file:
TIME_ISSET	/home/jasta/c/giFT/lib/event.c	80;"	d	file:
TIME_LT	/home/jasta/c/giFT/lib/event.c	34;"	d	file:
TIME_SUB	/home/jasta/c/giFT/lib/event.c	68;"	d	file:
TIME_SUB	/home/jasta/c/giFT/research/test.c	12;"	d	file:
TIME_WITH_SYS_TIME	/home/jasta/c/giFT/config.h	144;"	d
TOKEN_DELIM	/home/jasta/c/giFT/OpenFT/search.c	85;"	d	file:
TOKEN_PUNCT	/home/jasta/c/giFT/OpenFT/search.c	84;"	d	file:
TRACE	/home/jasta/c/giFT/lib/log.h	77;"	d
TRACE	/home/jasta/c/giFT/lib/log.h	94;"	d
TRACE_FUNC	/home/jasta/c/giFT/lib/log.h	83;"	d
TRACE_FUNC	/home/jasta/c/giFT/lib/log.h	95;"	d
TRACE_MEM	/home/jasta/c/giFT/lib/log.h	84;"	d
TRACE_MEM	/home/jasta/c/giFT/lib/log.h	96;"	d
TRACE_SOCK	/home/jasta/c/giFT/OpenFT/openft.h	79;"	d
TRACE_SOCK	/home/jasta/c/giFT/OpenFT/openft.h	81;"	d
TRACE_SOCK	/home/jasta/c/giFT/lib/log.h	80;"	d
TRANSFER_ACTIVE	/home/jasta/c/giFT/ui/fe_transfer.h	/^	TRANSFER_ACTIVE,$/;"	e
TRANSFER_CANCELLED	/home/jasta/c/giFT/ui/fe_transfer.h	/^	TRANSFER_CANCELLED$/;"	e
TRANSFER_DOWNLOAD	/home/jasta/c/giFT/src/transfer.h	/^	TRANSFER_DOWNLOAD,$/;"	e	enum:_transfer_type
TRANSFER_FINISHED	/home/jasta/c/giFT/ui/fe_transfer.h	/^	TRANSFER_FINISHED,$/;"	e
TRANSFER_PAUSED	/home/jasta/c/giFT/ui/fe_transfer.h	/^	TRANSFER_PAUSED,$/;"	e
TRANSFER_UPLOAD	/home/jasta/c/giFT/src/transfer.h	/^	TRANSFER_UPLOAD$/;"	e	enum:_transfer_type
TRANSFER_WAITING	/home/jasta/c/giFT/ui/fe_transfer.h	/^	TRANSFER_WAITING = 0,$/;"	e
TRUE	/home/jasta/c/giFT/OpenFT/openft.h	92;"	d
TRUE	/home/jasta/c/giFT/lib/gift.h	107;"	d
TR_SAMPLES	/home/jasta/c/giFT/ui/fe_transfer.h	28;"	d
Timer	/home/jasta/c/giFT/lib/event.h	/^} Timer;$/;"	t
TimerCallback	/home/jasta/c/giFT/lib/event.h	/^typedef int (*TimerCallback) (void *data);$/;"	t
Transfer	/home/jasta/c/giFT/src/transfer.h	/^} Transfer;$/;"	t
Transfer	/home/jasta/c/giFT/ui/fe_transfer.h	/^} Transfer;$/;"	t
TransferType	/home/jasta/c/giFT/src/transfer.h	/^} TransferType;$/;"	t
Transfer_Type	/home/jasta/c/giFT/ui/fe_transfer.h	45;"	d
Tree	/home/jasta/c/giFT/lib/tree.h	/^} Tree;$/;"	t
TreeForeach	/home/jasta/c/giFT/lib/tree.h	/^typedef void (*TreeForeach)     (TreeNode *node, void *udata,$/;"	t
TreeNode	/home/jasta/c/giFT/lib/tree.h	/^} TreeNode;$/;"	t
TreeNodeCompare	/home/jasta/c/giFT/lib/tree.h	/^typedef int  (*TreeNodeCompare) (void *a, void *b);$/;"	t
USE_CONN_HASH	/home/jasta/c/giFT/OpenFT/netorg.c	67;"	d	file:
USE_CONN_SPREAD	/home/jasta/c/giFT/OpenFT/netorg.c	42;"	d	file:
USE_DLOPEN	/home/jasta/c/giFT/acconfig.h	3;"	d
USE_DLOPEN	/home/jasta/c/giFT/config.h	5;"	d
USE_MMAP	/home/jasta/c/giFT/src/md5.c	51;"	d	file:
USE_MMAP	/home/jasta/c/giFT/src/md5.c	55;"	d	file:
USE_PERL	/home/jasta/c/giFT/acconfig.h	5;"	d
USE_PERL	/home/jasta/c/giFT/config.h	7;"	d
USE_ZLIB	/home/jasta/c/giFT/acconfig.h	4;"	d
USE_ZLIB	/home/jasta/c/giFT/config.h	6;"	d
VALIDATE	/home/jasta/c/giFT/lib/log.h	87;"	d
VALIDATE	/home/jasta/c/giFT/lib/log.h	97;"	d
VALIDATE_TIMEOUT_TIMER	/home/jasta/c/giFT/lib/event.c	28;"	d	file:
VERSION	/home/jasta/c/giFT/config.h	150;"	d
VERSION	/home/jasta/c/giFT/win32/config.h	28;"	d
WIN32_LEAN_AND_MEAN	/home/jasta/c/giFT/win32/config.h	187;"	d
WINDOW_CLASS	/home/jasta/c/giFT/win32/giFTtray/giFTtray.c	39;"	d	file:
WS_MAJOR	/home/jasta/c/giFT/lib/platform.c	35;"	d	file:
WS_MINOR	/home/jasta/c/giFT/lib/platform.c	36;"	d	file:
WinMain	/home/jasta/c/giFT/src/main.c	/^int WINAPI WinMain (HINSTANCE instance, HINSTANCE prev_instance,$/;"	f
WinMain	/home/jasta/c/giFT/win32/giFTsetup/giFTsetup.c	/^int WINAPI WinMain (HINSTANCE instance, HINSTANCE prev_instance,$/;"	f
WinMain	/home/jasta/c/giFT/win32/giFTtray/giFTtray.c	/^int WINAPI WinMain (HINSTANCE instance, HINSTANCE prev_instance,$/;"	f
WinMain	/home/jasta/c/giFT/win32/loader.c	/^int WINAPI WinMain (HINSTANCE instance, HINSTANCE prev_instance,$/;"	f
WriteQueue	/home/jasta/c/giFT/lib/queue.h	/^} WriteQueue;$/;"	t
XS	/home/jasta/c/giFT/src/perl.c	/^XS (XS_giFT_add_hook)$/;"	f
XS	/home/jasta/c/giFT/src/perl.c	/^XS (XS_giFT_log)$/;"	f
XS	/home/jasta/c/giFT/src/perl.c	/^XS (XS_giFT_register)$/;"	f
XS_giFT_add_hook	/home/jasta/c/giFT/src/perl.c	/^XS (XS_giFT_add_hook);$/;"	v
XS_giFT_log	/home/jasta/c/giFT/src/perl.c	/^XS (XS_giFT_log);$/;"	v
XS_giFT_register	/home/jasta/c/giFT/src/perl.c	/^XS (XS_giFT_register);$/;"	v
_	/home/jasta/c/giFT/src/perl.c	70;"	d	file:
_APS_NEXT_COMMAND_VALUE	/home/jasta/c/giFT/win32/giFTsetup/resource.h	37;"	d
_APS_NEXT_COMMAND_VALUE	/home/jasta/c/giFT/win32/resource.h	12;"	d
_APS_NEXT_CONTROL_VALUE	/home/jasta/c/giFT/win32/giFTsetup/resource.h	38;"	d
_APS_NEXT_CONTROL_VALUE	/home/jasta/c/giFT/win32/resource.h	13;"	d
_APS_NEXT_RESOURCE_VALUE	/home/jasta/c/giFT/win32/giFTsetup/resource.h	36;"	d
_APS_NEXT_RESOURCE_VALUE	/home/jasta/c/giFT/win32/resource.h	11;"	d
_APS_NEXT_SYMED_VALUE	/home/jasta/c/giFT/win32/giFTsetup/resource.h	39;"	d
_APS_NEXT_SYMED_VALUE	/home/jasta/c/giFT/win32/resource.h	14;"	d
_APS_NO_MFC	/home/jasta/c/giFT/win32/giFTsetup/resource.h	35;"	d
__CONFIG_H	/home/jasta/c/giFT/win32/config.h	22;"	d
__CONF_H	/home/jasta/c/giFT/lib/conf.h	18;"	d
__CONNECTION_H__	/home/jasta/c/giFT/lib/connection.h	18;"	d
__DAEMON_H	/home/jasta/c/giFT/OpenFT/daemon.h	18;"	d
__DAEMON_H	/home/jasta/c/giFT/src/daemon.h	18;"	d
__DATASET_H	/home/jasta/c/giFT/lib/dataset.h	18;"	d
__DOWNLOAD_H	/home/jasta/c/giFT/src/download.h	18;"	d
__EVENT_H	/home/jasta/c/giFT/lib/event.h	18;"	d
__FE_CONNECT_H	/home/jasta/c/giFT/ui/fe_connect.h	18;"	d
__FE_DAEMON_H	/home/jasta/c/giFT/ui/fe_daemon.h	18;"	d
__FE_DOWNLOAD_H	/home/jasta/c/giFT/ui/fe_download.h	18;"	d
__FE_FIFO_H	/home/jasta/c/giFT/ui/fe_fifo.h	18;"	d
__FE_MENU_H	/home/jasta/c/giFT/ui/fe_menu.h	18;"	d
__FE_MENU_IF_H	/home/jasta/c/giFT/ui/fe_menu-if.h	18;"	d
__FE_OBJ_H	/home/jasta/c/giFT/ui/fe_obj.h	18;"	d
__FE_PREF_H	/home/jasta/c/giFT/ui/fe_pref.h	18;"	d
__FE_SEARCH_H	/home/jasta/c/giFT/ui/fe_search.h	18;"	d
__FE_SHARE_H	/home/jasta/c/giFT/ui/fe_share.h	18;"	d
__FE_STATS_H	/home/jasta/c/giFT/ui/fe_stats.h	18;"	d
__FE_TRANSFER_H	/home/jasta/c/giFT/ui/fe_transfer.h	18;"	d
__FE_UI_H	/home/jasta/c/giFT/ui/fe_ui.h	18;"	d
__FE_UI_UTILS_H	/home/jasta/c/giFT/ui/fe_ui_utils.h	18;"	d
__FE_UPLOAD_H	/home/jasta/c/giFT/ui/fe_upload.h	18;"	d
__FE_UTILS_H	/home/jasta/c/giFT/ui/fe_utils.h	18;"	d
__FILE_H	/home/jasta/c/giFT/lib/file.h	18;"	d
__FT_SHARE_H	/home/jasta/c/giFT/OpenFT/share.h	18;"	d
__GIFTCONFIG_H	/home/jasta/c/giFT/giftconfig.h	7;"	d
__GIFTCONFIG_H	/home/jasta/c/giFT/win32/giftconfig.h	22;"	d
__GIFT_FE_H	/home/jasta/c/giFT/ui/gift-fe.h	18;"	d
__GIFT_H	/home/jasta/c/giFT/lib/gift.h	18;"	d
__GIFT_MAIN_H	/home/jasta/c/giFT/src/main.h	18;"	d
__GIFT_PERL_H	/home/jasta/c/giFT/src/perlc.h	18;"	d
__HASH_H	/home/jasta/c/giFT/lib/hash.h	16;"	d
__HOOK_H	/home/jasta/c/giFT/src/hook.h	18;"	d
__HTML_H	/home/jasta/c/giFT/OpenFT/html.h	18;"	d
__HTTP_CLIENT_H	/home/jasta/c/giFT/OpenFT/http_client.h	18;"	d
__HTTP_SERVER_H	/home/jasta/c/giFT/OpenFT/http_server.h	18;"	d
__IF_EVENT_H	/home/jasta/c/giFT/lib/if_event.h	18;"	d
__IF_PORT_H	/home/jasta/c/giFT/src/if_port.h	18;"	d
__INTERFACE_H	/home/jasta/c/giFT/lib/interface.h	18;"	d
__LIST_H	/home/jasta/c/giFT/lib/list.h	18;"	d
__LIST_KV_H	/home/jasta/c/giFT/lib/list_dataset.h	18;"	d
__LIST_LOCK_H	/home/jasta/c/giFT/lib/list_lock.h	2;"	d
__LIST_QUEUE_H	/home/jasta/c/giFT/lib/list_queue.h	2;"	d
__LOG_H	/home/jasta/c/giFT/lib/log.h	18;"	d
__MD5_H	/home/jasta/c/giFT/src/md5.h	18;"	d
__MIME_H	/home/jasta/c/giFT/src/mime.h	18;"	d
__MORTAL_H	/home/jasta/c/giFT/src/mortal.h	18;"	d
__NB_H	/home/jasta/c/giFT/lib/nb.h	18;"	d
__NETORG_H	/home/jasta/c/giFT/OpenFT/netorg.h	18;"	d
__NETWORK_H	/home/jasta/c/giFT/lib/network.h	18;"	d
__NODE_H__	/home/jasta/c/giFT/OpenFT/node.h	18;"	d
__OPENFT_C__	/home/jasta/c/giFT/OpenFT/openft.c	18;"	d	file:
__OPENFT_H__	/home/jasta/c/giFT/OpenFT/openft.h	21;"	d
__OPENFT_PROTOCOL_H__	/home/jasta/c/giFT/OpenFT/protocol.h	18;"	d
__PACKET_H	/home/jasta/c/giFT/OpenFT/packet.h	18;"	d
__PARSE_H	/home/jasta/c/giFT/lib/parse.h	18;"	d
__PLATFORM_H	/home/jasta/c/giFT/lib/platform.h	18;"	d
__PLUGIN_H	/home/jasta/c/giFT/src/plugin.h	18;"	d
__PRETTY_FUNCTION__	/home/jasta/c/giFT/lib/platform.h	81;"	d
__PROTOCOL_H	/home/jasta/c/giFT/lib/protocol.h	18;"	d
__QUEUE_H	/home/jasta/c/giFT/lib/queue.h	18;"	d
__SEARCH_H	/home/jasta/c/giFT/OpenFT/search.h	18;"	d
__SHARE_CACHE_H	/home/jasta/c/giFT/src/share_cache.h	18;"	d
__SHARE_COMP_H	/home/jasta/c/giFT/OpenFT/share_comp.h	18;"	d
__SHARE_DB_H	/home/jasta/c/giFT/OpenFT/share_db.h	18;"	d
__SHARE_FILE_H	/home/jasta/c/giFT/src/share_file.h	18;"	d
__TRANSFER_H	/home/jasta/c/giFT/src/transfer.h	18;"	d
__TREE_H	/home/jasta/c/giFT/lib/tree.h	18;"	d
__UPLOAD_H	/home/jasta/c/giFT/src/upload.h	18;"	d
__UTILS_H	/home/jasta/c/giFT/OpenFT/utils.h	18;"	d
__XFER_H	/home/jasta/c/giFT/OpenFT/xfer.h	18;"	d
_bar	/home/jasta/c/giFT/research/test.c	/^struct _bar$/;"	s	file:
_chunk	/home/jasta/c/giFT/src/transfer.h	/^typedef struct _chunk$/;"	s
_connection	/home/jasta/c/giFT/lib/connection.h	/^typedef struct _connection$/;"	s
_daemon_event	/home/jasta/c/giFT/OpenFT/daemon.c	/^struct _daemon_event$/;"	s	file:
_daemon_event	/home/jasta/c/giFT/ui/fe_daemon.h	/^typedef struct _daemon_event$/;"	s
_dc_event	/home/jasta/c/giFT/src/daemon.c	/^struct _dc_event$/;"	s	file:
_fe_connection	/home/jasta/c/giFT/ui/fe_connect.h	/^typedef struct _fe_connection {$/;"	s
_fe_ev_handler	/home/jasta/c/giFT/ui/fe_daemon.c	/^struct _fe_ev_handler$/;"	s	file:
_file_share	/home/jasta/c/giFT/src/share_file.h	/^typedef struct _file_share$/;"	s
_foo	/home/jasta/c/giFT/research/test.c	/^struct _foo$/;"	s	file:
_free_table	/home/jasta/c/giFT/ui/fe_obj.c	/^struct _free_table$/;"	s	file:
_ft_source	/home/jasta/c/giFT/OpenFT/xfer.c	/^struct _ft_source$/;"	s	file:
_handler_table	/home/jasta/c/giFT/OpenFT/protocol.c	/^struct _handler_table$/;"	s	file:
_hash_node	/home/jasta/c/giFT/lib/hash.h	/^typedef struct _hash_node$/;"	s
_hash_table	/home/jasta/c/giFT/lib/hash.h	/^typedef struct _hash_table$/;"	s
_if_event	/home/jasta/c/giFT/lib/if_event.h	/^typedef struct _if_event$/;"	s
_indirect_source	/home/jasta/c/giFT/OpenFT/http_server.c	/^struct _indirect_source$/;"	s	file:
_list	/home/jasta/c/giFT/lib/list.h	/^typedef struct _list$/;"	s
_match_data	/home/jasta/c/giFT/OpenFT/search.c	/^struct _match_data$/;"	s	file:
_mime_type	/home/jasta/c/giFT/src/mime.c	/^struct _mime_type$/;"	s	file:
_netorg_cursor	/home/jasta/c/giFT/OpenFT/netorg.c	/^struct _netorg_cursor$/;"	s	file:
_object_data	/home/jasta/c/giFT/ui/fe_obj.h	/^typedef struct _object_data$/;"	s
_pair	/home/jasta/c/giFT/lib/list_dataset.c	/^struct _pair$/;"	s	file:
_perl_hook	/home/jasta/c/giFT/src/perl.c	/^struct _perl_hook$/;"	s	file:
_protocol	/home/jasta/c/giFT/lib/protocol.h	/^typedef struct _protocol$/;"	s
_search	/home/jasta/c/giFT/OpenFT/search.h	/^typedef struct _search$/;"	s
_shared_file	/home/jasta/c/giFT/ui/fe_share.h	/^typedef struct _shared_file$/;"	s
_source	/home/jasta/c/giFT/src/transfer.h	/^typedef struct _source$/;"	s
_sroot	/home/jasta/c/giFT/src/share_cache.c	/^struct _sroot$/;"	s	file:
_stats	/home/jasta/c/giFT/OpenFT/daemon.c	/^struct _stats$/;"	s	file:
_transfer	/home/jasta/c/giFT/src/transfer.h	/^typedef struct _transfer$/;"	s
_transfer_type	/home/jasta/c/giFT/src/transfer.h	/^typedef enum _transfer_type$/;"	g
_tree_node	/home/jasta/c/giFT/lib/tree.h	/^typedef struct _tree_node$/;"	s
a	/home/jasta/c/giFT/research/test.c	/^	long a;$/;"	m	struct:_foo	file:
accept_test_port	/home/jasta/c/giFT/OpenFT/utils.c	/^static void accept_test_port (Connection *c, unsigned short port,$/;"	f	file:
accept_test_result	/home/jasta/c/giFT/OpenFT/utils.c	/^static void accept_test_result (Connection *c, Connection *verify, int success)$/;"	f	file:
accept_test_verify	/home/jasta/c/giFT/OpenFT/utils.c	/^static void accept_test_verify (Protocol *p, Connection *verify)$/;"	f	file:
access_log	/home/jasta/c/giFT/OpenFT/xfer.c	/^static void access_log (FT_Transfer *xfer)$/;"	f	file:
activate_chunk	/home/jasta/c/giFT/src/download.c	/^static void activate_chunk (Chunk *chunk, Source *source)$/;"	f	file:
active	/home/jasta/c/giFT/src/transfer.h	/^	int           active;       \/* inactive when first created with 0 sources *\/$/;"	m	struct:_transfer
active	/home/jasta/c/giFT/ui/fe_transfer.h	/^	int active;             \/* pending state   *\/$/;"	m	struct:
active_searches	/home/jasta/c/giFT/OpenFT/search.c	/^static HashTable *active_searches = NULL;$/;"	v	file:
active_threads	/home/jasta/c/giFT/lib/platform.c	/^static HashTable *active_threads = NULL;$/;"	v	file:
add_dataset_share	/home/jasta/c/giFT/src/share_cache.c	/^static void add_dataset_share (Dataset **dataset, FileShare *file)$/;"	f	file:
add_list_share	/home/jasta/c/giFT/src/share_cache.c	/^static void add_list_share (List **list, FileShare *file)$/;"	f	file:
add_share	/home/jasta/c/giFT/src/share_cache.c	/^static int add_share (Dataset **shares, List **duplicates, FileShare *file)$/;"	f	file:
add_source	/home/jasta/c/giFT/src/download.c	/^static int add_source (Transfer *transfer, Source *source)$/;"	f	file:
add_sources	/home/jasta/c/giFT/ui/fe_download.c	/^static void add_sources (FEConnection *c, Transfer *obj,$/;"	f	file:
add_sroot	/home/jasta/c/giFT/src/share_cache.c	/^static void add_sroot (List **sroot, char *root, int recurse)$/;"	f	file:
add_tray	/home/jasta/c/giFT/win32/giFTtray/giFTtray.c	/^static void add_tray (const char* format, ...)$/;"	f	file:
adjust	/home/jasta/c/giFT/lib/connection.h	/^  	float             adjust;          \/**< Ratio to adjust the send\/recv$/;"	m	struct:_connection
adjust	/home/jasta/c/giFT/src/transfer.h	/^	float         adjust;        \/* how much to adjust the rw buffer *\/$/;"	m	struct:_chunk
app_instance	/home/jasta/c/giFT/win32/giFTsetup/giFTsetup.c	/^static HINSTANCE  app_instance;$/;"	v	file:
app_instance	/home/jasta/c/giFT/win32/giFTtray/giFTtray.c	/^static HINSTANCE       app_instance;$/;"	v	file:
app_window	/home/jasta/c/giFT/win32/giFTtray/giFTtray.c	/^static HWND            app_window;$/;"	v	file:
apply_general	/home/jasta/c/giFT/ui/fe_pref.c	/^static void apply_general ()$/;"	f	file:
array_sentinel	/home/jasta/c/giFT/OpenFT/packet.c	/^static int array_sentinel (char *ptr, size_t size)$/;"	f	file:
attach	/home/jasta/c/giFT/src/daemon.c	/^EV_HANDLER (attach);$/;"	v
attached	/home/jasta/c/giFT/lib/if_event.c	/^static List      *attached   = NULL;$/;"	v	file:
attached	/home/jasta/c/giFT/ui/fe_connect.h	/^	int attached;$/;"	m	struct:_fe_connection
auth_reason	/home/jasta/c/giFT/src/upload.c	/^static char *auth_reason (AuthReason *mem, AuthReason value)$/;"	f	file:
availability	/home/jasta/c/giFT/OpenFT/share.h	/^	int            availability; \/* how many open upload slots does this host$/;"	m	struct:
availability	/home/jasta/c/giFT/ui/fe_search.h	/^	int availability;$/;"	m	struct:
b	/home/jasta/c/giFT/research/test.c	/^	short b;$/;"	m	struct:_foo	file:
behind_firewall	/home/jasta/c/giFT/win32/giFTsetup/giFTsetup.c	/^static int        behind_firewall = FALSE;$/;"	v	file:
bin_to_hex	/home/jasta/c/giFT/src/md5.c	/^static int bin_to_hex (unsigned char *bin, char *hex, int len)$/;"	f	file:
bits	/home/jasta/c/giFT/src/md5.c	/^	ft_uint32     bits[2];$/;"	m	struct:MD5Context	file:
broadcast_search	/home/jasta/c/giFT/OpenFT/daemon.c	/^static Connection *broadcast_search (Connection *c, Node *node, Search *search)$/;"	f	file:
broadcast_status	/home/jasta/c/giFT/OpenFT/daemon.c	/^static Connection *broadcast_status (Connection *c, Node *node, void *data)$/;"	f	file:
browse_for_directory	/home/jasta/c/giFT/win32/giFTsetup/giFTsetup.c	/^static const char *browse_for_directory (HWND owner)$/;"	f	file:
buf	/home/jasta/c/giFT/src/md5.c	/^	ft_uint32     buf[4];$/;"	m	struct:MD5Context	file:
buffer	/home/jasta/c/giFT/lib/queue.h	/^	ListQueue     *buffer;             \/**< List of writes left to perform *\/$/;"	m	struct:
build_fnames	/home/jasta/c/giFT/src/main.c	/^static void build_fnames ()$/;"	f	file:
build_nodelist	/home/jasta/c/giFT/OpenFT/html.c	/^static Connection *build_nodelist (Connection *c, Node *node, FILE *f)$/;"	f	file:
build_shares	/home/jasta/c/giFT/OpenFT/html.c	/^static int build_shares (FileShare *file, FILE *f)$/;"	f	file:
build_sroot	/home/jasta/c/giFT/src/share_cache.c	/^static List *build_sroot ()$/;"	f	file:
build_str	/home/jasta/c/giFT/research/test.c	/^static int *build_str (int x1, int x2, int x3, int x4)$/;"	f	file:
by_host	/home/jasta/c/giFT/research/test.c	/^static HashTable *by_host = NULL;$/;"	v	file:
byteReverse	/home/jasta/c/giFT/src/md5.c	/^static void byteReverse(unsigned char *buf, unsigned longs)$/;"	f	file:
byteReverse	/home/jasta/c/giFT/src/md5.c	86;"	d	file:
c	/home/jasta/c/giFT/OpenFT/xfer.h	/^	Connection    *c;                  \/* see ft_transfer_ref *\/$/;"	m	struct:
c	/home/jasta/c/giFT/lib/if_event.h	/^	Connection *c;$/;"	m	struct:_if_event
c	/home/jasta/c/giFT/lib/queue.h	/^	Connection    *c;                  \/**< Connection that created this$/;"	m	struct:
c	/home/jasta/c/giFT/research/test.c	/^	short c;$/;"	m	struct:_foo	file:
calc_avail	/home/jasta/c/giFT/OpenFT/share.c	/^static void calc_avail (FT_HostShare *h_share)$/;"	f	file:
calc_next_timer	/home/jasta/c/giFT/lib/event.c	/^static int calc_next_timer (Timer *timer, struct timeval *lowest_time)$/;"	f	file:
calc_node_len	/home/jasta/c/giFT/ui/fe_ui_utils.c	/^static void calc_node_len (GtkCTree *ctree, GtkCTreeNode *node, int *len)$/;"	f	file:
calculate_ext	/home/jasta/c/giFT/src/share_file.c	/^static char *calculate_ext (char *path)$/;"	f	file:
calculate_final_path	/home/jasta/c/giFT/src/download.c	/^static char *calculate_final_path (Transfer *transfer)$/;"	f	file:
calculate_hpath	/home/jasta/c/giFT/src/share_file.c	/^static char *calculate_hpath (char *root, size_t root_len, char *filename)$/;"	f	file:
calculate_root	/home/jasta/c/giFT/src/share_cache.c	/^static char *calculate_root (List *sroot, char *filename)$/;"	f	file:
calculate_transfer_info	/home/jasta/c/giFT/ui/fe_utils.c	/^char *calculate_transfer_info (size_t transmit, size_t total,$/;"	f
callback	/home/jasta/c/giFT/OpenFT/xfer.h	/^	FT_TransferCB  callback;           \/* where to report progress$/;"	m	struct:
callback	/home/jasta/c/giFT/lib/event.h	/^	InputCallback callback;$/;"	m	struct:
callback	/home/jasta/c/giFT/lib/event.h	/^	TimerCallback  callback;$/;"	m	struct:
callback	/home/jasta/c/giFT/lib/protocol.h	/^    void (*callback) (struct _protocol *p, struct _connection *c,$/;"	m	struct:_protocol
callback	/home/jasta/c/giFT/ui/fe_connect.h	/^	FEConnectionCallback callback;$/;"	m	struct:_fe_connection
cap	/home/jasta/c/giFT/OpenFT/node.h	/^	Dataset       *cap;$/;"	m	struct:
cb	/home/jasta/c/giFT/OpenFT/daemon.c	/^	EventCallback cb;$/;"	m	struct:_daemon_event	file:
cb	/home/jasta/c/giFT/src/daemon.c	/^	EventCallback  cb;$/;"	m	struct:_dc_event	file:
cb	/home/jasta/c/giFT/ui/fe_daemon.c	/^	FEEventHandler  cb;$/;"	m	struct:_fe_ev_handler	file:
cb	/home/jasta/c/giFT/ui/fe_daemon.h	/^	ParsePacketFunc cb;$/;"	m	struct:_daemon_event
cfunc	/home/jasta/c/giFT/lib/platform.h	/^	ChildFunc   cfunc;$/;"	m	struct:
change_menu_item_caption	/home/jasta/c/giFT/win32/giFTtray/giFTtray.c	/^static void change_menu_item_caption (HMENU menu, int id, char *caption)$/;"	f	file:
change_ref	/home/jasta/c/giFT/src/share_file.c	/^static unsigned short change_ref (FileShare *file, int change)$/;"	f	file:
check_alloc	/home/jasta/c/giFT/lib/list_dataset.c	/^static int check_alloc (ListDataset **list_ds)$/;"	f	file:
check_worthless	/home/jasta/c/giFT/OpenFT/protocol.c	/^static void check_worthless (Connection *c)$/;"	f	file:
child	/home/jasta/c/giFT/lib/tree.h	/^	struct _tree_node *child;$/;"	m	struct:_tree_node
child_exit	/home/jasta/c/giFT/lib/platform.c	/^static void child_exit (int signum)$/;"	f	file:
child_request	/home/jasta/c/giFT/OpenFT/protocol.c	/^FT_HANDLER (child_request);$/;"	v
child_response	/home/jasta/c/giFT/OpenFT/protocol.c	/^FT_HANDLER (child_response);$/;"	v
children_length	/home/jasta/c/giFT/ui/fe_utils.c	/^int children_length (GtkCTreeNode *parent)$/;"	f
chunk	/home/jasta/c/giFT/OpenFT/http_server.c	/^	Chunk     *chunk;$/;"	m	struct:_indirect_source	file:
chunk	/home/jasta/c/giFT/OpenFT/xfer.h	/^	Chunk         *chunk;              \/* ...                 *\/$/;"	m	struct:
chunk	/home/jasta/c/giFT/src/transfer.h	/^	struct _chunk *chunk;    \/* chunk using this source *\/$/;"	m	struct:_source
chunk_calc_bw	/home/jasta/c/giFT/src/transfer.c	/^int chunk_calc_bw (Chunk *chunk)$/;"	f
chunk_free	/home/jasta/c/giFT/src/transfer.c	/^void chunk_free (Chunk *chunk)$/;"	f
chunk_new	/home/jasta/c/giFT/src/transfer.c	/^Chunk *chunk_new (Transfer *transfer, Source *source,$/;"	f
chunk_pause	/home/jasta/c/giFT/src/download.c	/^static int chunk_pause (Chunk *chunk, Transfer *transfer)$/;"	f	file:
chunk_throttle_op	/home/jasta/c/giFT/src/transfer.c	/^static void chunk_throttle_op (Chunk *chunk, ProtocolCommand command,$/;"	f	file:
chunk_write	/home/jasta/c/giFT/src/transfer.c	/^void chunk_write (Chunk *chunk, char *segment, size_t len)$/;"	f
chunks	/home/jasta/c/giFT/src/transfer.h	/^	List         *chunks;       \/* partitioned download segments *\/$/;"	m	struct:_transfer
clamp_down	/home/jasta/c/giFT/src/transfer.c	/^static unsigned short clamp_down (float x)$/;"	f	file:
class_request	/home/jasta/c/giFT/OpenFT/protocol.c	/^FT_HANDLER (class_request);$/;"	v
class_response	/home/jasta/c/giFT/OpenFT/protocol.c	/^FT_HANDLER (class_response);$/;"	v
cleanup	/home/jasta/c/giFT/lib/event.c	/^static void cleanup (List **source_list)$/;"	f	file:
cleanup_conn	/home/jasta/c/giFT/OpenFT/openft.c	/^static Connection *cleanup_conn (Connection *c, Node *node, void *data)$/;"	f	file:
clear_dataset_entry	/home/jasta/c/giFT/src/share_cache.c	/^static int clear_dataset_entry (char *md5, FileShare *file, void *udata)$/;"	f	file:
clear_free	/home/jasta/c/giFT/lib/list_dataset.c	/^static void clear_free (ListDataset **list_ds, int free_value)$/;"	f	file:
clear_list_entry	/home/jasta/c/giFT/src/share_cache.c	/^static int clear_list_entry (FileShare *file, void *udata)$/;"	f	file:
client_foreground_message	/home/jasta/c/giFT/win32/giFTtray/giFTtray.c	/^static UINT            client_foreground_message = 0;$/;"	v	file:
client_get_request	/home/jasta/c/giFT/OpenFT/http_client.c	/^static int client_get_request (FT_Transfer *xfer)$/;"	f	file:
client_header_parse	/home/jasta/c/giFT/OpenFT/http_client.c	/^static void client_header_parse (FT_Transfer *xfer, char *reply)$/;"	f	file:
client_push_request	/home/jasta/c/giFT/OpenFT/http_client.c	/^static int client_push_request (FT_Transfer *xfer)$/;"	f	file:
client_reset_timeout	/home/jasta/c/giFT/OpenFT/http_client.c	/^static void client_reset_timeout (Protocol *p, Connection *c)$/;"	f	file:
close	/home/jasta/c/giFT/src/md5.c	41;"	d	file:
close_conn	/home/jasta/c/giFT/lib/if_event.c	/^static int close_conn (unsigned long key, IFEvent *event, Connection *c)$/;"	f	file:
closest_prime	/home/jasta/c/giFT/lib/hash.c	/^static unsigned int closest_prime (unsigned int num)$/;"	f	file:
closing	/home/jasta/c/giFT/lib/connection.h	/^	int               closing;         \/**< State set when this socket is$/;"	m	struct:_connection
cmp_config_header	/home/jasta/c/giFT/lib/conf.c	/^static int cmp_config_header (ConfigHeader *a, char *b)$/;"	f	file:
cmp_hash_entry	/home/jasta/c/giFT/src/share_cache.c	/^static int cmp_hash_entry (char *md5, FileShare *file, char *path)$/;"	f	file:
cmp_list_entry	/home/jasta/c/giFT/src/share_cache.c	/^static int cmp_list_entry (FileShare *file, char *path)$/;"	f	file:
code	/home/jasta/c/giFT/OpenFT/xfer.h	/^	int            code;               \/* HTTP status code last seen *\/$/;"	m	struct:
command	/home/jasta/c/giFT/OpenFT/packet.h	/^	ft_uint16 command;$/;"	m	struct:
command	/home/jasta/c/giFT/OpenFT/protocol.c	/^	ft_uint16       command;$/;"	m	struct:_handler_table	file:
command	/home/jasta/c/giFT/OpenFT/xfer.h	/^	char          *command;            \/* request operator (GET, PUSH, ...) *\/$/;"	m	struct:
comp_path	/home/jasta/c/giFT/OpenFT/share_comp.c	/^static char      *comp_path        = NULL;$/;"	v	file:
comp_updated	/home/jasta/c/giFT/OpenFT/share_comp.c	/^static int comp_updated ()$/;"	f	file:
complete	/home/jasta/c/giFT/lib/event.h	/^	int           complete;  \/* complete is FALSE until first state change *\/$/;"	m	struct:
complete	/home/jasta/c/giFT/ui/fe_search.h	/^	int complete;$/;"	m	struct:
condition	/home/jasta/c/giFT/ui/fe_connect.h	/^	GdkInputCondition condition;$/;"	m	struct:_fe_connection
confhdr	/home/jasta/c/giFT/lib/conf.h	/^	ConfigHeader *confhdr;             \/**< header "cursor", do not touch *\/$/;"	m	struct:
config	/home/jasta/c/giFT/src/main.c	/^static int config (char *module)$/;"	f	file:
config_free	/home/jasta/c/giFT/lib/conf.c	/^void config_free (Config *conf)$/;"	f
config_get_int	/home/jasta/c/giFT/lib/conf.c	/^int config_get_int (Config *conf, char *keypath)$/;"	f
config_get_str	/home/jasta/c/giFT/lib/conf.c	/^char *config_get_str (Config *conf, char *keypath)$/;"	f
config_header_new	/home/jasta/c/giFT/lib/conf.c	/^static ConfigHeader *config_header_new (char *line)$/;"	f	file:
config_headers_clear	/home/jasta/c/giFT/lib/conf.c	/^static void config_headers_clear (Config *conf)$/;"	f	file:
config_headers_read	/home/jasta/c/giFT/lib/conf.c	/^static void config_headers_read (Config *conf)$/;"	f	file:
config_keys_read	/home/jasta/c/giFT/lib/conf.c	/^static void config_keys_read (Config *conf)$/;"	f	file:
config_lookup	/home/jasta/c/giFT/lib/conf.c	/^static char *config_lookup (Config *conf, ConfigHeader **confhdr_out,$/;"	f	file:
config_new	/home/jasta/c/giFT/lib/conf.c	/^Config *config_new (char *file)$/;"	f
config_parse_keypath	/home/jasta/c/giFT/lib/conf.c	/^static char *config_parse_keypath (char *keypath, char **header_out,$/;"	f	file:
config_set_int	/home/jasta/c/giFT/lib/conf.c	/^void config_set_int (Config *conf, char *keypath, int value)$/;"	f
config_set_str	/home/jasta/c/giFT/lib/conf.c	/^void config_set_str (Config *conf, char *keypath, char *value)$/;"	f
config_update	/home/jasta/c/giFT/lib/conf.c	/^static void config_update (Config *conf)$/;"	f	file:
config_write	/home/jasta/c/giFT/lib/conf.c	/^void config_write (Config *conf)$/;"	f
conn	/home/jasta/c/giFT/OpenFT/netorg.c	/^static HashTable *conn = NULL;$/;"	v	file:
conn_add	/home/jasta/c/giFT/OpenFT/netorg.c	/^void conn_add (Connection *c)$/;"	f
conn_auth	/home/jasta/c/giFT/OpenFT/netorg.c	/^int conn_auth (Connection *c, int outgoing)$/;"	f
conn_change	/home/jasta/c/giFT/OpenFT/netorg.c	/^void conn_change (Connection *c, unsigned short prev)$/;"	f
conn_clear	/home/jasta/c/giFT/OpenFT/netorg.c	/^void conn_clear (ConnForeachFunc func)$/;"	f
conn_clear_entry	/home/jasta/c/giFT/OpenFT/netorg.c	/^static int conn_clear_entry (Connection *c, void *udata)$/;"	f	file:
conn_counter	/home/jasta/c/giFT/OpenFT/netorg.c	/^static Connection *conn_counter (Connection *c, Node *node, int *length)$/;"	f	file:
conn_foreach	/home/jasta/c/giFT/OpenFT/netorg.c	/^Connection *conn_foreach (ConnForeachFunc func, void *user_data,$/;"	f
conn_length	/home/jasta/c/giFT/OpenFT/netorg.c	/^int conn_length (unsigned short klass, unsigned short state)$/;"	f
conn_lookup	/home/jasta/c/giFT/OpenFT/netorg.c	/^Connection *conn_lookup (unsigned long ip)$/;"	f
conn_maintain	/home/jasta/c/giFT/OpenFT/netorg.c	/^void conn_maintain ()$/;"	f
conn_remove	/home/jasta/c/giFT/OpenFT/netorg.c	/^void conn_remove (Connection *c)$/;"	f
conn_sort	/home/jasta/c/giFT/OpenFT/netorg.c	/^void conn_sort (CompareFunc func)$/;"	f
conn_sort_vit	/home/jasta/c/giFT/OpenFT/node.c	/^static int conn_sort_vit (Connection *a, Connection *b)$/;"	f	file:
conn_spread_add	/home/jasta/c/giFT/OpenFT/netorg.c	/^static void conn_spread_add (Connection *c,$/;"	f	file:
conn_spread_change	/home/jasta/c/giFT/OpenFT/netorg.c	/^static void conn_spread_change (Connection *c,$/;"	f	file:
conn_spread_remove	/home/jasta/c/giFT/OpenFT/netorg.c	/^static void conn_spread_remove (Connection *c,$/;"	f	file:
connect_callback	/home/jasta/c/giFT/ui/fe_connect.c	/^static void connect_callback (FEConnection *c, int source,$/;"	f	file:
connect_verify	/home/jasta/c/giFT/ui/fe_connect.c	/^static void connect_verify (FEConnection *c, int source,$/;"	f	file:
connection_accept	/home/jasta/c/giFT/lib/connection.c	/^Connection *connection_accept (Protocol *p, Connection *listening,$/;"	f
connection_bind	/home/jasta/c/giFT/lib/connection.c	/^Connection *connection_bind (Protocol *p, unsigned short port, int blocking)$/;"	f
connection_close	/home/jasta/c/giFT/lib/connection.c	/^void connection_close (Connection *c)$/;"	f
connection_free	/home/jasta/c/giFT/lib/connection.c	/^void connection_free (Connection *c)$/;"	f
connection_new	/home/jasta/c/giFT/lib/connection.c	/^Connection *connection_new (Protocol *p)$/;"	f
connection_open	/home/jasta/c/giFT/lib/connection.c	/^Connection *connection_open (Protocol *p, char *host, unsigned short port,$/;"	f
connections	/home/jasta/c/giFT/OpenFT/daemon.c	/^	int           connections;$/;"	m	struct:_stats	file:
connections	/home/jasta/c/giFT/OpenFT/netorg.c	/^static ListLock *connections = NULL;$/;"	v	file:
connections	/home/jasta/c/giFT/lib/if_event.h	/^	List *connections;$/;"	m	struct:_if_event
constraint_parse	/home/jasta/c/giFT/OpenFT/daemon.c	/^static void constraint_parse (char *str, size_t *min, size_t *max)$/;"	f	file:
construct_main	/home/jasta/c/giFT/ui/fe_ui.c	/^int construct_main (FTApp *ft, char *title, char *cls)$/;"	f
construct_media_filter	/home/jasta/c/giFT/ui/fe_ui.c	/^static GtkWidget *construct_media_filter ()$/;"	f	file:
construct_nodecap	/home/jasta/c/giFT/OpenFT/protocol.c	/^static int construct_nodecap (unsigned long key, char *cap, FTPacket **packet)$/;"	f	file:
construct_share_panel	/home/jasta/c/giFT/ui/fe_ui.c	/^static GtkWidget *construct_share_panel()$/;"	f	file:
content_type	/home/jasta/c/giFT/OpenFT/xfer.h	/^	char          *content_type;       \/* Content-Type: send from server or$/;"	m	struct:
create_app_window	/home/jasta/c/giFT/win32/giFTtray/giFTtray.c	/^static HWND create_app_window ()$/;"	f	file:
create_db	/home/jasta/c/giFT/OpenFT/share_db.c	/^static FILE *create_db (char *path, char *mode, size_t *nrec)$/;"	f	file:
create_font	/home/jasta/c/giFT/win32/giFTsetup/giFTsetup.c	/^static HFONT create_font (const char *name, int size, int bold,$/;"	f	file:
create_general	/home/jasta/c/giFT/ui/fe_pref.c	/^static void create_general ()$/;"	f	file:
create_page	/home/jasta/c/giFT/win32/giFTsetup/giFTsetup.c	/^static HPROPSHEETPAGE create_page (int id,$/;"	f	file:
create_popup_menu	/home/jasta/c/giFT/win32/giFTtray/giFTtray.c	/^static HMENU create_popup_menu ()$/;"	f	file:
create_process	/home/jasta/c/giFT/win32/giFTtray/giFTtray.c	/^static int create_process (char *cmd_line, PROCESS_INFORMATION *proc_info)$/;"	f	file:
create_share_cache	/home/jasta/c/giFT/src/share_cache.c	/^static FileShare *create_share_cache (List *sroot, char *unix_path, char *md5,$/;"	f	file:
create_share_disk	/home/jasta/c/giFT/src/share_cache.c	/^static FileShare *create_share_disk (char *host_root, char *host_path)$/;"	f	file:
ctree_node_child_length	/home/jasta/c/giFT/ui/fe_ui_utils.c	/^int ctree_node_child_length (GtkWidget *ctree, GtkCTreeNode *node)$/;"	f
curs	/home/jasta/c/giFT/OpenFT/netorg.c	/^static struct _netorg_cursor  curs;$/;"	v	file:
cursor	/home/jasta/c/giFT/OpenFT/netorg.c	/^static struct _netorg_cursor *cursor = NULL;$/;"	v	file:
d	/home/jasta/c/giFT/research/test.c	/^	int d;$/;"	m	struct:_foo	file:
daemon_conn	/home/jasta/c/giFT/ui/fe_daemon.c	/^static FEConnection   *daemon_conn = NULL;$/;"	v	file:
daemon_connect	/home/jasta/c/giFT/ui/fe_daemon.c	/^FEConnection *daemon_connect (FEConnectionCallback cb, void *data)$/;"	f
daemon_connection	/home/jasta/c/giFT/ui/fe_daemon.c	/^static int daemon_connection (int sock, FEConnection *c)$/;"	f	file:
daemon_event_add	/home/jasta/c/giFT/ui/fe_daemon.c	/^static void daemon_event_add (DaemonEvent *event)$/;"	f	file:
daemon_event_new	/home/jasta/c/giFT/ui/fe_daemon.c	/^static DaemonEvent *daemon_event_new (ParsePacketFunc cb, void *obj,$/;"	f	file:
daemon_event_remove	/home/jasta/c/giFT/ui/fe_daemon.c	/^void daemon_event_remove (unsigned long id, char *head)$/;"	f
daemon_events	/home/jasta/c/giFT/OpenFT/daemon.c	/^daemon_events[] =$/;"	v
daemon_get_host	/home/jasta/c/giFT/ui/fe_daemon.c	/^char* daemon_get_host()$/;"	f
daemon_get_port	/home/jasta/c/giFT/ui/fe_daemon.c	/^int daemon_get_port()$/;"	f
daemon_handle_packet	/home/jasta/c/giFT/ui/fe_daemon.c	/^static int daemon_handle_packet (FEConnection *c, char *head, int keys,$/;"	f	file:
daemon_host	/home/jasta/c/giFT/ui/fe_daemon.c	/^static char           *daemon_host = NULL;$/;"	v	file:
daemon_interface	/home/jasta/c/giFT/ui/fe_daemon.c	/^FEConnection *daemon_interface ()$/;"	f
daemon_parse_packet	/home/jasta/c/giFT/ui/fe_daemon.c	/^static char *daemon_parse_packet (GData **datalist, char *packet, int *keys)$/;"	f	file:
daemon_port	/home/jasta/c/giFT/ui/fe_daemon.c	/^static unsigned short  daemon_port = 0;$/;"	v	file:
daemon_promote	/home/jasta/c/giFT/OpenFT/daemon.c	/^EV_HANDLER (daemon_promote);$/;"	v
daemon_request	/home/jasta/c/giFT/ui/fe_daemon.c	/^int daemon_request (ParsePacketFunc cb, void *event_obj, void *udata,$/;"	f
daemon_search	/home/jasta/c/giFT/OpenFT/daemon.c	/^EV_HANDLER (daemon_search);$/;"	v
daemon_send	/home/jasta/c/giFT/ui/fe_daemon.c	/^int daemon_send (char *fmt, ...)$/;"	f
daemon_set_primary	/home/jasta/c/giFT/ui/fe_daemon.c	/^void daemon_set_primary (char *host, unsigned short port)$/;"	f
daemon_share	/home/jasta/c/giFT/OpenFT/daemon.c	/^EV_HANDLER (daemon_share);$/;"	v
daemon_stats	/home/jasta/c/giFT/OpenFT/daemon.c	/^EV_HANDLER (daemon_stats);$/;"	v
data	/home/jasta/c/giFT/OpenFT/packet.h	/^	char data[1]; \/* pointer trickery.  len bytes after this are still our$/;"	m	struct:
data	/home/jasta/c/giFT/lib/connection.h	/^	void             *data;            \/**< Any arbitrary data that you want$/;"	m	struct:_connection
data	/home/jasta/c/giFT/lib/event.h	/^	Connection   *data;$/;"	m	struct:
data	/home/jasta/c/giFT/lib/event.h	/^	void          *data;$/;"	m	struct:
data	/home/jasta/c/giFT/lib/if_event.h	/^	void *data;$/;"	m	struct:_if_event
data	/home/jasta/c/giFT/lib/list.h	/^	void         *data;                \/**< Data inserted *\/$/;"	m	struct:_list
data	/home/jasta/c/giFT/lib/nb.h	/^	char *data;                        \/**< Currently read data *\/$/;"	m	struct:
data	/home/jasta/c/giFT/lib/protocol.h	/^	void               *data;    \/* arbitrary data associated with this$/;"	m	struct:_protocol
data	/home/jasta/c/giFT/lib/tree.h	/^	void *data;$/;"	m	struct:_tree_node
data	/home/jasta/c/giFT/src/share_file.h	/^	void          *data;     \/* see share_free *\/$/;"	m	struct:_file_share
data	/home/jasta/c/giFT/src/transfer.h	/^	void         *data;          \/* protocol-specific data *\/$/;"	m	struct:_chunk
data	/home/jasta/c/giFT/ui/fe_connect.h	/^	void *data;$/;"	m	struct:_fe_connection
data	/home/jasta/c/giFT/ui/fe_daemon.h	/^	void *data;$/;"	m	struct:_daemon_event
data_cb	/home/jasta/c/giFT/ui/fe_connect.h	/^	FEConnectionCallback data_cb;$/;"	m	struct:_fe_connection
data_dir	/home/jasta/c/giFT/lib/platform.c	/^static char *data_dir = NULL;$/;"	v	file:
data_list	/home/jasta/c/giFT/ui/fe_obj.h	/^	GData *data_list;$/;"	m	struct:_object_data
data_timeout	/home/jasta/c/giFT/src/download.c	/^static int data_timeout (Chunk *chunk)$/;"	f	file:
datalen	/home/jasta/c/giFT/lib/nb.h	/^	int   datalen;                     \/**< Allocated length.  Used internally$/;"	m	struct:
dataset	/home/jasta/c/giFT/OpenFT/share.h	/^	Dataset       *dataset;$/;"	m	struct:
dataset	/home/jasta/c/giFT/research/test.c	/^	Dataset *dataset;$/;"	m	struct:_foo	file:
dataset_clear	/home/jasta/c/giFT/lib/dataset.h	100;"	d
dataset_clear_free	/home/jasta/c/giFT/lib/dataset.h	108;"	d
dataset_insert	/home/jasta/c/giFT/lib/dataset.h	88;"	d
dataset_insert_real	/home/jasta/c/giFT/lib/dataset.c	/^void dataset_insert_real (Dataset *dataset, char *key, void *value)$/;"	f
dataset_key_remove	/home/jasta/c/giFT/lib/dataset.c	/^static int dataset_key_remove (unsigned long key, void *value, void *udata)$/;"	f	file:
dataset_lookup	/home/jasta/c/giFT/lib/dataset.c	/^void *dataset_lookup (Dataset *dataset, char *string)$/;"	f
dataset_new	/home/jasta/c/giFT/lib/dataset.c	/^Dataset *dataset_new ()$/;"	f
dataset_remove	/home/jasta/c/giFT/lib/dataset.c	/^void dataset_remove (Dataset *dataset, char *string)$/;"	f
db_flushed	/home/jasta/c/giFT/OpenFT/share.h	/^	char           db_flushed;   \/* if all shares are flushed, this flag is$/;"	m	struct:
db_path	/home/jasta/c/giFT/OpenFT/share_db.c	/^static char *db_path (FT_HostShare *h_share)$/;"	f	file:
db_timeout	/home/jasta/c/giFT/OpenFT/share.h	/^	int            db_timeout;$/;"	m	struct:
dbg	/home/jasta/c/giFT/win32/giFTsetup/giFTsetup.c	/^static void dbg (const char *format, ...)$/;"	f	file:
dbg	/home/jasta/c/giFT/win32/giFTtray/giFTtray.c	/^static void dbg (const char *format, ...)$/;"	f	file:
dbl	/home/jasta/c/giFT/src/hook.h	/^		double dbl;$/;"	m	union:
dc	/home/jasta/c/giFT/ui/gsh/gsh.c	/^static Connection *dc = NULL;$/;"	v	file:
dc_close	/home/jasta/c/giFT/lib/protocol.h	/^	void (*dc_close) (struct _connection *c);$/;"	m	struct:_protocol
dc_events	/home/jasta/c/giFT/src/daemon.c	/^dc_events[] =$/;"	v
dc_handle_event	/home/jasta/c/giFT/src/daemon.c	/^void dc_handle_event (Protocol *p, Connection *c, Dataset *event)$/;"	f
deactivate_chunk	/home/jasta/c/giFT/src/download.c	/^static int deactivate_chunk (Chunk *chunk)$/;"	f	file:
debug_tag	/home/jasta/c/giFT/ui/fe_obj.h	/^	unsigned long debug_tag;$/;"	m	struct:_object_data
dec_discon_cnt	/home/jasta/c/giFT/OpenFT/node.c	/^static Connection *dec_discon_cnt (Connection *c, Node *node, void *udata)$/;"	f	file:
dec_record	/home/jasta/c/giFT/OpenFT/share_db.c	/^static size_t dec_record (FILE *f, FileShare *file, FT_Share *share,$/;"	f	file:
default_buf_size	/home/jasta/c/giFT/lib/network.c	/^static int default_buf_size = -1;$/;"	v	file:
default_cmp	/home/jasta/c/giFT/lib/tree.c	/^static int default_cmp (char *a, char *b)$/;"	f	file:
desc	/home/jasta/c/giFT/src/mime.c	/^	char *desc;$/;"	m	struct:_mime_type	file:
descr	/home/jasta/c/giFT/ui/fe_pref.c	/^	char *descr;$/;"	m	struct:option_entry	file:
destroy	/home/jasta/c/giFT/lib/protocol.h	/^	void (*destroy)  (struct _protocol *p);$/;"	m	struct:_protocol
destroy_font	/home/jasta/c/giFT/win32/giFTsetup/giFTsetup.c	/^static void destroy_font (HFONT font)$/;"	f	file:
destroy_free	/home/jasta/c/giFT/lib/hash.c	/^static int destroy_free (unsigned long key, char *value, void *udata)$/;"	f	file:
destroy_func	/home/jasta/c/giFT/lib/queue.h	/^	QueueWriteFunc destroy_func;       \/**< Assist in destroying data *\/$/;"	m	struct:
destroy_func	/home/jasta/c/giFT/ui/fe_obj.c	/^	ObjDestroyFunc destroy_func;$/;"	m	struct:_free_table	file:
destroy_host_table	/home/jasta/c/giFT/OpenFT/share.c	/^static int destroy_host_table (unsigned long key, FileShare *file, int *force)$/;"	f	file:
destroy_siblings	/home/jasta/c/giFT/lib/tree.c	/^static void destroy_siblings (TreeNode *node, int free_udata)$/;"	f	file:
destroy_sroot	/home/jasta/c/giFT/src/share_cache.c	/^static void destroy_sroot (List *sroot)$/;"	f	file:
dialog_close	/home/jasta/c/giFT/ui/fe_ui_utils.c	/^static void dialog_close (GtkWidget *button, GtkWidget *dialog)$/;"	f	file:
disabled	/home/jasta/c/giFT/OpenFT/share.h	/^	int            disabled;     \/* this host wishes not to share the files$/;"	m	struct:
disabled	/home/jasta/c/giFT/src/upload.c	/^static int disabled    = FALSE;$/;"	v	file:
disconnect_cnt	/home/jasta/c/giFT/OpenFT/node.h	/^	unsigned char  disconnect_cnt : 4;$/;"	m	struct:
dispatch_input	/home/jasta/c/giFT/lib/event.c	/^static void dispatch_input (Input *input, InputState state, fd_set *set)$/;"	f	file:
dispatch_inputs	/home/jasta/c/giFT/lib/event.c	/^static void dispatch_inputs (fd_set *rset, fd_set *wset, fd_set *xset)$/;"	f	file:
dispatch_timers	/home/jasta/c/giFT/lib/event.c	/^static void dispatch_timers (struct timeval *current_time)$/;"	f	file:
display	/home/jasta/c/giFT/src/transfer.h	/^	unsigned char display : 1;  \/* temporarily hide this transfer from the$/;"	m	struct:_transfer
dl_frame	/home/jasta/c/giFT/ui/gift-fe.h	/^	GtkWidget *dl_frame;$/;"	m	struct:
dl_list	/home/jasta/c/giFT/ui/gift-fe.h	/^	GtkWidget *dl_list;$/;"	m	struct:
download	/home/jasta/c/giFT/lib/protocol.h	/^	ProtocolCallback    download;$/;"	m	struct:_protocol
download_add_source	/home/jasta/c/giFT/src/download.c	/^void download_add_source (Transfer *transfer,$/;"	f
download_cancel	/home/jasta/c/giFT/OpenFT/xfer.c	/^static void download_cancel (Chunk *chunk, void *data)$/;"	f	file:
download_complete	/home/jasta/c/giFT/src/download.c	/^static void download_complete (Transfer *transfer)$/;"	f	file:
download_event_close	/home/jasta/c/giFT/src/download.c	/^static void download_event_close (IFEvent *event)$/;"	f	file:
download_free	/home/jasta/c/giFT/src/download.c	/^void download_free (Transfer *transfer, int premature)$/;"	f
download_insert	/home/jasta/c/giFT/ui/fe_download.c	/^Transfer *download_insert (GtkWidget *dl_list, GtkCTreeNode *node_hint,$/;"	f
download_length	/home/jasta/c/giFT/src/download.c	/^static int download_length (char *user, int active)$/;"	f	file:
download_new	/home/jasta/c/giFT/src/download.c	/^Transfer *download_new (Connection *c, char *uniq, char *filename, char *hash,$/;"	f
download_pause	/home/jasta/c/giFT/src/download.c	/^void download_pause (Transfer *transfer)$/;"	f
download_read_state	/home/jasta/c/giFT/src/download.c	/^static Transfer *download_read_state (char *file)$/;"	f	file:
download_recover_state	/home/jasta/c/giFT/src/download.c	/^void download_recover_state ()$/;"	f
download_register	/home/jasta/c/giFT/src/download.c	/^static void download_register (Transfer *transfer, Connection *c)$/;"	f	file:
download_remove_source	/home/jasta/c/giFT/src/download.c	/^void download_remove_source (Transfer *transfer, char *url)$/;"	f
download_report	/home/jasta/c/giFT/src/download.c	/^static int download_report (void *udata)$/;"	f	file:
download_report_attached	/home/jasta/c/giFT/src/download.c	/^void download_report_attached (Connection *c)$/;"	f
download_report_progress	/home/jasta/c/giFT/src/download.c	/^static int download_report_progress (Transfer *transfer, void *udata)$/;"	f	file:
download_response	/home/jasta/c/giFT/ui/fe_download.c	/^int download_response (char *head, int keys, GData *dataset, DaemonEvent *event)$/;"	f
download_resume	/home/jasta/c/giFT/OpenFT/xfer.c	/^static void download_resume (Chunk *chunk, void *data)$/;"	f	file:
download_start	/home/jasta/c/giFT/OpenFT/xfer.c	/^static void download_start (Chunk *chunk, void *data)$/;"	f	file:
download_start	/home/jasta/c/giFT/ui/fe_download.c	/^void download_start (GtkWidget *dl_list)$/;"	f
download_start_node	/home/jasta/c/giFT/ui/fe_download.c	/^static void download_start_node (GtkCTree *ctree, GtkCTreeNode *node,$/;"	f	file:
download_stop	/home/jasta/c/giFT/src/download.c	/^void download_stop (Transfer *transfer, int cancel)$/;"	f
download_stop	/home/jasta/c/giFT/ui/fe_download.c	/^static void download_stop (Transfer *transfer, int cancel)$/;"	f	file:
download_suspend	/home/jasta/c/giFT/OpenFT/xfer.c	/^static void download_suspend (Chunk *chunk, void *data)$/;"	f	file:
download_tick_count	/home/jasta/c/giFT/src/download.c	/^static unsigned short download_tick_count          = 0;$/;"	v	file:
download_timer	/home/jasta/c/giFT/src/download.c	/^static unsigned long download_timer                = 0;$/;"	v	file:
download_unpause	/home/jasta/c/giFT/src/download.c	/^void download_unpause (Transfer *transfer)$/;"	f
download_write	/home/jasta/c/giFT/src/download.c	/^void download_write (Chunk *chunk, char *segment, size_t len)$/;"	f
downloads	/home/jasta/c/giFT/src/download.c	/^static List         *downloads                     = NULL;$/;"	v	file:
dp_download_dir	/home/jasta/c/giFT/win32/giFTsetup/giFTsetup.c	/^static BOOL CALLBACK dp_download_dir (HWND window, UINT message,$/;"	f	file:
dp_finish	/home/jasta/c/giFT/win32/giFTsetup/giFTsetup.c	/^static BOOL CALLBACK dp_finish (HWND window, UINT message,$/;"	f	file:
dp_firewall	/home/jasta/c/giFT/win32/giFTsetup/giFTsetup.c	/^static BOOL CALLBACK dp_firewall (HWND window, UINT message,$/;"	f	file:
dp_intro	/home/jasta/c/giFT/win32/giFTsetup/giFTsetup.c	/^static BOOL CALLBACK dp_intro (HWND window, UINT message,$/;"	f	file:
dp_node_class	/home/jasta/c/giFT/win32/giFTsetup/giFTsetup.c	/^static BOOL CALLBACK dp_node_class (HWND window, UINT message,$/;"	f	file:
dp_shared_dirs	/home/jasta/c/giFT/win32/giFTsetup/giFTsetup.c	/^static BOOL CALLBACK dp_shared_dirs (HWND window, UINT message,$/;"	f	file:
e	/home/jasta/c/giFT/research/test.c	/^	int e;$/;"	m	struct:_foo	file:
equal_z	/home/jasta/c/giFT/research/test.c	/^static int equal_z (int *a, int *b)$/;"	f	file:
error	/home/jasta/c/giFT/win32/giFTsetup/giFTsetup.c	/^static void error (const char *format, ...)$/;"	f	file:
error	/home/jasta/c/giFT/win32/giFTtray/giFTtray.c	/^static void error (const char *format, ...)$/;"	f	file:
escape_quotes	/home/jasta/c/giFT/src/perl.c	/^static char *escape_quotes (char *buf)$/;"	f	file:
etokens	/home/jasta/c/giFT/OpenFT/search.h	/^	ft_uint32 *etokens;$/;"	m	struct:_search
ev_handlers	/home/jasta/c/giFT/ui/fe_daemon.c	/^ev_handlers[] =$/;"	v
ev_id	/home/jasta/c/giFT/lib/connection.h	/^	int               ev_id;           \/**< Event associated w\/ this$/;"	m	struct:_connection
event	/home/jasta/c/giFT/ui/fe_daemon.c	/^FE_EV_HANDLER (event);$/;"	v
event_action	/home/jasta/c/giFT/lib/if_event.c	/^static char *event_action (IFEvent *event)$/;"	f	file:
event_list	/home/jasta/c/giFT/ui/fe_fifo.c	/^static GSList *event_list = NULL;$/;"	v	file:
event_loop	/home/jasta/c/giFT/lib/event.c	/^void event_loop ()$/;"	f
event_quit	/home/jasta/c/giFT/lib/event.c	/^void event_quit (int dummy)$/;"	f
event_table	/home/jasta/c/giFT/ui/fe_daemon.c	/^static GHashTable     *event_table   = NULL;$/;"	v	file:
events	/home/jasta/c/giFT/lib/if_event.c	/^static HashTable *events     = NULL;$/;"	v	file:
exact	/home/jasta/c/giFT/ui/fe_share.c	/^	char *exact;$/;"	m	struct:mime_entry	file:
exclude	/home/jasta/c/giFT/OpenFT/search.h	/^	char      *exclude;$/;"	m	struct:_search
execute_perl	/home/jasta/c/giFT/src/perl.c	/^static SV *execute_perl (char *function, char *args)$/;"	f	file:
execute_perl_escaped	/home/jasta/c/giFT/src/perl.c	/^static SV *execute_perl_escaped (char *function, int args_quoted, char *args)$/;"	f	file:
expiration	/home/jasta/c/giFT/lib/event.h	/^	struct timeval expiration;$/;"	m	struct:
ext	/home/jasta/c/giFT/src/mime.c	/^	char *ext;$/;"	m	struct:_mime_type	file:
f	/home/jasta/c/giFT/OpenFT/xfer.h	/^	FILE          *f;                  \/* used only by the server routines *\/$/;"	m	struct:
f	/home/jasta/c/giFT/research/test.c	/^	int f;$/;"	m	struct:_foo	file:
f	/home/jasta/c/giFT/src/transfer.h	/^	FILE         *f;            \/* read\/write file descriptor *\/$/;"	m	struct:_transfer
f_apply	/home/jasta/c/giFT/ui/fe_pref.c	/^	void (*f_apply) ();$/;"	m	struct:page_entry	file:
f_create	/home/jasta/c/giFT/ui/fe_pref.c	/^	void (*f_create) ();$/;"	m	struct:page_entry	file:
f_etokens	/home/jasta/c/giFT/OpenFT/search.c	/^	ft_uint32 *f_etokens;$/;"	m	struct:_match_data	file:
f_exclude	/home/jasta/c/giFT/OpenFT/search.c	/^	char      *f_exclude;$/;"	m	struct:_match_data	file:
f_kbps_max	/home/jasta/c/giFT/OpenFT/search.c	/^	size_t     f_kbps_max;$/;"	m	struct:_match_data	file:
f_kbps_min	/home/jasta/c/giFT/OpenFT/search.c	/^	size_t     f_kbps_min;$/;"	m	struct:_match_data	file:
f_qtokens	/home/jasta/c/giFT/OpenFT/search.c	/^	ft_uint32 *f_qtokens;$/;"	m	struct:_match_data	file:
f_query	/home/jasta/c/giFT/OpenFT/search.c	/^	char      *f_query;$/;"	m	struct:_match_data	file:
f_realm	/home/jasta/c/giFT/OpenFT/search.c	/^	char      *f_realm;$/;"	m	struct:_match_data	file:
f_size_max	/home/jasta/c/giFT/OpenFT/search.c	/^	size_t     f_size_max;$/;"	m	struct:_match_data	file:
f_size_min	/home/jasta/c/giFT/OpenFT/search.c	/^	size_t     f_size_min;$/;"	m	struct:_match_data	file:
fatal_error	/home/jasta/c/giFT/win32/giFTsetup/giFTsetup.c	/^static void fatal_error (const char *format, ...)$/;"	f	file:
fatal_error	/home/jasta/c/giFT/win32/giFTtray/giFTtray.c	/^static void fatal_error (const char *format, ...)$/;"	f	file:
fd	/home/jasta/c/giFT/OpenFT/node.h	/^	int            fd;$/;"	m	struct:
fd	/home/jasta/c/giFT/lib/connection.h	/^	int               fd;              \/**< The file discriptor of this$/;"	m	struct:_connection
fd	/home/jasta/c/giFT/lib/event.h	/^	int           fd;$/;"	m	struct:
fd	/home/jasta/c/giFT/lib/nb.h	/^	int   fd;                          \/**< File descriptor which this$/;"	m	struct:
fd	/home/jasta/c/giFT/lib/platform.h	/^	int         fd;$/;"	m	struct:
fd	/home/jasta/c/giFT/ui/fe_connect.h	/^	int fd;$/;"	m	struct:_fe_connection
fe_connect_close	/home/jasta/c/giFT/ui/fe_connect.c	/^int fe_connect_close (FEConnection *c)$/;"	f
fe_connect_dispatch	/home/jasta/c/giFT/ui/fe_connect.c	/^FEConnection *fe_connect_dispatch (char *ip, unsigned short port,$/;"	f
fe_share_free	/home/jasta/c/giFT/ui/fe_share.c	/^void fe_share_free (SharedFile *share)$/;"	f
fe_transfer_free	/home/jasta/c/giFT/ui/fe_transfer.c	/^void fe_transfer_free (Transfer *obj)$/;"	f
file	/home/jasta/c/giFT/lib/conf.h	/^	FILE         *file;                \/**< open file pointer *\/$/;"	m	struct:
file_basename	/home/jasta/c/giFT/lib/file.c	/^char *file_basename (char *file)$/;"	f
file_closedir	/home/jasta/c/giFT/lib/file.c	/^int file_closedir (DIR *dh)$/;"	f
file_compress	/home/jasta/c/giFT/OpenFT/share_comp.c	/^static char *file_compress (char *path)$/;"	f	file:
file_create_path	/home/jasta/c/giFT/lib/file.c	/^int file_create_path (char *p)$/;"	f
file_dirname	/home/jasta/c/giFT/lib/file.c	/^char *file_dirname (char *file)$/;"	f
file_dump	/home/jasta/c/giFT/lib/file.c	/^int file_dump (char *file, char *data, unsigned long len)$/;"	f
file_exists	/home/jasta/c/giFT/lib/file.c	/^int file_exists (char *file, off_t *size, time_t *mtime)$/;"	f
file_expand_path	/home/jasta/c/giFT/lib/file.c	/^char *file_expand_path (char *path)$/;"	f
file_host_path	/home/jasta/c/giFT/lib/file.c	/^char *file_host_path (char *unix_path)$/;"	f
file_mv	/home/jasta/c/giFT/lib/file.c	/^int file_mv (char *src, char *dst)$/;"	f
file_opendir	/home/jasta/c/giFT/lib/file.c	/^DIR *file_opendir (char *dir)$/;"	f
file_read_line	/home/jasta/c/giFT/lib/file.c	/^char *file_read_line (FILE *f, char **outbuf)$/;"	f
file_readdir	/home/jasta/c/giFT/lib/file.c	/^struct dirent *file_readdir (DIR *dh)$/;"	f
file_rmdir	/home/jasta/c/giFT/lib/file.c	/^int file_rmdir (char *path)$/;"	f
file_secure_path	/home/jasta/c/giFT/lib/file.c	/^char *file_secure_path (char *path)$/;"	f
file_slurp	/home/jasta/c/giFT/lib/file.c	/^int file_slurp (char *file, char **data, unsigned long *len)$/;"	f
file_stat	/home/jasta/c/giFT/lib/file.c	/^int file_stat (int fd, off_t *size, time_t *mtime)$/;"	f
file_temp	/home/jasta/c/giFT/lib/file.c	/^FILE *file_temp (char **out, char *module)$/;"	f
file_uncompress	/home/jasta/c/giFT/OpenFT/share_comp.c	/^static char *file_uncompress (char *path)$/;"	f	file:
file_unix_path	/home/jasta/c/giFT/lib/file.c	/^char *file_unix_path (char *host_path)$/;"	f
filename	/home/jasta/c/giFT/src/transfer.h	/^	char         *filename;     \/* the name of the save file *\/$/;"	m	struct:_transfer
filename	/home/jasta/c/giFT/ui/fe_share.h	/^	char *filename;  \/* displayed filename ... *\/$/;"	m	struct:_shared_file
files	/home/jasta/c/giFT/OpenFT/daemon.c	/^	unsigned long files;$/;"	m	struct:_stats	file:
filesize	/home/jasta/c/giFT/ui/fe_share.h	/^	size_t filesize; \/* total file size (in bytes) *\/$/;"	m	struct:_shared_file
fill_chunks	/home/jasta/c/giFT/src/download.c	/^static void fill_chunks (Transfer *transfer, char *chunks)$/;"	f	file:
find_custom_default	/home/jasta/c/giFT/lib/list.c	/^static int find_custom_default (void *a, void *b)$/;"	f	file:
find_file	/home/jasta/c/giFT/src/share_cache.c	/^static int find_file (unsigned long key, FileShare *file, char *filename)$/;"	f	file:
find_inactive	/home/jasta/c/giFT/src/download.c	/^static int find_inactive (Source *a, void *b)$/;"	f	file:
find_inactive_source	/home/jasta/c/giFT/src/download.c	/^static Source *find_inactive_source (Transfer *transfer)$/;"	f	file:
find_list	/home/jasta/c/giFT/lib/event.c	/^static Input *find_list (List **list, Protocol *p, int fd,$/;"	f	file:
find_next_queue	/home/jasta/c/giFT/src/download.c	/^static int find_next_queue (Transfer *transfer, Source **source)$/;"	f	file:
find_open	/home/jasta/c/giFT/OpenFT/xfer.c	/^static int find_open (Connection *c, void *ip)$/;"	f	file:
find_share_hash	/home/jasta/c/giFT/src/share_cache.c	/^static FileShare *find_share_hash (Dataset **shares, List **duplicates,$/;"	f	file:
find_share_node	/home/jasta/c/giFT/ui/fe_utils.c	/^GtkCTreeNode *find_share_node (char *hash, char *user, unsigned long size,$/;"	f
find_share_path	/home/jasta/c/giFT/src/share_cache.c	/^static FileShare *find_share_path (Dataset **shares, List **duplicates,$/;"	f	file:
finish_search	/home/jasta/c/giFT/OpenFT/node.c	/^static int finish_search (IFEventID id, Search *search, Connection *c)$/;"	f	file:
finished	/home/jasta/c/giFT/win32/giFTsetup/giFTsetup.c	/^static int        finished        = FALSE;$/;"	v	file:
firewalled	/home/jasta/c/giFT/OpenFT/node.h	/^	unsigned char  firewalled : 1; \/* port is 0 *\/$/;"	m	struct:
flag	/home/jasta/c/giFT/lib/nb.h	/^	int   flag;                        \/**< Arbitrary state incrementation.$/;"	m	struct:
flag	/home/jasta/c/giFT/src/transfer.h	/^	int           flag;         \/* arbitrary state flag...used by downloads$/;"	m	struct:_transfer
flush_file	/home/jasta/c/giFT/OpenFT/share_comp.c	/^static int flush_file (unsigned long key, FileShare *file, char *path)$/;"	f	file:
flushed	/home/jasta/c/giFT/src/share_file.h	/^	off_t          flushed;  \/* if this data was flushed to disk, this will be$/;"	m	struct:_file_share
format_href_disp	/home/jasta/c/giFT/ui/fe_utils.c	/^char *format_href_disp (char *href)$/;"	f
format_size_disp	/home/jasta/c/giFT/ui/fe_utils.c	/^char *format_size_disp (char start_unit, size_t size)$/;"	f
format_user_disp	/home/jasta/c/giFT/ui/fe_utils.c	/^char *format_user_disp (char *user)$/;"	f
found	/home/jasta/c/giFT/research/test.c	/^static List *found = NULL;$/;"	v	file:
free_pair	/home/jasta/c/giFT/lib/list_dataset.c	/^static int free_pair (struct _pair *pair, int *free_value)$/;"	f	file:
free_sroot	/home/jasta/c/giFT/src/share_cache.c	/^static int free_sroot (struct _sroot *sr, void *udata)$/;"	f	file:
free_table	/home/jasta/c/giFT/ui/fe_obj.c	/^free_table[] =$/;"	v
frozen	/home/jasta/c/giFT/lib/hash.h	/^	int           frozen;$/;"	m	struct:_hash_table
ft_accept_test	/home/jasta/c/giFT/OpenFT/utils.c	/^void ft_accept_test (Connection *c)$/;"	f
ft_connect	/home/jasta/c/giFT/OpenFT/utils.c	/^int ft_connect (Connection *c)$/;"	f
ft_daemon_callback	/home/jasta/c/giFT/OpenFT/daemon.c	/^void ft_daemon_callback (Protocol *p, Connection *c, Dataset *event)$/;"	f
ft_daemon_close	/home/jasta/c/giFT/OpenFT/openft.c	/^static void ft_daemon_close (Connection *c)$/;"	f	file:
ft_daemon_destroy	/home/jasta/c/giFT/OpenFT/openft.c	/^static void ft_daemon_destroy (Protocol *p)$/;"	f	file:
ft_daemon_download	/home/jasta/c/giFT/OpenFT/xfer.c	/^void ft_daemon_download (Chunk *chunk, ProtocolCommand command, void *data)$/;"	f
ft_daemon_share	/home/jasta/c/giFT/OpenFT/openft.c	/^static void ft_daemon_share (FileShare *file, ProtocolCommand command,$/;"	f	file:
ft_daemon_source_cmp	/home/jasta/c/giFT/OpenFT/xfer.c	/^int ft_daemon_source_cmp (Source *a, Source *b)$/;"	f
ft_daemon_upload	/home/jasta/c/giFT/OpenFT/xfer.c	/^void ft_daemon_upload (Chunk *chunk, ProtocolCommand command, void *data)$/;"	f
ft_download	/home/jasta/c/giFT/OpenFT/xfer.c	/^void ft_download (Chunk *chunk, char *segment, size_t len)$/;"	f
ft_handle_incoming	/home/jasta/c/giFT/OpenFT/utils.c	/^void ft_handle_incoming (Protocol *p, Connection *c)$/;"	f
ft_handle_popup	/home/jasta/c/giFT/ui/fe_menu.c	/^int ft_handle_popup (GtkWidget *widget, GdkEventButton *event,$/;"	f
ft_handle_source	/home/jasta/c/giFT/OpenFT/utils.c	/^static void ft_handle_source (Protocol *p, Connection *c)$/;"	f	file:
ft_handle_verification	/home/jasta/c/giFT/OpenFT/utils.c	/^static int ft_handle_verification (Protocol *p, Connection *c)$/;"	f	file:
ft_host_share_add	/home/jasta/c/giFT/OpenFT/share.c	/^FT_HostShare *ft_host_share_add (int verified, unsigned long host,$/;"	f
ft_host_share_del_db	/home/jasta/c/giFT/OpenFT/share_db.c	/^void ft_host_share_del_db (FT_HostShare *h_share)$/;"	f
ft_host_share_free	/home/jasta/c/giFT/OpenFT/share.c	/^void ft_host_share_free (FT_HostShare *h_share)$/;"	f
ft_host_share_new	/home/jasta/c/giFT/OpenFT/share.c	/^FT_HostShare *ft_host_share_new (int verified, unsigned long host,$/;"	f
ft_host_share_new_db	/home/jasta/c/giFT/OpenFT/share_db.c	/^void ft_host_share_new_db (FT_HostShare *h_share)$/;"	f
ft_host_share_status	/home/jasta/c/giFT/OpenFT/share.c	/^void ft_host_share_status (FT_HostShare *h_share, int enabled,$/;"	f
ft_int16	/home/jasta/c/giFT/giftconfig.h	/^typedef signed short ft_int16;$/;"	t
ft_int16	/home/jasta/c/giFT/win32/giftconfig.h	/^typedef signed short ft_int16;$/;"	t
ft_int32	/home/jasta/c/giFT/giftconfig.h	/^typedef signed int ft_int32;$/;"	t
ft_int32	/home/jasta/c/giFT/win32/giftconfig.h	/^typedef signed int ft_int32;$/;"	t
ft_int8	/home/jasta/c/giFT/giftconfig.h	/^typedef signed char ft_int8;$/;"	t
ft_int8	/home/jasta/c/giFT/win32/giftconfig.h	/^typedef signed char ft_int8;$/;"	t
ft_maint	/home/jasta/c/giFT/OpenFT/openft.c	/^static unsigned long ft_maint = 0;     \/* timer for connection maintenance *\/$/;"	v	file:
ft_make_version	/home/jasta/c/giFT/OpenFT/utils.c	/^ft_uint32 ft_make_version (unsigned short major, unsigned short minor,$/;"	f
ft_node_connection	/home/jasta/c/giFT/OpenFT/node.c	/^void ft_node_connection (Protocol *p, Connection *c)$/;"	f
ft_packet_append	/home/jasta/c/giFT/OpenFT/packet.c	/^int ft_packet_append (FTPacket **packet, char *fmt, ...)$/;"	f
ft_packet_data	/home/jasta/c/giFT/OpenFT/packet.c	/^static char *ft_packet_data (char *fmt, va_list args,$/;"	f	file:
ft_packet_free	/home/jasta/c/giFT/OpenFT/packet.c	/^void ft_packet_free (FTPacket *packet)$/;"	f
ft_packet_get_array	/home/jasta/c/giFT/OpenFT/packet.c	/^void *ft_packet_get_array (FTPacket *packet, size_t size, int host_order)$/;"	f
ft_packet_get_int	/home/jasta/c/giFT/OpenFT/packet.c	/^ft_uint32 ft_packet_get_int (FTPacket *packet, size_t size, int host_order)$/;"	f
ft_packet_get_ip	/home/jasta/c/giFT/OpenFT/packet.c	/^ft_uint32 ft_packet_get_ip (FTPacket *packet)$/;"	f
ft_packet_get_str	/home/jasta/c/giFT/OpenFT/packet.c	/^char *ft_packet_get_str (FTPacket *packet)$/;"	f
ft_packet_new	/home/jasta/c/giFT/OpenFT/packet.c	/^FTPacket *ft_packet_new (ft_uint16 ft_command, char *data, int len)$/;"	f
ft_packet_send	/home/jasta/c/giFT/OpenFT/packet.c	/^int ft_packet_send (Connection *c, unsigned short ft_command, char *fmt, ...)$/;"	f
ft_packet_send_constructed	/home/jasta/c/giFT/OpenFT/packet.c	/^int ft_packet_send_constructed (Connection *c, FTPacket *packet)$/;"	f
ft_packet_send_data	/home/jasta/c/giFT/OpenFT/packet.c	/^static int ft_packet_send_data (Connection *c, unsigned short ft_command,$/;"	f	file:
ft_packet_send_indirect	/home/jasta/c/giFT/OpenFT/packet.c	/^int ft_packet_send_indirect (unsigned long deliver_to,$/;"	f
ft_scrolled_window	/home/jasta/c/giFT/ui/fe_utils.c	/^GtkWidget *ft_scrolled_window (GtkWidget *widget, GtkPolicyType hpolicy,$/;"	f
ft_search	/home/jasta/c/giFT/OpenFT/search.c	/^List *ft_search (size_t *r_size, int search_type,$/;"	f
ft_self	/home/jasta/c/giFT/OpenFT/openft.c	/^Connection *ft_self           = NULL;  \/* current class information *\/$/;"	v
ft_share_add	/home/jasta/c/giFT/OpenFT/share.c	/^void ft_share_add (int verified, unsigned long host, unsigned short port,$/;"	f
ft_share_complete	/home/jasta/c/giFT/OpenFT/share.c	/^int ft_share_complete (FileShare *file)$/;"	f
ft_share_disable	/home/jasta/c/giFT/OpenFT/share.c	/^void ft_share_disable (unsigned long host)$/;"	f
ft_share_enable	/home/jasta/c/giFT/OpenFT/share.c	/^void ft_share_enable (unsigned long host)$/;"	f
ft_share_flush	/home/jasta/c/giFT/OpenFT/share_db.c	/^int ft_share_flush (FileShare *file, char *path, int purge)$/;"	f
ft_share_free	/home/jasta/c/giFT/OpenFT/share.c	/^void ft_share_free (FileShare *file)$/;"	f
ft_share_free_proto	/home/jasta/c/giFT/OpenFT/share.c	/^static void ft_share_free_proto (FileShare *file)$/;"	f	file:
ft_share_import	/home/jasta/c/giFT/OpenFT/share_db.c	/^int ft_share_import (FT_HostShare *h_share, char *path)$/;"	f
ft_share_local_add	/home/jasta/c/giFT/OpenFT/share.c	/^void ft_share_local_add (FileShare *file)$/;"	f
ft_share_local_cleanup	/home/jasta/c/giFT/OpenFT/share.c	/^void ft_share_local_cleanup ()$/;"	f
ft_share_local_flush	/home/jasta/c/giFT/OpenFT/share.c	/^void ft_share_local_flush ()$/;"	f
ft_share_local_remove	/home/jasta/c/giFT/OpenFT/share.c	/^void ft_share_local_remove (FileShare *file)$/;"	f
ft_share_local_submit	/home/jasta/c/giFT/OpenFT/share.c	/^void ft_share_local_submit (Connection *c)$/;"	f
ft_share_local_sync	/home/jasta/c/giFT/OpenFT/share.c	/^void ft_share_local_sync ()$/;"	f
ft_share_new	/home/jasta/c/giFT/OpenFT/share.c	/^FileShare *ft_share_new (FT_HostShare *h_share, unsigned long size,$/;"	f
ft_share_new_proto	/home/jasta/c/giFT/OpenFT/share.c	/^static FT_Share *ft_share_new_proto (FileShare *file, FT_HostShare *h_share)$/;"	f	file:
ft_share_remove_by_host	/home/jasta/c/giFT/OpenFT/share.c	/^void ft_share_remove_by_host (unsigned long host, int force)$/;"	f
ft_share_set_limit	/home/jasta/c/giFT/OpenFT/share.c	/^void ft_share_set_limit (unsigned long host, int max_slots)$/;"	f
ft_share_set_uploads	/home/jasta/c/giFT/OpenFT/share.c	/^void ft_share_set_uploads (unsigned long host, int uploads)$/;"	f
ft_share_stats_add	/home/jasta/c/giFT/OpenFT/share.c	/^void ft_share_stats_add (unsigned long parent, unsigned long user,$/;"	f
ft_share_stats_get	/home/jasta/c/giFT/OpenFT/share.c	/^void ft_share_stats_get (unsigned long *user, unsigned long *shares,$/;"	f
ft_share_stats_get_digest	/home/jasta/c/giFT/OpenFT/share.c	/^void ft_share_stats_get_digest (unsigned long host, unsigned long *shares,$/;"	f
ft_share_stats_remove	/home/jasta/c/giFT/OpenFT/share.c	/^void ft_share_stats_remove (unsigned long parent, unsigned long user)$/;"	f
ft_share_unflush	/home/jasta/c/giFT/OpenFT/share_db.c	/^int ft_share_unflush (FileShare *file, char *path)$/;"	f
ft_share_verified	/home/jasta/c/giFT/OpenFT/share.c	/^void ft_share_verified (unsigned long host)$/;"	f
ft_shares	/home/jasta/c/giFT/OpenFT/share.c	/^HashTable *ft_shares = NULL;$/;"	v
ft_source_free	/home/jasta/c/giFT/OpenFT/xfer.c	/^static void ft_source_free (struct _ft_source *src)$/;"	f	file:
ft_source_new	/home/jasta/c/giFT/OpenFT/xfer.c	/^static struct _ft_source *ft_source_new (char *url)$/;"	f	file:
ft_start	/home/jasta/c/giFT/OpenFT/openft.c	/^static Connection *ft_start (unsigned short klass, unsigned short port)$/;"	f	file:
ft_stats	/home/jasta/c/giFT/OpenFT/share.c	/^static HashTable *ft_stats = NULL;$/;"	v	file:
ft_transfer_cancel	/home/jasta/c/giFT/OpenFT/xfer.c	/^static void ft_transfer_cancel (Chunk *chunk, TransferType type)$/;"	f	file:
ft_transfer_close	/home/jasta/c/giFT/OpenFT/xfer.c	/^void ft_transfer_close (FT_Transfer *xfer, int force_close)$/;"	f
ft_transfer_free	/home/jasta/c/giFT/OpenFT/xfer.c	/^static void ft_transfer_free (FT_Transfer *xfer)$/;"	f	file:
ft_transfer_log	/home/jasta/c/giFT/OpenFT/xfer.c	/^void ft_transfer_log (FT_Transfer *xfer)$/;"	f
ft_transfer_new	/home/jasta/c/giFT/OpenFT/xfer.c	/^FT_Transfer *ft_transfer_new (FT_TransferCB cb,$/;"	f
ft_transfer_open_request	/home/jasta/c/giFT/OpenFT/xfer.c	/^FILE *ft_transfer_open_request (FT_Transfer *xfer, int *code)$/;"	f
ft_transfer_ref	/home/jasta/c/giFT/OpenFT/xfer.c	/^void ft_transfer_ref (Connection *c, Chunk *chunk, FT_Transfer *xfer)$/;"	f
ft_transfer_set_request	/home/jasta/c/giFT/OpenFT/xfer.c	/^int ft_transfer_set_request (FT_Transfer *xfer, char *request)$/;"	f
ft_transfer_unref	/home/jasta/c/giFT/OpenFT/xfer.c	/^void ft_transfer_unref (Connection **r_c, Chunk **r_chunk,$/;"	f
ft_uint16	/home/jasta/c/giFT/giftconfig.h	/^typedef unsigned short ft_uint16;$/;"	t
ft_uint16	/home/jasta/c/giFT/win32/giftconfig.h	/^typedef unsigned short ft_uint16;$/;"	t
ft_uint32	/home/jasta/c/giFT/giftconfig.h	/^typedef unsigned int ft_uint32;$/;"	t
ft_uint32	/home/jasta/c/giFT/win32/giftconfig.h	/^typedef unsigned int ft_uint32;$/;"	t
ft_uint8	/home/jasta/c/giFT/giftconfig.h	/^typedef unsigned char ft_uint8;$/;"	t
ft_uint8	/home/jasta/c/giFT/win32/giftconfig.h	/^typedef unsigned char ft_uint8;$/;"	t
ft_upload	/home/jasta/c/giFT/OpenFT/xfer.c	/^void ft_upload (Chunk *chunk, char *segment, size_t len)$/;"	f
func	/home/jasta/c/giFT/OpenFT/protocol.c	/^	ProtocolHandler func;$/;"	m	struct:_handler_table	file:
func	/home/jasta/c/giFT/lib/if_event.h	/^	IFEventFunc func;$/;"	m	struct:_if_event
func	/home/jasta/c/giFT/lib/queue.h	/^	QueueWriteFunc func;               \/**< Main writing function *\/$/;"	m	struct:
func	/home/jasta/c/giFT/src/mortal.h	/^	MortalDestroyFunc func;$/;"	m	struct:
g	/home/jasta/c/giFT/research/test.c	/^	int g;$/;"	m	struct:_foo	file:
gather_stats	/home/jasta/c/giFT/OpenFT/daemon.c	/^static Connection *gather_stats (Connection *c, Node *node,$/;"	f	file:
generic_column_sort	/home/jasta/c/giFT/ui/fe_utils.c	/^void generic_column_sort (GtkWidget *w, int column, char *sort_info)$/;"	f
generic_column_sort_double	/home/jasta/c/giFT/ui/fe_utils.c	/^static int generic_column_sort_double (GtkCList *clist,$/;"	f	file:
generic_column_sort_int	/home/jasta/c/giFT/ui/fe_utils.c	/^static int generic_column_sort_int (GtkCList *clist,$/;"	f	file:
generic_column_sort_str	/home/jasta/c/giFT/ui/fe_utils.c	/^static int generic_column_sort_str (GtkCList *clist,$/;"	f	file:
get_client_request	/home/jasta/c/giFT/OpenFT/http_server.c	/^static void get_client_request (Protocol *p, Connection *c)$/;"	f	file:
get_complete_connect	/home/jasta/c/giFT/OpenFT/http_client.c	/^static void get_complete_connect (Protocol *p, Connection *c)$/;"	f	file:
get_hook_hint	/home/jasta/c/giFT/src/upload.c	/^static int get_hook_hint (char *user, char *path)$/;"	f	file:
get_last_event	/home/jasta/c/giFT/ui/fe_fifo.c	/^DaemonEvent *get_last_event (int rm)$/;"	f
get_last_event_size	/home/jasta/c/giFT/ui/fe_fifo.c	/^int get_last_event_size ()$/;"	f
get_random_port	/home/jasta/c/giFT/win32/giFTsetup/giFTsetup.c	/^static unsigned short get_random_port ()$/;"	f	file:
get_read_file	/home/jasta/c/giFT/OpenFT/http_client.c	/^void get_read_file (Protocol *p, Connection *c)$/;"	f
get_response	/home/jasta/c/giFT/ui/gsh/gsh.c	/^static char *get_response ()$/;"	f	file:
get_server_reply	/home/jasta/c/giFT/OpenFT/http_client.c	/^static void get_server_reply (Protocol *p, Connection *c)$/;"	f	file:
gift_attach	/home/jasta/c/giFT/win32/giFTtray/giFTtray.c	/^static int gift_attach (char *ip, unsigned short port)$/;"	f	file:
gift_conf	/home/jasta/c/giFT/lib/gift.c	/^static Config     *gift_conf   = NULL;$/;"	v	file:
gift_conf	/home/jasta/c/giFT/src/main.c	/^Config         *gift_conf;        \/* main configuration file     *\/$/;"	v
gift_conf	/home/jasta/c/giFT/ui/gift-fe.c	/^Config         *gift_conf;        \/* main configuration file     *\/$/;"	v
gift_conf	/home/jasta/c/giFT/win32/giFTsetup/giFTsetup.c	/^static Config    *gift_conf       = NULL;$/;"	v	file:
gift_conf_path	/home/jasta/c/giFT/lib/conf.c	/^char *gift_conf_path(char *fmt, ...)$/;"	f
gift_config_new	/home/jasta/c/giFT/lib/conf.c	/^Config *gift_config_new (char *module)$/;"	f
gift_conn	/home/jasta/c/giFT/lib/gift.c	/^static Connection *gift_conn   = NULL;$/;"	v	file:
gift_conn	/home/jasta/c/giFT/win32/giFTtray/giFTtray.c	/^static Connection     *gift_conn;$/;"	v	file:
gift_exit	/home/jasta/c/giFT/src/main.c	/^void gift_exit ()$/;"	f
gift_fe_conf	/home/jasta/c/giFT/ui/gift-fe.c	/^Config        *gift_fe_conf = NULL;$/;"	v
gift_fe_debug	/home/jasta/c/giFT/ui/gift-fe.c	/^void gift_fe_debug (char *fmt, ...)$/;"	f
gift_ip	/home/jasta/c/giFT/win32/giFTtray/giFTtray.c	/^static char           *gift_ip;$/;"	v	file:
gift_main	/home/jasta/c/giFT/src/main.c	/^int gift_main (int argc, char **argv)$/;"	f
gift_message_box	/home/jasta/c/giFT/ui/fe_ui_utils.c	/^int gift_message_box (char *title, char *message)$/;"	f
gift_opt	/home/jasta/c/giFT/win32/giFTtray/giFTtray.c	/^static void gift_opt ()$/;"	f	file:
gift_port	/home/jasta/c/giFT/win32/giFTtray/giFTtray.c	/^static unsigned short  gift_port;$/;"	v	file:
gift_restart	/home/jasta/c/giFT/win32/giFTtray/giFTtray.c	/^static void gift_restart ()$/;"	f	file:
gift_setup_msg	/home/jasta/c/giFT/src/main.c	/^static void gift_setup_msg ()$/;"	f	file:
gift_shutdown	/home/jasta/c/giFT/src/main.c	/^static void gift_shutdown (int signum)$/;"	f	file:
gift_start	/home/jasta/c/giFT/win32/giFTtray/giFTtray.c	/^static int gift_start ()$/;"	f	file:
gift_stop	/home/jasta/c/giFT/win32/giFTtray/giFTtray.c	/^static int gift_stop ()$/;"	f	file:
gift_version	/home/jasta/c/giFT/lib/platform.c	/^static char *gift_version = NULL;$/;"	v	file:
guess_mime_type	/home/jasta/c/giFT/ui/fe_share.c	/^static char *guess_mime_type (char *filename)$/;"	f	file:
gz_compress	/home/jasta/c/giFT/OpenFT/share_comp.c	/^static int gz_compress (FILE *f_in, gzFile f_out)$/;"	f	file:
gz_uncompress	/home/jasta/c/giFT/OpenFT/share_comp.c	/^static int gz_uncompress (gzFile f_in, FILE *f_out)$/;"	f	file:
h	/home/jasta/c/giFT/research/test.c	/^	int h;$/;"	m	struct:_foo	file:
h_query	/home/jasta/c/giFT/OpenFT/search.c	/^	unsigned long h_query;$/;"	m	struct:_match_data	file:
h_share	/home/jasta/c/giFT/OpenFT/search.c	/^	FT_HostShare *h_share; \/* this is used so that it doesn't need to be$/;"	m	struct:_match_data	file:
handle	/home/jasta/c/giFT/lib/protocol.h	/^	void               *handle;$/;"	m	struct:_protocol
handle_chunk_timeout	/home/jasta/c/giFT/src/download.c	/^static void handle_chunk_timeout (Chunk *chunk, Transfer *transfer)$/;"	f	file:
handle_command	/home/jasta/c/giFT/win32/giFTtray/giFTtray.c	/^static int handle_command (int id, int event)$/;"	f	file:
handle_file	/home/jasta/c/giFT/src/share_cache.c	/^static int handle_file (FILE *f, Dataset **shares, List **duplicates,$/;"	f	file:
handle_gain	/home/jasta/c/giFT/OpenFT/node.c	/^static void handle_gain (Connection *c, unsigned short klass)$/;"	f	file:
handle_heartbeat	/home/jasta/c/giFT/OpenFT/node.c	/^static Connection *handle_heartbeat (Connection *c, Node *node, void *udata)$/;"	f	file:
handle_incoming	/home/jasta/c/giFT/src/if_port.c	/^static void handle_incoming (Protocol *p, Connection *c)$/;"	f	file:
handle_loss	/home/jasta/c/giFT/OpenFT/node.c	/^static void handle_loss (Connection *c, unsigned short klass)$/;"	f	file:
handle_next_queue	/home/jasta/c/giFT/src/download.c	/^static void handle_next_queue (Transfer *transfer)$/;"	f	file:
handle_source_queue	/home/jasta/c/giFT/src/download.c	/^static int handle_source_queue (Transfer *transfer, Source *source)$/;"	f	file:
handle_tray_message	/home/jasta/c/giFT/win32/giFTtray/giFTtray.c	/^static void handle_tray_message (UINT message)$/;"	f	file:
handler	/home/jasta/c/giFT/src/perl.c	/^	char *handler;$/;"	m	struct:_perl_hook	file:
hash	/home/jasta/c/giFT/OpenFT/xfer.h	/^	char          *hash;               \/* openft's hash to deliever to the$/;"	m	struct:
hash	/home/jasta/c/giFT/src/transfer.h	/^	char          *hash;     \/* 3da9f138de951c22c8a850899680a9e4       *\/$/;"	m	struct:_source
hash	/home/jasta/c/giFT/src/transfer.h	/^	char         *hash;         \/* protocol-specific hash to reference this$/;"	m	struct:_transfer
hash	/home/jasta/c/giFT/ui/fe_share.h	/^	char *hash;      \/* unique hash for identifying this share *\/$/;"	m	struct:_shared_file
hash_direct	/home/jasta/c/giFT/lib/hash.c	/^unsigned long hash_direct (unsigned long key)$/;"	f
hash_flatten	/home/jasta/c/giFT/lib/hash.c	/^List *hash_flatten (HashTable *table)$/;"	f
hash_flatten_node	/home/jasta/c/giFT/lib/hash.c	/^static int hash_flatten_node (unsigned long key, void *value, List **list)$/;"	f	file:
hash_func	/home/jasta/c/giFT/lib/hash.h	/^	HashKeyFunc   hash_func;$/;"	m	struct:_hash_table
hash_node_destroy	/home/jasta/c/giFT/lib/hash.c	/^static HashNode *hash_node_destroy (HashNode *node, HashTable *table)$/;"	f	file:
hash_node_new	/home/jasta/c/giFT/lib/hash.c	/^static HashNode *hash_node_new (unsigned long key, void *value)$/;"	f	file:
hash_nodes_destroy	/home/jasta/c/giFT/lib/hash.c	/^static void hash_nodes_destroy (HashNode *node, HashTable *table)$/;"	f	file:
hash_string	/home/jasta/c/giFT/lib/hash.c	/^unsigned long hash_string (char *str)$/;"	f
hash_table_destroy	/home/jasta/c/giFT/lib/hash.c	/^void hash_table_destroy (HashTable *table)$/;"	f
hash_table_destroy_free	/home/jasta/c/giFT/lib/hash.c	/^void hash_table_destroy_free (HashTable *table)$/;"	f
hash_table_find	/home/jasta/c/giFT/lib/hash.c	/^void *hash_table_find (HashTable *table, HashFunc func, void *udata)$/;"	f
hash_table_find_key	/home/jasta/c/giFT/lib/hash.c	/^unsigned long hash_table_find_key (HashTable *table, HashFunc func, void *udata)$/;"	f
hash_table_foreach	/home/jasta/c/giFT/lib/hash.c	/^void hash_table_foreach (HashTable *table, HashFunc func, void *udata)$/;"	f
hash_table_foreach_remove	/home/jasta/c/giFT/lib/hash.c	/^int hash_table_foreach_remove (HashTable *table, HashFunc func, void *udata)$/;"	f
hash_table_insert	/home/jasta/c/giFT/lib/hash.c	/^void hash_table_insert (HashTable *table, unsigned long key, void *value)$/;"	f
hash_table_lookup	/home/jasta/c/giFT/lib/hash.c	/^void *hash_table_lookup (HashTable *table, unsigned long key)$/;"	f
hash_table_lookup_node	/home/jasta/c/giFT/lib/hash.c	/^static HashNode **hash_table_lookup_node (HashTable *table,$/;"	f	file:
hash_table_new	/home/jasta/c/giFT/lib/hash.c	/^HashTable *hash_table_new ()$/;"	f
hash_table_remove	/home/jasta/c/giFT/lib/hash.c	/^void hash_table_remove (HashTable *table, unsigned long key)$/;"	f
hash_table_resize	/home/jasta/c/giFT/lib/hash.c	/^static void hash_table_resize (HashTable *table)$/;"	f	file:
hash_z	/home/jasta/c/giFT/research/test.c	/^static unsigned long hash_z (int *z)$/;"	f	file:
head	/home/jasta/c/giFT/ui/fe_share.c	/^	char *head;$/;"	m	struct:mime_entry	file:
header	/home/jasta/c/giFT/OpenFT/xfer.h	/^	Dataset       *header;             \/* HTTP headers *\/$/;"	m	struct:
headers	/home/jasta/c/giFT/lib/conf.h	/^	struct _list *headers;             \/**< list of ConfigHeader's *\/$/;"	m	struct:
heartbeat	/home/jasta/c/giFT/OpenFT/node.h	/^	unsigned char  heartbeat : 4;$/;"	m	struct:
home_dir	/home/jasta/c/giFT/lib/platform.c	/^static char *home_dir = NULL;$/;"	v	file:
hook_event	/home/jasta/c/giFT/src/hook.c	/^HookVar *hook_event (char *name, int ret, ...)$/;"	f
hook_var_free	/home/jasta/c/giFT/src/hook.c	/^void hook_var_free (HookVar *hv)$/;"	f
hook_var_new	/home/jasta/c/giFT/src/hook.c	/^HookVar *hook_var_new (HookVarType type, void *value)$/;"	f
hook_var_value	/home/jasta/c/giFT/src/hook.c	/^void *hook_var_value (HookVar *hv)$/;"	f
host	/home/jasta/c/giFT/OpenFT/share.h	/^	unsigned long  host;         \/* ip of the user who owns the shares in$/;"	m	struct:
host_share	/home/jasta/c/giFT/OpenFT/share.h	/^	FT_HostShare  *host_share; \/* reference to parent *\/$/;"	m	struct:
host_share_flush	/home/jasta/c/giFT/OpenFT/share_db.c	/^static int host_share_flush (FT_HostShare *h_share)$/;"	f	file:
hpath	/home/jasta/c/giFT/src/share_file.h	/^	char         *hpath;    \/*           \/file.mp3 (memory from path)   *\/$/;"	m	struct:
html_page_index	/home/jasta/c/giFT/OpenFT/html.c	/^char *html_page_index (char *file)$/;"	f
html_page_redirect	/home/jasta/c/giFT/OpenFT/html.c	/^char *html_page_redirect (char *page)$/;"	f
html_strip	/home/jasta/c/giFT/OpenFT/html.c	/^char *html_strip (char *html)$/;"	f
html_update_nodepage	/home/jasta/c/giFT/OpenFT/html.c	/^void html_update_nodepage ()$/;"	f
http_bind	/home/jasta/c/giFT/OpenFT/openft.c	/^Connection *http_bind         = NULL;$/;"	v
http_client_get	/home/jasta/c/giFT/OpenFT/http_client.c	/^void http_client_get (Chunk *chunk, FT_Transfer *xfer)$/;"	f
http_client_push	/home/jasta/c/giFT/OpenFT/http_client.c	/^void http_client_push (unsigned long ip, unsigned short port, char *request,$/;"	f
http_client_reset	/home/jasta/c/giFT/OpenFT/http_client.c	/^void http_client_reset (Connection *c)$/;"	f
http_client_send	/home/jasta/c/giFT/OpenFT/http_client.c	/^static int http_client_send (Connection *c, char *command, char *request,$/;"	f	file:
http_connection_close	/home/jasta/c/giFT/OpenFT/xfer.c	/^void http_connection_close (Connection *c, int force_close)$/;"	f
http_connection_open	/home/jasta/c/giFT/OpenFT/xfer.c	/^Connection *http_connection_open (unsigned long ip, unsigned short port)$/;"	f
http_port	/home/jasta/c/giFT/OpenFT/node.h	/^	unsigned short http_port;$/;"	m	struct:
http_port	/home/jasta/c/giFT/OpenFT/share.h	/^	unsigned short http_port;$/;"	m	struct:
http_port_verify	/home/jasta/c/giFT/OpenFT/node.h	/^	Connection    *http_port_verify;$/;"	m	struct:
http_server_incoming	/home/jasta/c/giFT/OpenFT/http_server.c	/^void http_server_incoming (Protocol *p, Connection *c)$/;"	f
http_server_indirect_add	/home/jasta/c/giFT/OpenFT/http_server.c	/^void http_server_indirect_add (Chunk *chunk, unsigned long ip, char *request)$/;"	f
http_server_indirect_lookup	/home/jasta/c/giFT/OpenFT/http_server.c	/^Chunk *http_server_indirect_lookup (unsigned long ip, char *request)$/;"	f
http_server_indirect_remove	/home/jasta/c/giFT/OpenFT/http_server.c	/^void http_server_indirect_remove (unsigned long ip, char *request)$/;"	f
http_server_reset	/home/jasta/c/giFT/OpenFT/http_server.c	/^void http_server_reset (Connection *c)$/;"	f
http_server_send	/home/jasta/c/giFT/OpenFT/http_server.c	/^static int http_server_send (Connection *c, int code, ...)$/;"	f	file:
http_start	/home/jasta/c/giFT/OpenFT/openft.c	/^static Connection *http_start (unsigned short port)$/;"	f	file:
i	/home/jasta/c/giFT/research/test.c	/^	int i;$/;"	m	struct:_foo	file:
id	/home/jasta/c/giFT/OpenFT/search.h	/^	IFEventID  id;  \/* the hash table this data structure is stored in is$/;"	m	struct:_search
id	/home/jasta/c/giFT/lib/event.h	/^	unsigned long  id;$/;"	m	struct:
id	/home/jasta/c/giFT/lib/gift.c	/^	IFEventID id;$/;"	m	struct:	file:
id	/home/jasta/c/giFT/lib/if_event.h	/^	IFEventID id;$/;"	m	struct:_if_event
id	/home/jasta/c/giFT/src/transfer.h	/^	IFEventID     id;$/;"	m	struct:_transfer
id	/home/jasta/c/giFT/ui/fe_daemon.h	/^	unsigned long id;$/;"	m	struct:_daemon_event
id	/home/jasta/c/giFT/ui/fe_obj.h	/^	unsigned long id;$/;"	m	struct:
id	/home/jasta/c/giFT/ui/fe_search.h	/^	unsigned long id;$/;"	m	struct:
id	/home/jasta/c/giFT/ui/fe_transfer.h	/^	unsigned long id;$/;"	m	struct:
id_counter	/home/jasta/c/giFT/lib/if_event.c	/^static IFEventID  id_counter = 0;$/;"	v	file:
if_auth	/home/jasta/c/giFT/src/if_port.c	/^static int if_auth (Connection *c)$/;"	f	file:
if_connection	/home/jasta/c/giFT/src/if_port.c	/^static void if_connection (Protocol *p, Connection *c)$/;"	f	file:
if_event_attach	/home/jasta/c/giFT/lib/if_event.c	/^void if_event_attach (Connection *c)$/;"	f
if_event_close	/home/jasta/c/giFT/lib/if_event.c	/^void if_event_close (Connection *c)$/;"	f
if_event_data	/home/jasta/c/giFT/lib/if_event.c	/^void *if_event_data (IFEventID id)$/;"	f
if_event_free	/home/jasta/c/giFT/lib/if_event.c	/^static void if_event_free (IFEvent *event)$/;"	f	file:
if_event_new	/home/jasta/c/giFT/lib/if_event.c	/^IFEventID if_event_new (Connection *c, IFEventType type, IFEventFunc func,$/;"	f
if_event_remove	/home/jasta/c/giFT/lib/if_event.c	/^void if_event_remove (IFEventID id)$/;"	f
if_event_reply	/home/jasta/c/giFT/lib/if_event.c	/^void if_event_reply (IFEventID id, char *event_name, ...)$/;"	f
if_port_cleanup	/home/jasta/c/giFT/src/if_port.c	/^void if_port_cleanup ()$/;"	f
if_port_init	/home/jasta/c/giFT/src/if_port.c	/^int if_port_init (unsigned short port)$/;"	f
if_port_listen	/home/jasta/c/giFT/src/if_port.c	/^static Connection *if_port_listen = NULL;$/;"	v	file:
in	/home/jasta/c/giFT/src/md5.c	/^	unsigned char in[64];$/;"	m	struct:MD5Context	file:
inc_record	/home/jasta/c/giFT/OpenFT/share_db.c	/^static size_t inc_record (FILE *f, FileShare *file, FT_Share *share,$/;"	f	file:
incoming	/home/jasta/c/giFT/OpenFT/node.h	/^	unsigned char  incoming : 1;   \/* this node connected to us *\/$/;"	m	struct:
index_sort_cmp	/home/jasta/c/giFT/src/share_cache.c	/^static int index_sort_cmp (FileShare *a, FileShare *b)$/;"	f	file:
indexing	/home/jasta/c/giFT/src/share_cache.c	/^static int           indexing = FALSE;$/;"	v	file:
indirect_lookup	/home/jasta/c/giFT/OpenFT/http_server.c	/^static struct _indirect_source *indirect_lookup (unsigned long ip, char *request)$/;"	f	file:
info	/home/jasta/c/giFT/win32/giFTtray/giFTtray.c	/^static void info (const char *format, ...)$/;"	f	file:
initialized	/home/jasta/c/giFT/lib/gift.c	/^static int         initialized = FALSE;$/;"	v	file:
input	/home/jasta/c/giFT/OpenFT/node.h	/^	int            input;$/;"	m	struct:
input	/home/jasta/c/giFT/ui/fe_connect.h	/^	int input;$/;"	m	struct:_fe_connection
input_add	/home/jasta/c/giFT/lib/event.c	/^void input_add (Protocol *p, Connection *c, InputState state,$/;"	f
input_find	/home/jasta/c/giFT/lib/event.c	/^static Input *input_find (Protocol *p, int fd,$/;"	f	file:
input_match	/home/jasta/c/giFT/lib/event.c	/^static int input_match (Input *input, Protocol *p, int fd,$/;"	f	file:
input_remove	/home/jasta/c/giFT/lib/event.c	/^void input_remove (Connection *c)$/;"	f
input_remove_full	/home/jasta/c/giFT/lib/event.c	/^void input_remove_full (Protocol *p, Connection *c,$/;"	f
input_resume	/home/jasta/c/giFT/lib/event.c	/^void input_resume (Connection *c)$/;"	f
input_suspend	/home/jasta/c/giFT/lib/event.c	/^void input_suspend (Connection *c)$/;"	f
inputs	/home/jasta/c/giFT/lib/event.c	/^static ListLock *inputs = NULL;$/;"	v	file:
inputs_free	/home/jasta/c/giFT/lib/event.c	/^static List *inputs_free = NULL;$/;"	v	file:
insert_before	/home/jasta/c/giFT/lib/tree.c	/^static void insert_before (TreeNode *sibling, TreeNode *node)$/;"	f	file:
insert_menu_item	/home/jasta/c/giFT/win32/giFTtray/giFTtray.c	/^static void insert_menu_item (HMENU menu, int id, char *caption)$/;"	f	file:
insert_menu_sep	/home/jasta/c/giFT/win32/giFTtray/giFTtray.c	/^static void insert_menu_sep (HMENU menu)$/;"	f	file:
insert_under	/home/jasta/c/giFT/lib/tree.c	/^static void insert_under (TreeNode *parent, TreeNode *node)$/;"	f	file:
interface_close	/home/jasta/c/giFT/lib/interface.c	/^void interface_close (Connection *c)$/;"	f
interface_construct_packet	/home/jasta/c/giFT/lib/interface.c	/^char *interface_construct_packet (int *len, char *event, va_list args)$/;"	f
interface_parse_packet	/home/jasta/c/giFT/lib/interface.c	/^int interface_parse_packet (Dataset **dataset, char *packet)$/;"	f
interface_send	/home/jasta/c/giFT/lib/interface.c	/^void interface_send (Connection *c, char *event, ...)$/;"	f
interface_send_err	/home/jasta/c/giFT/lib/interface.c	/^void interface_send_err (Connection *c, char *error)$/;"	f
interval	/home/jasta/c/giFT/lib/event.h	/^	struct timeval interval;$/;"	m	struct:
invert_strcmp	/home/jasta/c/giFT/lib/dataset.c	/^static int invert_strcmp (char *a, char *b)$/;"	f	file:
ip	/home/jasta/c/giFT/OpenFT/http_server.c	/^	ft_uint32  ip;$/;"	m	struct:_indirect_source	file:
ip	/home/jasta/c/giFT/OpenFT/node.h	/^	unsigned long  ip;$/;"	m	struct:
ip	/home/jasta/c/giFT/OpenFT/xfer.c	/^	ft_uint32 ip;$/;"	m	struct:_ft_source	file:
ip	/home/jasta/c/giFT/OpenFT/xfer.h	/^	unsigned long  ip;                 \/* address of the user who is either$/;"	m	struct:
item	/home/jasta/c/giFT/OpenFT/netorg.c	/^	int       item; \/* item index in the table *\/$/;"	m	struct:_netorg_cursor	file:
items	/home/jasta/c/giFT/lib/hash.h	/^	unsigned long items;$/;"	m	struct:_hash_table
iterator	/home/jasta/c/giFT/OpenFT/netorg.c	/^static List     *iterator    = NULL;   \/* current "position" in connections *\/$/;"	v	file:
j	/home/jasta/c/giFT/research/test.c	/^	char j;$/;"	m	struct:_foo	file:
kbps_max	/home/jasta/c/giFT/OpenFT/search.h	/^	size_t     kbps_max;$/;"	m	struct:_search
kbps_min	/home/jasta/c/giFT/OpenFT/search.h	/^	size_t     kbps_min;$/;"	m	struct:_search
key	/home/jasta/c/giFT/lib/hash.h	/^	unsigned long      key;$/;"	m	struct:_hash_node
key	/home/jasta/c/giFT/lib/list_dataset.c	/^	char *key;$/;"	m	struct:_pair	file:
key_as_host	/home/jasta/c/giFT/OpenFT/search.c	/^static int key_as_host (unsigned long key, FT_HostShare *host_share,$/;"	f	file:
key_as_md5	/home/jasta/c/giFT/OpenFT/search.c	/^static int key_as_md5 (char *key, FileShare *file,$/;"	f	file:
key_equal_func	/home/jasta/c/giFT/lib/hash.h	/^	HashEqualFunc key_equal_func;$/;"	m	struct:_hash_table
key_remove_func	/home/jasta/c/giFT/lib/hash.h	/^	HashFunc      key_remove_func;$/;"	m	struct:_hash_table
keys	/home/jasta/c/giFT/lib/conf.h	/^	struct _hash_table *keys;          \/**< dataset holding key\/value pairs *\/$/;"	m	struct:
kind	/home/jasta/c/giFT/ui/fe_pref.c	/^	char *kind;  \/* this should be an typedef enumerator *\/$/;"	m	struct:option_entry	file:
len	/home/jasta/c/giFT/OpenFT/packet.h	/^	ft_uint16 len;$/;"	m	struct:
len	/home/jasta/c/giFT/lib/nb.h	/^	int   len;                         \/**< Currently read length  *\/$/;"	m	struct:
libgift_attach	/home/jasta/c/giFT/lib/gift.c	/^int libgift_attach ()$/;"	f
libgift_attach_host	/home/jasta/c/giFT/lib/gift.c	/^int libgift_attach_host (char *host, unsigned short port)$/;"	f
libgift_detach	/home/jasta/c/giFT/lib/gift.c	/^void libgift_detach ()$/;"	f
libgift_event_new	/home/jasta/c/giFT/lib/gift.c	/^static GiftEvent *libgift_event_new (char *event)$/;"	f	file:
libgift_init	/home/jasta/c/giFT/lib/gift.c	/^void libgift_init (int argc, char **argv)$/;"	f
libgift_packet	/home/jasta/c/giFT/lib/gift.c	/^static char *libgift_packet (Dataset **dataset)$/;"	f	file:
libgift_stats	/home/jasta/c/giFT/lib/gift.c	/^GiftEvent *libgift_stats ()$/;"	f
line_comment	/home/jasta/c/giFT/lib/conf.c	/^static int line_comment (char *line)$/;"	f	file:
list	/home/jasta/c/giFT/lib/list_dataset.h	/^	List *list;$/;"	m	struct:
list	/home/jasta/c/giFT/lib/list_lock.h	/^	List *list;$/;"	m	struct:
list	/home/jasta/c/giFT/lib/list_queue.h	/^	List *list;$/;"	m	struct:
list	/home/jasta/c/giFT/research/test.c	/^	List *list;$/;"	m	struct:_foo	file:
list_append	/home/jasta/c/giFT/lib/list.c	/^List *list_append (List *list, void *data)$/;"	f
list_copy	/home/jasta/c/giFT/lib/list.c	/^List *list_copy (List *list)$/;"	f
list_dataset_clear	/home/jasta/c/giFT/lib/list_dataset.c	/^void list_dataset_clear (ListDataset **list_ds)$/;"	f
list_dataset_clear_free	/home/jasta/c/giFT/lib/list_dataset.c	/^void list_dataset_clear_free (ListDataset **list_ds)$/;"	f
list_dataset_free	/home/jasta/c/giFT/lib/list_dataset.c	/^static void list_dataset_free (ListDataset *list_ds, int free_value)$/;"	f	file:
list_dataset_insert	/home/jasta/c/giFT/lib/list_dataset.c	/^void list_dataset_insert (ListDataset **list_ds, char *key, void *value)$/;"	f
list_dataset_lookup	/home/jasta/c/giFT/lib/list_dataset.c	/^void *list_dataset_lookup (ListDataset **list_ds, char *key)$/;"	f
list_dataset_new	/home/jasta/c/giFT/lib/list_dataset.c	/^static ListDataset *list_dataset_new ()$/;"	f	file:
list_dataset_remove	/home/jasta/c/giFT/lib/list_dataset.c	/^void list_dataset_remove (ListDataset **list_ds, char *key)$/;"	f
list_find	/home/jasta/c/giFT/lib/list.c	/^List *list_find (List *list, void *data)$/;"	f
list_find_custom	/home/jasta/c/giFT/lib/list.c	/^List *list_find_custom (List *list, void *data, CompareFunc func)$/;"	f
list_foreach	/home/jasta/c/giFT/lib/list.c	/^void list_foreach (List *list, ListForeachFunc func, void *udata)$/;"	f
list_foreach_remove	/home/jasta/c/giFT/lib/list.c	/^List *list_foreach_remove (List *list, ListForeachFunc func, void *udata)$/;"	f
list_free	/home/jasta/c/giFT/lib/list.c	/^List *list_free (List *list)$/;"	f
list_insert	/home/jasta/c/giFT/lib/list.c	/^List *list_insert (List *list, int index, void *data)$/;"	f
list_insert_sorted	/home/jasta/c/giFT/lib/list.c	/^List *list_insert_sorted (List *list, CompareFunc func, void *data)$/;"	f
list_last	/home/jasta/c/giFT/lib/list.c	/^List *list_last (List *list)$/;"	f
list_length	/home/jasta/c/giFT/lib/list.c	/^int list_length (List *list)$/;"	f
list_lock	/home/jasta/c/giFT/lib/list_lock.c	/^void list_lock (ListLock *lock)$/;"	f
list_lock_append	/home/jasta/c/giFT/lib/list_lock.c	/^void list_lock_append (ListLock *lock, void *data)$/;"	f
list_lock_free	/home/jasta/c/giFT/lib/list_lock.c	/^void list_lock_free (ListLock *lock)$/;"	f
list_lock_new	/home/jasta/c/giFT/lib/list_lock.c	/^ListLock *list_lock_new ()$/;"	f
list_lock_prepend	/home/jasta/c/giFT/lib/list_lock.c	/^void list_lock_prepend (ListLock *lock, void *data)$/;"	f
list_lock_remove	/home/jasta/c/giFT/lib/list_lock.c	/^void list_lock_remove (ListLock *lock, void *data)$/;"	f
list_new_entry	/home/jasta/c/giFT/lib/list.c	/^static List *list_new_entry (List *list, void *data)$/;"	f	file:
list_next	/home/jasta/c/giFT/lib/list.h	41;"	d
list_nth	/home/jasta/c/giFT/lib/list.c	/^List *list_nth (List *list, int n)$/;"	f
list_nth_data	/home/jasta/c/giFT/lib/list.c	/^void *list_nth_data (List *list, int n)$/;"	f
list_prepend	/home/jasta/c/giFT/lib/list.c	/^List *list_prepend (List *list, void *data)$/;"	f
list_prev	/home/jasta/c/giFT/lib/list.h	42;"	d
list_queue_free	/home/jasta/c/giFT/lib/list_queue.c	/^void list_queue_free (ListQueue *queue)$/;"	f
list_queue_new	/home/jasta/c/giFT/lib/list_queue.c	/^ListQueue *list_queue_new (List *list)$/;"	f
list_queue_pop	/home/jasta/c/giFT/lib/list_queue.c	/^void *list_queue_pop (ListQueue *queue)$/;"	f
list_queue_push	/home/jasta/c/giFT/lib/list_queue.c	/^void list_queue_push (ListQueue *queue, void *data)$/;"	f
list_queue_shift	/home/jasta/c/giFT/lib/list_queue.c	/^void *list_queue_shift (ListQueue *queue)$/;"	f
list_queue_unshift	/home/jasta/c/giFT/lib/list_queue.c	/^void list_queue_unshift (ListQueue *queue, void *data)$/;"	f
list_remove	/home/jasta/c/giFT/lib/list.c	/^List *list_remove (List *list, void *data)$/;"	f
list_remove_link	/home/jasta/c/giFT/lib/list.c	/^List *list_remove_link (List *list, List *link)$/;"	f
list_sort	/home/jasta/c/giFT/lib/list.c	/^List *list_sort (List *list, CompareFunc compare_func)$/;"	f
list_sort_default	/home/jasta/c/giFT/lib/list.c	/^static int list_sort_default (char *a, char *b)$/;"	f	file:
list_sort_merge	/home/jasta/c/giFT/lib/list.c	/^static List *list_sort_merge (List *l1, List *l2, CompareFunc compare_func)$/;"	f	file:
list_unlock	/home/jasta/c/giFT/lib/list_lock.c	/^void list_unlock (ListLock *lock)$/;"	f
load_protocols	/home/jasta/c/giFT/src/main.c	/^static int load_protocols ()$/;"	f	file:
load_types	/home/jasta/c/giFT/src/mime.c	/^static void load_types ()$/;"	f	file:
local	/home/jasta/c/giFT/ui/fe_stats.c	/^static GtkWidget *local = NULL;$/;"	v	file:
local_cleanup	/home/jasta/c/giFT/OpenFT/share.c	/^static int local_cleanup (unsigned long key, FileShare *file, void *udata)$/;"	f	file:
local_dir	/home/jasta/c/giFT/lib/platform.c	/^static char *local_dir = NULL;$/;"	v	file:
local_duplicates	/home/jasta/c/giFT/src/share_cache.c	/^static List         *local_duplicates = NULL;$/;"	v	file:
local_files	/home/jasta/c/giFT/src/share_cache.c	/^static unsigned long local_files = 0;$/;"	v	file:
local_flush	/home/jasta/c/giFT/OpenFT/share.c	/^static Connection *local_flush (Connection *c, Node *node, void *udata)$/;"	f	file:
local_host_share	/home/jasta/c/giFT/OpenFT/share.c	/^static FT_HostShare *local_host_share = NULL;$/;"	v	file:
local_shares	/home/jasta/c/giFT/src/share_cache.c	/^static Dataset      *local_shares     = NULL;$/;"	v	file:
local_size	/home/jasta/c/giFT/src/share_cache.c	/^static double        local_size  = 0.0; \/* as MB *\/$/;"	v	file:
local_submit_destroy	/home/jasta/c/giFT/OpenFT/share.c	/^static int local_submit_destroy ()$/;"	f	file:
local_submit_write	/home/jasta/c/giFT/OpenFT/share.c	/^static int local_submit_write (Connection *c, FILE *f, int *comp)$/;"	f	file:
local_sync	/home/jasta/c/giFT/OpenFT/share.c	/^static Connection *local_sync (Connection *c, Node *node, void *udata)$/;"	f	file:
localize_request	/home/jasta/c/giFT/OpenFT/xfer.c	/^static char *localize_request (FT_Transfer *xfer, int *authorized)$/;"	f	file:
locate_future_parent	/home/jasta/c/giFT/OpenFT/share.c	/^static Connection *locate_future_parent (Connection *c, Node *node,$/;"	f	file:
locate_node	/home/jasta/c/giFT/OpenFT/netorg.c	/^static Connection *locate_node (Connection *c, Node *node,$/;"	f	file:
locate_parents	/home/jasta/c/giFT/OpenFT/node.c	/^static Connection *locate_parents (Connection *c, Node *node, void *udata)$/;"	f	file:
locate_source	/home/jasta/c/giFT/src/download.c	/^static Source *locate_source (Transfer *transfer, Source *source)$/;"	f	file:
location	/home/jasta/c/giFT/ui/fe_share.h	/^	char *location;  \/* href location to this file *\/$/;"	m	struct:_shared_file
lock_append	/home/jasta/c/giFT/lib/list_lock.h	/^	List *lock_append;$/;"	m	struct:
lock_apply	/home/jasta/c/giFT/lib/list_lock.c	/^static void lock_apply (ListLock *lock, List **list, void *func)$/;"	f	file:
lock_insert_sorted	/home/jasta/c/giFT/lib/list_lock.h	/^	List *lock_insert_sorted;$/;"	m	struct:
lock_prepend	/home/jasta/c/giFT/lib/list_lock.h	/^	List *lock_prepend;$/;"	m	struct:
lock_remove	/home/jasta/c/giFT/lib/list_lock.h	/^	List *lock_remove;$/;"	m	struct:
locked	/home/jasta/c/giFT/lib/list_lock.h	/^	int   locked;$/;"	m	struct:
locking_append	/home/jasta/c/giFT/lib/list_lock.c	/^static int locking_append (void *data, ListLock *lock)$/;"	f	file:
locking_insert_sorted	/home/jasta/c/giFT/lib/list_lock.c	/^static int locking_insert_sorted (void *data, ListLock *lock)$/;"	f	file:
locking_prepend	/home/jasta/c/giFT/lib/list_lock.c	/^static int locking_prepend (void *data, ListLock *lock)$/;"	f	file:
locking_remove	/home/jasta/c/giFT/lib/list_lock.c	/^static int locking_remove (void *data, ListLock *lock)$/;"	f	file:
log_change	/home/jasta/c/giFT/OpenFT/node.c	/^static void log_change (Connection *c,$/;"	f	file:
log_cleanup	/home/jasta/c/giFT/lib/log.c	/^void log_cleanup ()$/;"	f
log_debug	/home/jasta/c/giFT/lib/log.c	/^void log_debug (char *fmt, ...)$/;"	f
log_dump_memory	/home/jasta/c/giFT/lib/log.c	/^void log_dump_memory (void *ptr, unsigned int len)$/;"	f
log_error	/home/jasta/c/giFT/lib/log.c	/^void log_error (char *fmt, ...)$/;"	f
log_fatal	/home/jasta/c/giFT/lib/log.c	/^void log_fatal (char *fmt, ...)$/;"	f
log_fd	/home/jasta/c/giFT/lib/log.c	/^static FILE        *log_fd      = NULL;$/;"	v	file:
log_file_fd	/home/jasta/c/giFT/lib/log.c	/^static FILE        *log_file_fd = NULL;$/;"	v	file:
log_format_time	/home/jasta/c/giFT/OpenFT/xfer.c	/^static char *log_format_time (time_t log_time)$/;"	f	file:
log_info	/home/jasta/c/giFT/lib/log.c	/^void log_info (char *fmt, ...)$/;"	f
log_init	/home/jasta/c/giFT/lib/log.c	/^int log_init (LogOptions options, char *ident, int syslog_option, int facility,$/;"	f
log_options	/home/jasta/c/giFT/lib/log.c	/^static LogOptions   log_options = GLOG_STDERR; \/* for platform_init errors *\/$/;"	v	file:
log_path	/home/jasta/c/giFT/src/transfer.h	/^	char         *log_path;     \/* activity file *\/$/;"	m	struct:_transfer
log_print	/home/jasta/c/giFT/lib/log.c	/^static void log_print (int priority, char *message)$/;"	f	file:
log_trace	/home/jasta/c/giFT/lib/log.c	/^void log_trace (char *fmt, ...)$/;"	f
log_trace_pfx	/home/jasta/c/giFT/lib/log.c	/^void log_trace_pfx (char *file, int line, char *func, char *extra)$/;"	f
log_warn	/home/jasta/c/giFT/lib/log.c	/^void log_warn (char *fmt, ...)$/;"	f
lookup	/home/jasta/c/giFT/lib/list_dataset.c	/^static List *lookup (ListDataset **list_ds, char *key)$/;"	f	file:
lookup	/home/jasta/c/giFT/research/test.c	/^static List *lookup (int *z)$/;"	f	file:
lookup_by_host	/home/jasta/c/giFT/research/test.c	/^static int lookup_by_host (unsigned long key,$/;"	f	file:
lookup_connection	/home/jasta/c/giFT/OpenFT/xfer.c	/^static Connection *lookup_connection (unsigned long ip, unsigned short port)$/;"	f	file:
lookup_http_code	/home/jasta/c/giFT/OpenFT/http_server.c	/^static char *lookup_http_code (int code)$/;"	f	file:
lookup_key	/home/jasta/c/giFT/lib/list_dataset.c	/^static int lookup_key (struct _pair *pair, char *key)$/;"	f	file:
loop_running	/home/jasta/c/giFT/lib/event.c	/^static int loop_running = 1;$/;"	v	file:
m_cmp_md5	/home/jasta/c/giFT/OpenFT/search.c	/^	char      *m_cmp_md5;$/;"	m	struct:_match_data	file:
m_query	/home/jasta/c/giFT/OpenFT/search.c	/^	char      *m_query;$/;"	m	struct:_match_data	file:
main	/home/jasta/c/giFT/lib/gift.c	/^int main (int argc, char **argv)$/;"	f
main	/home/jasta/c/giFT/research/test.c	/^int main ()$/;"	f
main	/home/jasta/c/giFT/src/main.c	/^int main (int argc, char **argv)$/;"	f
main	/home/jasta/c/giFT/ui/gift-fe.c	/^int main (int argc, char **argv)$/;"	f
main	/home/jasta/c/giFT/ui/gsh/gsh.c	/^int main (int argc, char **argv)$/;"	f
main	/home/jasta/c/giFT/ui/gsh/gsh2.c	/^int main (int argc, char **argv)$/;"	f
main	/home/jasta/c/giFT/win32/loader.c	/^int main (int argc, char **argv)$/;"	f
main_setup	/home/jasta/c/giFT/win32/giFTsetup/giFTsetup.c	/^static int        main_setup      = 0;$/;"	v	file:
match_filename	/home/jasta/c/giFT/OpenFT/search.c	/^static int match_filename (FileShare *file, struct _match_data *mdata)$/;"	f	file:
match_host	/home/jasta/c/giFT/OpenFT/search.c	/^static int match_host (FileShare *file, struct _match_data *mdata)$/;"	f	file:
match_md5	/home/jasta/c/giFT/OpenFT/search.c	/^static int match_md5 (FileShare *file, struct _match_data *mdata)$/;"	f	file:
max_downstream	/home/jasta/c/giFT/src/download.c	/^static unsigned int max_downstream = 0;$/;"	v	file:
max_results	/home/jasta/c/giFT/OpenFT/search.c	/^static int max_results = 0; \/* calculated from the configuration file upon$/;"	v	file:
max_seek	/home/jasta/c/giFT/src/transfer.h	/^	unsigned long max_seek;     \/* current filesize according to the$/;"	m	struct:_transfer
max_uploads	/home/jasta/c/giFT/OpenFT/search.c	/^	int           max_uploads;$/;"	m	struct:_match_data	file:
max_uploads	/home/jasta/c/giFT/OpenFT/share.h	/^	int            max_uploads;  \/* maximum simultaneous uploads allowed *\/$/;"	m	struct:
max_uploads	/home/jasta/c/giFT/src/upload.c	/^static int max_uploads = -1;$/;"	v	file:
max_upstream	/home/jasta/c/giFT/src/upload.c	/^static unsigned int max_upstream = 0;$/;"	v	file:
md5	/home/jasta/c/giFT/src/share_file.h	/^	char         *md5;$/;"	m	struct:
md5_append	/home/jasta/c/giFT/src/md5.c	80;"	d	file:
md5_checksum	/home/jasta/c/giFT/src/md5.c	/^char *md5_checksum (char *file, unsigned long size)$/;"	f
md5_digest	/home/jasta/c/giFT/src/md5.c	/^static unsigned char *md5_digest (char *file, unsigned long size)$/;"	f	file:
md5_finish	/home/jasta/c/giFT/src/md5.c	81;"	d	file:
md5_hash_file	/home/jasta/c/giFT/src/md5.c	/^static unsigned char *md5_hash_file (char *file, unsigned long size)$/;"	f	file:
md5_init	/home/jasta/c/giFT/src/md5.c	78;"	d	file:
md5_state_t	/home/jasta/c/giFT/src/md5.c	79;"	d	file:
md5_string	/home/jasta/c/giFT/src/md5.c	/^static char *md5_string (char *file, unsigned long size)$/;"	f	file:
media_filter	/home/jasta/c/giFT/ui/gift-fe.h	/^	GtkWidget *media_filter;$/;"	m	struct:
media_filter_select	/home/jasta/c/giFT/ui/fe_ui.c	/^static void media_filter_select (GtkWidget *widget, char *data)$/;"	f	file:
menu_about_show	/home/jasta/c/giFT/ui/fe_menu.c	/^void menu_about_show (GtkWidget *widget, char *page)$/;"	f
menu_append	/home/jasta/c/giFT/ui/fe_menu.c	/^GtkWidget *menu_append (GtkWidget *menu, char *menu_text)$/;"	f
menu_append_sep	/home/jasta/c/giFT/ui/fe_menu.c	/^GtkWidget *menu_append_sep (GtkWidget *menu)$/;"	f
menu_cancel_download	/home/jasta/c/giFT/ui/fe_download.c	/^static void menu_cancel_download (GtkWidget *menu, Transfer *transfer)$/;"	f	file:
menu_cancel_download_it	/home/jasta/c/giFT/ui/fe_download.c	/^static void menu_cancel_download_it (Transfer *item)$/;"	f	file:
menu_cancel_upload	/home/jasta/c/giFT/ui/fe_upload.c	/^static void menu_cancel_upload (GtkWidget *menu, Transfer *transfer)$/;"	f	file:
menu_cancel_upload_it	/home/jasta/c/giFT/ui/fe_upload.c	/^static void menu_cancel_upload_it (Transfer *item)$/;"	f	file:
menu_clear_download	/home/jasta/c/giFT/ui/fe_download.c	/^static void menu_clear_download (GtkWidget *menu, Transfer *transfer)$/;"	f	file:
menu_clear_download_it	/home/jasta/c/giFT/ui/fe_download.c	/^static void menu_clear_download_it (Transfer *item)$/;"	f	file:
menu_clear_upload	/home/jasta/c/giFT/ui/fe_upload.c	/^static void menu_clear_upload (GtkWidget *menu, Transfer *transfer)$/;"	f	file:
menu_clear_upload_it	/home/jasta/c/giFT/ui/fe_upload.c	/^static void menu_clear_upload_it (Transfer *item)$/;"	f	file:
menu_create_main	/home/jasta/c/giFT/ui/fe_menu.c	/^GtkWidget *menu_create_main (GtkWidget *window)$/;"	f
menu_if	/home/jasta/c/giFT/ui/fe_menu-if.h	/^static GtkItemFactoryEntry menu_if[] =$/;"	v
menu_popup_download	/home/jasta/c/giFT/ui/fe_download.c	/^int menu_popup_download (GtkWidget *dl_list, Transfer *download, guint button,$/;"	f
menu_popup_search	/home/jasta/c/giFT/ui/fe_search.c	/^int menu_popup_search (GtkWidget *srch_list, Search *srch, guint button,$/;"	f
menu_popup_upload	/home/jasta/c/giFT/ui/fe_upload.c	/^int menu_popup_upload (GtkWidget *ul_list, Transfer *upload, guint button,$/;"	f
menu_pref_show	/home/jasta/c/giFT/ui/fe_menu.c	/^static void menu_pref_show (GtkWidget *widget, char *page)$/;"	f	file:
menu_remove_source	/home/jasta/c/giFT/ui/fe_download.c	/^static void menu_remove_source (GtkWidget *menu, Transfer *transfer)$/;"	f	file:
menu_search_hash	/home/jasta/c/giFT/ui/fe_search.c	/^void menu_search_hash (GtkWidget *menu, Search *srch)$/;"	f
menu_search_user	/home/jasta/c/giFT/ui/fe_upload.c	/^void menu_search_user (GtkWidget *menu, Transfer *transfer) {$/;"	f
menu_submenu_append	/home/jasta/c/giFT/ui/fe_menu.c	/^GtkWidget *menu_submenu_append (GtkWidget *menu_bar, char *menu_text)$/;"	f
mime_entry	/home/jasta/c/giFT/ui/fe_share.c	/^struct mime_entry {$/;"	s	file:
mime_open	/home/jasta/c/giFT/src/mime.c	/^FILE *mime_open (char *file, char *mode, char **mime, off_t *size)$/;"	f
mime_size	/home/jasta/c/giFT/src/mime.c	/^static off_t mime_size (char *file, char *mime)$/;"	f	file:
mime_type	/home/jasta/c/giFT/src/mime.c	/^char *mime_type (char *file, char *ext)$/;"	f
mime_type	/home/jasta/c/giFT/ui/fe_share.h	/^	char *mime_type; \/* mime type of file until implemented this$/;"	m	struct:_shared_file
mime_types	/home/jasta/c/giFT/src/mime.c	/^Dataset *mime_types = NULL;$/;"	v
mimes	/home/jasta/c/giFT/ui/fe_share.c	/^static struct mime_entry mimes[] = {$/;"	v	file:
modify_tray	/home/jasta/c/giFT/win32/giFTtray/giFTtray.c	/^static void modify_tray (const char* format, ...)$/;"	f	file:
modshare_request	/home/jasta/c/giFT/OpenFT/protocol.c	/^FT_HANDLER (modshare_request);$/;"	v
modshare_response	/home/jasta/c/giFT/OpenFT/protocol.c	/^FT_HANDLER (modshare_response);$/;"	v
month_tab	/home/jasta/c/giFT/OpenFT/xfer.c	/^static const char *month_tab =$/;"	v	file:
mortal_new	/home/jasta/c/giFT/src/mortal.c	/^Mortal *mortal_new (void *obj, MortalDestroyFunc func)$/;"	f
mortal_ref	/home/jasta/c/giFT/src/mortal.c	/^int mortal_ref (Mortal *mortal)$/;"	f
mortal_unref	/home/jasta/c/giFT/src/mortal.c	/^int mortal_unref (Mortal *mortal)$/;"	f
mtime	/home/jasta/c/giFT/lib/conf.h	/^	time_t        mtime;               \/**< last known modification time of$/;"	m	struct:
mtime	/home/jasta/c/giFT/src/share_file.h	/^	time_t         mtime;$/;"	m	struct:_file_share
my_perl	/home/jasta/c/giFT/src/perl.c	/^static PerlInterpreter *my_perl = NULL;$/;"	v	file:
name	/home/jasta/c/giFT/OpenFT/daemon.c	/^	char *name;$/;"	m	struct:_daemon_event	file:
name	/home/jasta/c/giFT/lib/conf.h	/^	char               *name;          \/**< header name *\/$/;"	m	struct:
name	/home/jasta/c/giFT/lib/protocol.h	/^	char               *name;$/;"	m	struct:_protocol
name	/home/jasta/c/giFT/src/daemon.c	/^	char          *name;$/;"	m	struct:_dc_event	file:
name	/home/jasta/c/giFT/src/perl.c	/^	char *name;$/;"	m	struct:_perl_hook	file:
name	/home/jasta/c/giFT/src/perl.c	/^	char *name;$/;"	m	struct:perlscript	file:
name	/home/jasta/c/giFT/ui/fe_daemon.c	/^	char           *name;$/;"	m	struct:_fe_ev_handler	file:
name	/home/jasta/c/giFT/ui/fe_pref.c	/^	char *name;$/;"	m	struct:option_entry	file:
name	/home/jasta/c/giFT/ui/fe_pref.c	/^	char *name;$/;"	m	struct:page_entry	file:
nb_active	/home/jasta/c/giFT/lib/nb.c	/^NBRead *nb_active (int fd)$/;"	f
nb_add	/home/jasta/c/giFT/lib/nb.c	/^static void nb_add (NBRead *nb, char c)$/;"	f	file:
nb_buffers	/home/jasta/c/giFT/lib/nb.c	/^static HashTable *nb_buffers = NULL;$/;"	v	file:
nb_finish	/home/jasta/c/giFT/lib/nb.c	/^void nb_finish (NBRead *nb)$/;"	f
nb_read	/home/jasta/c/giFT/lib/nb.c	/^int nb_read (NBRead *nb, size_t count, char *term)$/;"	f
nb_read_len	/home/jasta/c/giFT/lib/nb.c	/^int nb_read_len (NBRead *nb, int len)$/;"	f
nb_read_term	/home/jasta/c/giFT/lib/nb.c	/^int nb_read_term (NBRead *nb, char *term)$/;"	f
nb_remove	/home/jasta/c/giFT/lib/nb.c	/^void nb_remove (int fd)$/;"	f
nb_remove_all	/home/jasta/c/giFT/lib/nb.c	/^void nb_remove_all ()$/;"	f
nb_terminate	/home/jasta/c/giFT/lib/nb.c	/^static void nb_terminate (NBRead *nb)$/;"	f	file:
nb_unterminate	/home/jasta/c/giFT/lib/nb.c	/^static void nb_unterminate (NBRead *nb)$/;"	f	file:
net_accept	/home/jasta/c/giFT/lib/network.c	/^int net_accept (int s_fd, int blocking)$/;"	f
net_bind	/home/jasta/c/giFT/lib/network.c	/^int net_bind (unsigned short port, int blocking)$/;"	f
net_close	/home/jasta/c/giFT/lib/network.c	/^void net_close (int fd)$/;"	f
net_connect	/home/jasta/c/giFT/lib/network.c	/^int net_connect (char *ip, unsigned short port, int blocking)$/;"	f
net_ip_str	/home/jasta/c/giFT/lib/network.c	/^char *net_ip_str (unsigned long ip)$/;"	f
net_local_ip	/home/jasta/c/giFT/lib/network.c	/^unsigned long net_local_ip ()$/;"	f
net_mask	/home/jasta/c/giFT/lib/network.c	/^unsigned long net_mask (int bitwidth)$/;"	f
net_match_host	/home/jasta/c/giFT/lib/network.c	/^int net_match_host (unsigned long ip, char *match)$/;"	f
net_peer_ip	/home/jasta/c/giFT/lib/network.c	/^char *net_peer_ip (int fd)$/;"	f
net_send	/home/jasta/c/giFT/lib/network.c	/^int net_send (int fd, char *data, size_t len)$/;"	f
net_set_blocking	/home/jasta/c/giFT/lib/network.c	/^int net_set_blocking (int s_fd, int blocking)$/;"	f
net_sock_adj_buf	/home/jasta/c/giFT/lib/network.c	/^int net_sock_adj_buf (int s_fd, int buf_name, float factor)$/;"	f
net_sock_error	/home/jasta/c/giFT/lib/network.c	/^int net_sock_error (int s_fd)$/;"	f
network	/home/jasta/c/giFT/ui/fe_share.h	/^	char *network;   \/* ptr into user ... *\/$/;"	m	struct:_shared_file
network	/home/jasta/c/giFT/ui/fe_stats.c	/^static GtkWidget *network = NULL;$/;"	v	file:
new_record_offset	/home/jasta/c/giFT/OpenFT/share_db.c	/^static off_t new_record_offset (FILE *f, FileShare *file, FT_Share *share)$/;"	f	file:
next	/home/jasta/c/giFT/lib/hash.h	/^	struct _hash_node *next;$/;"	m	struct:_hash_node
next	/home/jasta/c/giFT/lib/list.h	/^	struct _list *next;                \/**< Next chain *\/$/;"	m	struct:_list
next	/home/jasta/c/giFT/lib/tree.h	/^	struct _tree_node *next;$/;"	m	struct:_tree_node
next_timer	/home/jasta/c/giFT/lib/event.c	/^static struct timeval next_timer (struct timeval *current_time)$/;"	f	file:
node	/home/jasta/c/giFT/OpenFT/netorg.c	/^	HashNode *node; \/* node pointer *\/$/;"	m	struct:_netorg_cursor	file:
node_class_add	/home/jasta/c/giFT/OpenFT/node.c	/^void node_class_add (Connection *c, unsigned short klass)$/;"	f
node_class_change	/home/jasta/c/giFT/OpenFT/node.c	/^static void node_class_change (Connection *c,$/;"	f	file:
node_class_remove	/home/jasta/c/giFT/OpenFT/node.c	/^void node_class_remove (Connection *c, unsigned short klass)$/;"	f
node_class_set	/home/jasta/c/giFT/OpenFT/node.c	/^void node_class_set (Connection *c, unsigned short klass)$/;"	f
node_class_str	/home/jasta/c/giFT/OpenFT/utils.c	/^char *node_class_str (signed long klass)$/;"	f
node_conn_set	/home/jasta/c/giFT/OpenFT/node.c	/^void node_conn_set (Connection *c, unsigned long ip, signed long port,$/;"	f
node_disconnect	/home/jasta/c/giFT/OpenFT/node.c	/^void node_disconnect (Connection *c)$/;"	f
node_disconnect_idle	/home/jasta/c/giFT/OpenFT/netorg.c	/^static Connection *node_disconnect_idle (Connection *c, Node *node,$/;"	f	file:
node_free	/home/jasta/c/giFT/OpenFT/node.c	/^void node_free (Connection *c)$/;"	f
node_highest_class	/home/jasta/c/giFT/OpenFT/node.c	/^unsigned short node_highest_class (Node *node)$/;"	f
node_load_cache	/home/jasta/c/giFT/OpenFT/node.c	/^static void node_load_cache ()$/;"	f	file:
node_maintain_link	/home/jasta/c/giFT/OpenFT/node.c	/^static Connection *node_maintain_link (Connection *c, Node *node, FILE *f)$/;"	f	file:
node_maintain_links	/home/jasta/c/giFT/OpenFT/node.c	/^int node_maintain_links (void *udata)$/;"	f
node_new	/home/jasta/c/giFT/OpenFT/node.c	/^Connection *node_new (int fd)$/;"	f
node_reconnect	/home/jasta/c/giFT/OpenFT/netorg.c	/^static Connection *node_reconnect (Connection *c, Node *node, int *processed)$/;"	f	file:
node_register	/home/jasta/c/giFT/OpenFT/node.c	/^Connection *node_register (unsigned long ip, signed short port,$/;"	f
node_remove	/home/jasta/c/giFT/OpenFT/node.c	/^void node_remove (Connection *c)$/;"	f
node_state_set	/home/jasta/c/giFT/OpenFT/node.c	/^void node_state_set (Connection *c, unsigned short state)$/;"	f
node_stats	/home/jasta/c/giFT/OpenFT/node.c	/^static Connection *node_stats (Connection *c, Node *node, void *udata)$/;"	f	file:
node_update_cache	/home/jasta/c/giFT/OpenFT/node.c	/^void node_update_cache ()$/;"	f
nodecap_request	/home/jasta/c/giFT/OpenFT/protocol.c	/^FT_HANDLER (nodecap_request);$/;"	v
nodecap_response	/home/jasta/c/giFT/OpenFT/protocol.c	/^FT_HANDLER (nodecap_response);$/;"	v
nodeinfo_request	/home/jasta/c/giFT/OpenFT/protocol.c	/^FT_HANDLER (nodeinfo_request);$/;"	v
nodeinfo_response	/home/jasta/c/giFT/OpenFT/protocol.c	/^FT_HANDLER (nodeinfo_response);$/;"	v
nodelist_output	/home/jasta/c/giFT/OpenFT/protocol.c	/^static Connection *nodelist_output (Connection *c, Node *node,$/;"	f	file:
nodelist_queue_destroy	/home/jasta/c/giFT/OpenFT/protocol.c	/^static int nodelist_queue_destroy (Connection *c, Node *response,$/;"	f	file:
nodelist_queue_write	/home/jasta/c/giFT/OpenFT/protocol.c	/^static int nodelist_queue_write (Connection *c, Node *response,$/;"	f	file:
nodelist_request	/home/jasta/c/giFT/OpenFT/protocol.c	/^FT_HANDLER (nodelist_request);$/;"	v
nodelist_response	/home/jasta/c/giFT/OpenFT/protocol.c	/^FT_HANDLER (nodelist_response);$/;"	v
nodepage_mtime	/home/jasta/c/giFT/OpenFT/html.c	/^static time_t nodepage_mtime = 0;$/;"	v	file:
nodes	/home/jasta/c/giFT/lib/hash.h	/^	HashNode    **nodes;$/;"	m	struct:_hash_table
nodes_mtime	/home/jasta/c/giFT/OpenFT/node.c	/^static time_t nodes_mtime;$/;"	v	file:
notebook	/home/jasta/c/giFT/ui/gift-fe.h	/^	GtkWidget *notebook;$/;"	m	struct:
nprimes	/home/jasta/c/giFT/lib/hash.c	/^static size_t nprimes = sizeof (primes) \/ sizeof (primes[0]);$/;"	v	file:
num	/home/jasta/c/giFT/src/hook.h	/^		int    num;                    \/* i wish this could be named int *\/$/;"	m	union:
obj	/home/jasta/c/giFT/src/mortal.h	/^	void             *obj;$/;"	m	struct:
obj	/home/jasta/c/giFT/ui/fe_daemon.h	/^	void *obj;$/;"	m	struct:_daemon_event
obj	/home/jasta/c/giFT/ui/fe_obj.h	/^	struct _object_data obj;$/;"	m	struct:
obj_copy_data	/home/jasta/c/giFT/ui/fe_obj.c	/^void obj_copy_data (ObjectData *obj_data, char *name, ObjectData *inc_data)$/;"	f
obj_data	/home/jasta/c/giFT/ui/fe_search.h	/^	ObjectData obj_data;$/;"	m	struct:
obj_data	/home/jasta/c/giFT/ui/fe_transfer.h	/^	ObjectData obj_data;$/;"	m	struct:
obj_destroy_notify	/home/jasta/c/giFT/ui/fe_obj.c	/^void obj_destroy_notify (void *obj)$/;"	f
obj_free	/home/jasta/c/giFT/ui/fe_obj.c	/^void obj_free (void *obj)$/;"	f
obj_get_data	/home/jasta/c/giFT/ui/fe_obj.c	/^void *obj_get_data (ObjectData *obj_data, char *name)$/;"	f
obj_new	/home/jasta/c/giFT/ui/fe_obj.c	/^void *obj_new (size_t size, unsigned int type)$/;"	f
obj_set_data	/home/jasta/c/giFT/ui/fe_obj.c	/^void obj_set_data (ObjectData *obj_data, char *name, void *data)$/;"	f
oct_value_from_hex	/home/jasta/c/giFT/OpenFT/html.c	/^static int oct_value_from_hex (char hex_char)$/;"	f	file:
oct_value_from_hex	/home/jasta/c/giFT/ui/fe_utils.c	/^int oct_value_from_hex (char hex_char)$/;"	f
offset	/home/jasta/c/giFT/OpenFT/packet.h	/^	int offset;   \/* used internally, skipped over when writing *\/$/;"	m	struct:
open	/home/jasta/c/giFT/src/md5.c	39;"	d	file:
open_connections	/home/jasta/c/giFT/OpenFT/xfer.c	/^static List *open_connections = NULL;$/;"	v	file:
open_db	/home/jasta/c/giFT/OpenFT/share_db.c	/^static FILE *open_db (char *path, char *mode, size_t *nrec)$/;"	f	file:
open_output	/home/jasta/c/giFT/src/download.c	/^static int open_output (Transfer *transfer)$/;"	f	file:
open_path	/home/jasta/c/giFT/OpenFT/xfer.h	/^	char          *open_path;          \/* path opened by the server *\/$/;"	m	struct:
open_path_size	/home/jasta/c/giFT/OpenFT/xfer.h	/^	off_t          open_path_size;     \/* size of the file on disk described$/;"	m	struct:
openft_conf	/home/jasta/c/giFT/OpenFT/openft.c	/^Config *openft_conf           = NULL;  \/* ~\/.giFT\/gift.conf *\/$/;"	v
openft_conf	/home/jasta/c/giFT/win32/giFTsetup/giFTsetup.c	/^static Config    *openft_conf	  = NULL;$/;"	v	file:
openft_proto	/home/jasta/c/giFT/OpenFT/openft.c	/^Protocol *openft_proto        = NULL;  \/* OpenFT protocol plugin pointer *\/$/;"	v
openft_shutdown	/home/jasta/c/giFT/OpenFT/openft.c	/^int openft_shutdown           = FALSE; \/* boolean that is set when OpenFT is$/;"	v
opt	/home/jasta/c/giFT/src/daemon.c	/^EV_HANDLER (opt);$/;"	v
opt_finish	/home/jasta/c/giFT/src/daemon.c	/^static void opt_finish (IFEvent *event)$/;"	f	file:
opt_show_module	/home/jasta/c/giFT/src/daemon.c	/^static void opt_show_module (IFEventID id, char *module)$/;"	f	file:
opt_show_modules	/home/jasta/c/giFT/src/daemon.c	/^static void opt_show_modules (IFEventID id)$/;"	f	file:
option_entry	/home/jasta/c/giFT/ui/fe_pref.c	/^struct option_entry$/;"	s	file:
options	/home/jasta/c/giFT/src/main.c	/^static Dataset *options;          \/* command-line parsed options *\/$/;"	v	file:
options_general	/home/jasta/c/giFT/ui/fe_pref.c	/^static struct option_entry options_general[] =$/;"	v	file:
optval_t	/home/jasta/c/giFT/lib/network.c	/^typedef char* optval_t;$/;"	t	file:
optval_t	/home/jasta/c/giFT/lib/network.c	/^typedef void* optval_t;$/;"	t	file:
p	/home/jasta/c/giFT/src/share_file.h	/^	Protocol      *p;$/;"	m	struct:_file_share
p	/home/jasta/c/giFT/src/transfer.h	/^	Protocol      *p;        \/* p->name = OpenFT *\/$/;"	m	struct:_source
p_fnames	/home/jasta/c/giFT/src/main.c	/^static List    *p_fnames  = NULL; \/* plugin filenames to load    *\/$/;"	v	file:
pad_file	/home/jasta/c/giFT/src/download.c	/^static int pad_file (Transfer *transfer, unsigned long seek_pos)$/;"	f	file:
page_entry	/home/jasta/c/giFT/ui/fe_pref.c	/^struct page_entry$/;"	s	file:
pages	/home/jasta/c/giFT/ui/fe_pref.c	/^pages[] =$/;"	v
pair_free	/home/jasta/c/giFT/lib/list_dataset.c	/^static void pair_free (struct _pair *pair)$/;"	f	file:
pair_new	/home/jasta/c/giFT/lib/list_dataset.c	/^static struct _pair *pair_new (char *key, void *value)$/;"	f	file:
pane	/home/jasta/c/giFT/ui/gift-fe.h	/^	GtkPaned *pane;$/;"	m	struct:
parent	/home/jasta/c/giFT/lib/tree.h	/^	struct _tree_node *parent;$/;"	m	struct:_tree_node
parent_wrapper	/home/jasta/c/giFT/lib/platform.c	/^static void parent_wrapper (Protocol *p, Connection *c)$/;"	f	file:
parents	/home/jasta/c/giFT/OpenFT/share.h	/^	List         *parents;     \/* parent search nodes that submitted this$/;"	m	struct:
parse_argv	/home/jasta/c/giFT/src/main.c	/^static void parse_argv (int argc, char **argv)$/;"	f	file:
parse_client_request	/home/jasta/c/giFT/OpenFT/http_server.c	/^static int parse_client_request (Dataset **r_dataset, char **r_command,$/;"	f	file:
parse_client_request_range	/home/jasta/c/giFT/OpenFT/http_server.c	/^static void parse_client_request_range (Dataset *dataset,$/;"	f	file:
parse_proto	/home/jasta/c/giFT/src/plugin.c	/^static char *parse_proto (char *file, char **i_func)$/;"	f	file:
parse_request	/home/jasta/c/giFT/OpenFT/xfer.c	/^static int parse_request (char *source,$/;"	f	file:
parse_server_reply	/home/jasta/c/giFT/OpenFT/http_client.c	/^static int parse_server_reply (FT_Transfer *xfer, char *reply)$/;"	f	file:
path	/home/jasta/c/giFT/lib/conf.h	/^	char         *path;                \/**< fully qualified path to .conf *\/$/;"	m	struct:
path	/home/jasta/c/giFT/src/share_cache.c	/^	char         *path;$/;"	m	struct:_sroot	file:
path	/home/jasta/c/giFT/src/share_file.h	/^	char         *path;     \/* \/data\/mp3s\/file.mp3                      *\/$/;"	m	struct:
path	/home/jasta/c/giFT/src/transfer.h	/^	char         *path;         \/* fully qualified local path to this file *\/$/;"	m	struct:_transfer
path_traverse	/home/jasta/c/giFT/src/share_cache.c	/^static int path_traverse (FILE *f, Dataset **shares, List **duplicates,$/;"	f	file:
paused	/home/jasta/c/giFT/src/transfer.h	/^	unsigned char paused : 1;   \/* see SOURCE_PAUSED *\/$/;"	m	struct:_transfer
perform_read	/home/jasta/c/giFT/win32/giFTtray/giFTtray.c	/^static void perform_read ()$/;"	f	file:
perform_write	/home/jasta/c/giFT/win32/giFTtray/giFTtray.c	/^static int perform_write ()$/;"	f	file:
perl_autoload	/home/jasta/c/giFT/src/perl.c	/^void perl_autoload ()$/;"	f
perl_cleanup	/home/jasta/c/giFT/src/perl.c	/^void perl_cleanup ()$/;"	f
perl_hook_event	/home/jasta/c/giFT/src/perl.c	/^HookVar *perl_hook_event (char *name, char *args)$/;"	f
perl_hooks	/home/jasta/c/giFT/src/perl.c	/^static List            *perl_hooks = NULL;$/;"	v	file:
perl_init	/home/jasta/c/giFT/src/perl.c	/^void perl_init()$/;"	f
perl_list	/home/jasta/c/giFT/src/perl.c	/^static List            *perl_list = NULL;$/;"	v	file:
perl_load_file	/home/jasta/c/giFT/src/perl.c	/^int perl_load_file (char *script_name)$/;"	f
perlscript	/home/jasta/c/giFT/src/perl.c	/^struct perlscript$/;"	s	file:
persist	/home/jasta/c/giFT/lib/if_event.h	/^	int persist;$/;"	m	struct:_if_event
pfunc	/home/jasta/c/giFT/lib/platform.h	/^	ParentFunc  pfunc;$/;"	m	struct:
ping_request	/home/jasta/c/giFT/OpenFT/protocol.c	/^FT_HANDLER (ping_request);$/;"	v
ping_response	/home/jasta/c/giFT/OpenFT/protocol.c	/^FT_HANDLER (ping_response);$/;"	v
pixmap	/home/jasta/c/giFT/ui/fe_share.c	/^	GtkWidget *pixmap;$/;"	m	struct:mime_entry	file:
platform_child_proc	/home/jasta/c/giFT/lib/platform.c	/^int platform_child_proc (ChildFunc c_func, ParentFunc p_func, void *udata)$/;"	f
platform_cleanup	/home/jasta/c/giFT/lib/platform.c	/^void platform_cleanup ()$/;"	f
platform_data_dir	/home/jasta/c/giFT/lib/platform.c	/^char *platform_data_dir   () { return data_dir;   }$/;"	f
platform_dlclose	/home/jasta/c/giFT/src/plugin.c	/^int platform_dlclose (void *handle)$/;"	f
platform_dlerror	/home/jasta/c/giFT/src/plugin.c	/^const char *platform_dlerror (void)$/;"	f
platform_dlopen	/home/jasta/c/giFT/src/plugin.c	/^void *platform_dlopen (const char *filename, int flags)$/;"	f
platform_dlsym	/home/jasta/c/giFT/src/plugin.c	/^void *platform_dlsym (void *handle, char *symbol)$/;"	f
platform_errno	/home/jasta/c/giFT/lib/platform.c	/^unsigned long platform_errno ()$/;"	f
platform_error	/home/jasta/c/giFT/lib/platform.c	/^char *platform_error ()$/;"	f
platform_gettimeofday	/home/jasta/c/giFT/lib/platform.c	/^void platform_gettimeofday (struct timeval *tv, void *unused)$/;"	f
platform_home_dir	/home/jasta/c/giFT/lib/platform.c	/^char *platform_home_dir   () { return home_dir;   }$/;"	f
platform_init	/home/jasta/c/giFT/lib/platform.c	/^int platform_init ()$/;"	f
platform_local_dir	/home/jasta/c/giFT/lib/platform.c	/^char *platform_local_dir  () { return local_dir;  }$/;"	f
platform_net_errno	/home/jasta/c/giFT/lib/platform.c	/^unsigned long platform_net_errno ()$/;"	f
platform_net_error	/home/jasta/c/giFT/lib/platform.c	/^char *platform_net_error ()$/;"	f
platform_plugin_dir	/home/jasta/c/giFT/lib/platform.c	/^char *platform_plugin_dir () { return plugin_dir; }$/;"	f
platform_version	/home/jasta/c/giFT/lib/platform.c	/^char *platform_version ()$/;"	f
plugin_dir	/home/jasta/c/giFT/lib/platform.c	/^static char *plugin_dir = NULL;$/;"	v	file:
plugin_init	/home/jasta/c/giFT/src/plugin.c	/^static Protocol *plugin_init (char *file, char *proto, char *i_func)$/;"	f	file:
plugin_load	/home/jasta/c/giFT/src/plugin.c	/^void plugin_load (char *file)$/;"	f
plugin_unload	/home/jasta/c/giFT/src/plugin.c	/^void plugin_unload (Protocol *p)$/;"	f
popup_client	/home/jasta/c/giFT/win32/giFTtray/giFTtray.c	/^static void popup_client ()$/;"	f	file:
popup_menu	/home/jasta/c/giFT/win32/giFTtray/giFTtray.c	/^static HMENU           popup_menu;$/;"	v	file:
port	/home/jasta/c/giFT/OpenFT/node.h	/^	unsigned short port;$/;"	m	struct:
port	/home/jasta/c/giFT/OpenFT/share.h	/^	unsigned short port;$/;"	m	struct:
port	/home/jasta/c/giFT/OpenFT/xfer.c	/^	ft_uint16 port;$/;"	m	struct:_ft_source	file:
port	/home/jasta/c/giFT/OpenFT/xfer.h	/^	unsigned short port;               \/* used only by the client routines *\/$/;"	m	struct:
port_verify	/home/jasta/c/giFT/OpenFT/node.h	/^	Connection    *port_verify;$/;"	m	struct:
pref_button	/home/jasta/c/giFT/ui/fe_pref.c	/^static void pref_button (GtkWidget *button, unsigned long pref_enum)$/;"	f	file:
pref_dialog	/home/jasta/c/giFT/ui/fe_pref.c	/^static GtkWidget *pref_dialog = NULL;$/;"	v	file:
pref_dialog_close	/home/jasta/c/giFT/ui/fe_pref.c	/^static void pref_dialog_close ()$/;"	f	file:
pref_pages	/home/jasta/c/giFT/ui/fe_pref.c	/^static GtkWidget *pref_pages  = NULL;$/;"	v	file:
pref_pane	/home/jasta/c/giFT/ui/fe_pref.c	/^static GtkWidget *pref_pane   = NULL;$/;"	v	file:
pref_select_cb	/home/jasta/c/giFT/ui/fe_pref.c	/^static void pref_select_cb (GtkCTree *ctree, GList *node, gint column,$/;"	f	file:
pref_select_page	/home/jasta/c/giFT/ui/fe_pref.c	/^static void pref_select_page (char *page)$/;"	f	file:
pref_show	/home/jasta/c/giFT/ui/fe_pref.c	/^void pref_show (char *page)$/;"	f
prepare_fds	/home/jasta/c/giFT/lib/event.c	/^static int prepare_fds (fd_set *rset, fd_set *wset, fd_set *xset)$/;"	f	file:
prev	/home/jasta/c/giFT/lib/list.h	/^	struct _list *prev;                \/**< Previous chain *\/$/;"	m	struct:_list
prev	/home/jasta/c/giFT/lib/tree.h	/^	struct _tree_node *prev;$/;"	m	struct:_tree_node
primes	/home/jasta/c/giFT/lib/hash.c	/^static const unsigned int primes[] =$/;"	v	file:
protocol	/home/jasta/c/giFT/lib/connection.h	/^	struct _protocol *protocol;        \/**< Protocol this connection belongs$/;"	m	struct:_connection
protocol	/home/jasta/c/giFT/lib/event.h	/^	Protocol     *protocol;$/;"	m	struct:
protocol_add	/home/jasta/c/giFT/lib/protocol.c	/^void protocol_add (Protocol *p)$/;"	f
protocol_destroy	/home/jasta/c/giFT/lib/protocol.c	/^void protocol_destroy (Protocol *p)$/;"	f
protocol_find	/home/jasta/c/giFT/lib/protocol.c	/^Protocol *protocol_find (char *name)$/;"	f
protocol_handle_command	/home/jasta/c/giFT/OpenFT/protocol.c	/^int protocol_handle_command (Protocol *p, Connection *c, FTPacket *packet)$/;"	f
protocol_handler	/home/jasta/c/giFT/OpenFT/protocol.c	/^protocol_handler[] =$/;"	v
protocol_list	/home/jasta/c/giFT/lib/protocol.c	/^List *protocol_list ()$/;"	f
protocol_new	/home/jasta/c/giFT/lib/protocol.c	/^Protocol *protocol_new ()$/;"	f
protocol_remove	/home/jasta/c/giFT/lib/protocol.c	/^void protocol_remove (Protocol *p)$/;"	f
protocol_send	/home/jasta/c/giFT/lib/protocol.c	/^void protocol_send (Protocol *p,$/;"	f
protocols	/home/jasta/c/giFT/lib/protocol.c	/^static List *protocols = NULL;$/;"	v	file:
protocols	/home/jasta/c/giFT/ui/gift-fe.c	/^List           *protocols = NULL; \/* all fully loaded protocols  *\/$/;"	v
push_complete_connect	/home/jasta/c/giFT/OpenFT/http_client.c	/^static void push_complete_connect (Protocol *p, Connection *c)$/;"	f	file:
push_request	/home/jasta/c/giFT/OpenFT/protocol.c	/^FT_HANDLER (push_request);$/;"	v
push_requests	/home/jasta/c/giFT/OpenFT/http_server.c	/^static List      *push_requests = NULL;        \/* firewalled downloads *\/$/;"	v	file:
push_response	/home/jasta/c/giFT/OpenFT/protocol.c	/^FT_HANDLER (push_response);$/;"	v
push_server_reply	/home/jasta/c/giFT/OpenFT/http_client.c	/^static void push_server_reply (Protocol *p, Connection *c)$/;"	f	file:
qtokens	/home/jasta/c/giFT/OpenFT/search.h	/^	ft_uint32 *qtokens;$/;"	m	struct:_search
query	/home/jasta/c/giFT/OpenFT/search.h	/^	char      *query;$/;"	m	struct:_search
query	/home/jasta/c/giFT/ui/gift-fe.h	/^	GtkWidget *query;$/;"	m	struct:
queue_add	/home/jasta/c/giFT/lib/queue.c	/^void queue_add (Connection *c, QueueWriteFunc func, QueueWriteFunc destroy_func,$/;"	f
queue_add_single	/home/jasta/c/giFT/lib/queue.c	/^void queue_add_single (Connection *c, QueueWriteFunc func,$/;"	f
queue_destroy_default	/home/jasta/c/giFT/lib/queue.c	/^static int queue_destroy_default (Connection *c, char *data, void *udata)$/;"	f	file:
queue_flush	/home/jasta/c/giFT/lib/queue.c	/^void queue_flush (Connection *c)$/;"	f
queue_free	/home/jasta/c/giFT/lib/queue.c	/^void queue_free (Connection *c)$/;"	f
queue_hit	/home/jasta/c/giFT/src/upload.c	/^static void queue_hit (char *user)$/;"	f	file:
queue_write	/home/jasta/c/giFT/lib/queue.c	/^static void queue_write (Protocol *p, Connection *c)$/;"	f	file:
queue_write_default	/home/jasta/c/giFT/lib/queue.c	/^static int queue_write_default (Connection *c, char *data, void *udata)$/;"	f	file:
quit	/home/jasta/c/giFT/src/daemon.c	/^EV_HANDLER (quit);$/;"	v
read	/home/jasta/c/giFT/src/md5.c	40;"	d	file:
read_int	/home/jasta/c/giFT/OpenFT/share_db.c	/^static ft_uint32 read_int (FILE *f, size_t integer_size)$/;"	f	file:
read_record	/home/jasta/c/giFT/OpenFT/share_db.c	/^static FileShare *read_record (FILE *f, FT_HostShare *h_share,$/;"	f	file:
read_reg_dir	/home/jasta/c/giFT/lib/platform.c	/^static char *read_reg_dir (HKEY key_h, LPCTSTR key, LPCTSTR subkey)$/;"	f	file:
read_str	/home/jasta/c/giFT/OpenFT/share_db.c	/^static int read_str (FILE *f, char **str)$/;"	f	file:
realm	/home/jasta/c/giFT/OpenFT/search.h	/^	char      *realm;$/;"	m	struct:_search
recurse	/home/jasta/c/giFT/src/share_cache.c	/^	unsigned char recurse : 1;$/;"	m	struct:_sroot	file:
recv_list	/home/jasta/c/giFT/OpenFT/node.h	/^	unsigned char  recv_list : 1;$/;"	m	struct:
ref	/home/jasta/c/giFT/OpenFT/search.h	/^	List      *ref; \/* list of search nodes which were queried (and still$/;"	m	struct:_search
ref	/home/jasta/c/giFT/src/mortal.h	/^	unsigned long     ref;$/;"	m	struct:
ref	/home/jasta/c/giFT/src/share_file.h	/^	unsigned short ref;$/;"	m	struct:_file_share
ref_table	/home/jasta/c/giFT/OpenFT/xfer.c	/^static HashTable *ref_table = NULL;$/;"	v	file:
relocate_source	/home/jasta/c/giFT/src/download.c	/^void relocate_source (Source *source)$/;"	f
remove_chunk	/home/jasta/c/giFT/src/download.c	/^static void remove_chunk (Chunk *chunk)$/;"	f	file:
remove_dataset_share	/home/jasta/c/giFT/src/share_cache.c	/^static void remove_dataset_share (Dataset **dataset, FileShare *file)$/;"	f	file:
remove_free	/home/jasta/c/giFT/lib/list.c	/^static int remove_free (void *data, void *udata)$/;"	f	file:
remove_one	/home/jasta/c/giFT/lib/nb.c	/^static int remove_one (unsigned long key, NBRead *nb, void *udata)$/;"	f	file:
remove_share	/home/jasta/c/giFT/src/share_cache.c	/^static int remove_share (Dataset **shares, List **duplicates, FileShare *file)$/;"	f	file:
remove_source	/home/jasta/c/giFT/src/download.c	/^static void remove_source (Transfer *transfer, Source *source)$/;"	f	file:
remove_tray	/home/jasta/c/giFT/win32/giFTtray/giFTtray.c	/^static void remove_tray ()$/;"	f	file:
remove_z	/home/jasta/c/giFT/research/test.c	/^static int remove_z (unsigned long key, void *value, void *udata)$/;"	f	file:
reply_to_client_request	/home/jasta/c/giFT/OpenFT/http_server.c	/^static void reply_to_client_request (FT_Transfer *xfer)$/;"	f	file:
report_leak	/home/jasta/c/giFT/src/main.c	/^static void report_leak ()$/;"	f	file:
request	/home/jasta/c/giFT/OpenFT/http_server.c	/^	char      *request;$/;"	m	struct:_indirect_source	file:
request	/home/jasta/c/giFT/OpenFT/xfer.c	/^	char *request;$/;"	m	struct:_ft_source	file:
request	/home/jasta/c/giFT/OpenFT/xfer.h	/^	char          *request;            \/* exact request operand, url encoded *\/$/;"	m	struct:
request_path	/home/jasta/c/giFT/OpenFT/xfer.h	/^	char          *request_path;       \/* decoded copy of request *\/$/;"	m	struct:
results	/home/jasta/c/giFT/OpenFT/search.c	/^	List         *results;$/;"	m	struct:_match_data	file:
results	/home/jasta/c/giFT/ui/fe_search.h	/^	int results;$/;"	m	struct:
root	/home/jasta/c/giFT/lib/tree.h	/^	TreeNode *root;$/;"	m	struct:
root	/home/jasta/c/giFT/src/share_file.h	/^	char         *root;     \/* \/data\/mp3s                               *\/$/;"	m	struct:
safe_input	/home/jasta/c/giFT/lib/event.c	/^static int safe_input (Input *input)$/;"	f	file:
save_state	/home/jasta/c/giFT/src/download.c	/^static void save_state (Transfer *transfer)$/;"	f	file:
sdata	/home/jasta/c/giFT/src/share_file.h	/^	ShareData     *sdata;    \/* hold a pointer to the actual data unflushed$/;"	m	struct:_file_share
sdata_free	/home/jasta/c/giFT/src/share_file.c	/^static void sdata_free (ShareData *sdata)$/;"	f	file:
sdata_new	/home/jasta/c/giFT/src/share_file.c	/^static ShareData *sdata_new (char *root, size_t root_len, char *path,$/;"	f	file:
search	/home/jasta/c/giFT/src/daemon.c	/^EV_HANDLER (search);$/;"	v
search	/home/jasta/c/giFT/ui/gift-fe.h	/^	GtkWidget *search;$/;"	m	struct:
search_execute	/home/jasta/c/giFT/ui/fe_search.c	/^int search_execute (FTApp *ft, char *search, char *media, char *type)$/;"	f
search_find_unique	/home/jasta/c/giFT/ui/fe_search.c	/^static GtkCTreeNode *search_find_unique (Search *srch)$/;"	f	file:
search_finish	/home/jasta/c/giFT/src/daemon.c	/^static void search_finish (IFEvent *event)$/;"	f	file:
search_flush_id	/home/jasta/c/giFT/ui/fe_search.c	/^static int    search_flush_id = -1;$/;"	v	file:
search_flush_results	/home/jasta/c/giFT/ui/fe_search.c	/^static int search_flush_results (FTApp *ft)$/;"	f	file:
search_foreach	/home/jasta/c/giFT/OpenFT/search.c	/^void search_foreach (HashFunc func, void *udata, int rem)$/;"	f
search_free	/home/jasta/c/giFT/OpenFT/search.c	/^static void search_free (Search *search)$/;"	f	file:
search_free	/home/jasta/c/giFT/ui/fe_search.c	/^void search_free (Search *obj)$/;"	f
search_insert_node	/home/jasta/c/giFT/ui/fe_search.c	/^static int search_insert_node (Search *srch, GtkWidget *tree)$/;"	f	file:
search_ip	/home/jasta/c/giFT/OpenFT/xfer.c	/^	ft_uint32 search_ip;$/;"	m	struct:_ft_source	file:
search_match_func	/home/jasta/c/giFT/OpenFT/search.c	/^static SearchFunc search_match_func (struct _match_data *mdata,$/;"	f	file:
search_new	/home/jasta/c/giFT/OpenFT/search.c	/^Search *search_new (IFEventID id, int search_type, char *query, char *exclude,$/;"	f
search_port	/home/jasta/c/giFT/OpenFT/xfer.c	/^	ft_uint16 search_port;$/;"	m	struct:_ft_source	file:
search_remove	/home/jasta/c/giFT/OpenFT/search.c	/^void search_remove (IFEventID id)$/;"	f
search_remove_query	/home/jasta/c/giFT/ui/fe_search.c	/^static void search_remove_query (GtkWidget *mitem, Search *srch)$/;"	f	file:
search_reply	/home/jasta/c/giFT/OpenFT/search.c	/^void search_reply (IFEventID id, Connection *search_node, FileShare *file)$/;"	f
search_request	/home/jasta/c/giFT/OpenFT/protocol.c	/^FT_HANDLER (search_request);$/;"	v
search_request_result	/home/jasta/c/giFT/OpenFT/protocol.c	/^static int search_request_result (Connection *c, FileShare *file,$/;"	f	file:
search_request_result_free	/home/jasta/c/giFT/OpenFT/protocol.c	/^static int search_request_result_free (Connection *c, FileShare *file,$/;"	f	file:
search_response	/home/jasta/c/giFT/OpenFT/protocol.c	/^FT_HANDLER (search_response);$/;"	v
search_response	/home/jasta/c/giFT/ui/fe_search.c	/^static int search_response (char *head, int keys, GData *dataset,$/;"	f	file:
search_sort_size	/home/jasta/c/giFT/ui/fe_search.c	/^static int search_sort_size (GtkCList *clist, const void *p1, const void *p2)$/;"	f	file:
search_tokenize	/home/jasta/c/giFT/OpenFT/search.c	/^ft_uint32 *search_tokenize (char *string)$/;"	f
search_unique_id	/home/jasta/c/giFT/OpenFT/search.c	/^unsigned long search_unique_id = 0;$/;"	v
search_user	/home/jasta/c/giFT/ui/fe_search.c	/^static void search_user(GtkWidget *menu, Search *srch) {$/;"	f	file:
send_attach	/home/jasta/c/giFT/ui/gift-fe.c	/^static int send_attach (int sock, FEConnection *c)$/;"	f	file:
send_gift_command	/home/jasta/c/giFT/win32/giFTtray/giFTtray.c	/^static int send_gift_command (char *event, ...)$/;"	f	file:
send_p	/home/jasta/c/giFT/lib/protocol.c	/^static void send_p (Protocol *p,$/;"	f	file:
sent_list	/home/jasta/c/giFT/OpenFT/node.h	/^	unsigned char  sent_list : 1;$/;"	m	struct:
server_handle_get	/home/jasta/c/giFT/OpenFT/http_server.c	/^static void server_handle_get (FT_Transfer *xfer)$/;"	f	file:
server_handle_push	/home/jasta/c/giFT/OpenFT/http_server.c	/^static void server_handle_push (FT_Transfer *xfer)$/;"	f	file:
server_header_parse	/home/jasta/c/giFT/OpenFT/http_server.c	/^static void server_header_parse (Dataset **dataset, char *request)$/;"	f	file:
server_setup_upload	/home/jasta/c/giFT/OpenFT/http_server.c	/^int server_setup_upload (FT_Transfer *xfer)$/;"	f
server_upload_file	/home/jasta/c/giFT/OpenFT/http_server.c	/^void server_upload_file (Protocol *p, Connection *c)$/;"	f
set_last_event	/home/jasta/c/giFT/ui/fe_fifo.c	/^void set_last_event (DaemonEvent *new)$/;"	f
sfunc	/home/jasta/c/giFT/OpenFT/search.c	/^	SearchFunc    sfunc;$/;"	m	struct:_match_data	file:
share	/home/jasta/c/giFT/lib/protocol.h	/^	ProtocolCallback    share;$/;"	m	struct:_protocol
share	/home/jasta/c/giFT/src/daemon.c	/^EV_HANDLER (share);$/;"	v
share_add_entry	/home/jasta/c/giFT/src/share_cache.c	/^void share_add_entry (char *host_path)$/;"	f
share_build_index	/home/jasta/c/giFT/src/share_cache.c	/^static int share_build_index (Dataset **shares, List **duplicates, List *sroot,$/;"	f	file:
share_clear	/home/jasta/c/giFT/src/share_cache.c	/^static void share_clear (Dataset **shares, List **duplicates)$/;"	f	file:
share_clear_index	/home/jasta/c/giFT/src/share_cache.c	/^void share_clear_index ()$/;"	f
share_comp_path	/home/jasta/c/giFT/OpenFT/share_comp.c	/^char *share_comp_path (int comp_req, int *comp)$/;"	f
share_comp_read	/home/jasta/c/giFT/OpenFT/share_comp.c	/^char *share_comp_read (char *path)$/;"	f
share_comp_write	/home/jasta/c/giFT/OpenFT/share_comp.c	/^void share_comp_write ()$/;"	f
share_complete	/home/jasta/c/giFT/src/share_file.c	/^int share_complete (FileShare *file)$/;"	f
share_dup	/home/jasta/c/giFT/ui/fe_share.c	/^void share_dup (SharedFile *out, SharedFile *in)$/;"	f
share_fill_data	/home/jasta/c/giFT/ui/fe_share.c	/^void share_fill_data (SharedFile *share, GData *ft_data)$/;"	f
share_find_file	/home/jasta/c/giFT/src/share_cache.c	/^FileShare *share_find_file (char *filename)$/;"	f
share_flush_node	/home/jasta/c/giFT/OpenFT/share_db.c	/^static int share_flush_node (unsigned long key, FileShare *file, int *err)$/;"	f	file:
share_foreach	/home/jasta/c/giFT/src/share_cache.c	/^void share_foreach (HashFunc foreach_func, void *data)$/;"	f
share_free	/home/jasta/c/giFT/src/share_file.c	/^void share_free (FileShare *file)$/;"	f
share_get_pixmap	/home/jasta/c/giFT/ui/fe_share.c	/^int share_get_pixmap (SharedFile *share, GdkColormap *colormap,$/;"	f
share_hide	/home/jasta/c/giFT/OpenFT/daemon.c	/^static Connection *share_hide (Connection *c, Node *node, void *data)$/;"	f	file:
share_index	/home/jasta/c/giFT/src/share_cache.c	/^Dataset *share_index (unsigned long *files, double *size)$/;"	f
share_index_sorted	/home/jasta/c/giFT/src/share_cache.c	/^List *share_index_sorted ()$/;"	f
share_insert_data	/home/jasta/c/giFT/src/share_file.c	/^void share_insert_data (FileShare *file, char *protocol, void *data)$/;"	f
share_lookup_data	/home/jasta/c/giFT/src/share_file.c	/^void *share_lookup_data (FileShare *file, char *protocol)$/;"	f
share_new	/home/jasta/c/giFT/src/share_file.c	/^FileShare *share_new (Protocol *p, int p_notify, char *root, size_t root_len,$/;"	f
share_read_index	/home/jasta/c/giFT/src/share_cache.c	/^Dataset *share_read_index ()$/;"	f
share_ref	/home/jasta/c/giFT/src/share_file.c	/^unsigned short share_ref (FileShare *file)$/;"	f
share_remove_data	/home/jasta/c/giFT/src/share_file.c	/^void share_remove_data (FileShare *file, char *protocol)$/;"	f
share_remove_entry	/home/jasta/c/giFT/src/share_cache.c	/^void share_remove_entry (char *host_path)$/;"	f
share_request	/home/jasta/c/giFT/OpenFT/protocol.c	/^FT_HANDLER (share_request);$/;"	v
share_response	/home/jasta/c/giFT/OpenFT/protocol.c	/^FT_HANDLER (share_response);$/;"	v
share_set_status	/home/jasta/c/giFT/OpenFT/share.c	/^static void share_set_status (unsigned long host, int enabled,$/;"	f	file:
share_show	/home/jasta/c/giFT/OpenFT/daemon.c	/^static Connection *share_show (Connection *c, Node *node, void *data)$/;"	f	file:
share_unref	/home/jasta/c/giFT/src/share_file.c	/^unsigned short share_unref (FileShare *file)$/;"	f
share_update_entry	/home/jasta/c/giFT/src/share_cache.c	/^int share_update_entry (FileShare *file)$/;"	f
share_update_index	/home/jasta/c/giFT/src/share_cache.c	/^void share_update_index ()$/;"	f
share_write_index	/home/jasta/c/giFT/src/share_cache.c	/^void share_write_index ()$/;"	f
shares	/home/jasta/c/giFT/OpenFT/share.h	/^	unsigned long shares;$/;"	m	struct:
shares_file	/home/jasta/c/giFT/OpenFT/node.h	/^	FILE          *shares_file;$/;"	m	struct:
shares_path	/home/jasta/c/giFT/OpenFT/node.h	/^	char          *shares_path;$/;"	m	struct:
sharing_enabled	/home/jasta/c/giFT/win32/giFTtray/giFTtray.c	/^static int             sharing_enabled = TRUE;$/;"	v	file:
show_about_box	/home/jasta/c/giFT/win32/giFTtray/giFTtray.c	/^static void show_about_box ()$/;"	f	file:
show_headers	/home/jasta/c/giFT/src/daemon.c	/^static int show_headers (ConfigHeader *header, Dataset *dataset)$/;"	f	file:
show_keys	/home/jasta/c/giFT/src/daemon.c	/^static int show_keys (char *key, char *value, Dataset *dataset)$/;"	f	file:
show_setup	/home/jasta/c/giFT/win32/giFTtray/giFTtray.c	/^static void show_setup ()$/;"	f	file:
show_view_log	/home/jasta/c/giFT/win32/giFTtray/giFTtray.c	/^static void show_view_log ()$/;"	f	file:
shr	/home/jasta/c/giFT/ui/fe_search.h	/^	SharedFile shr;    \/* shared file information *\/$/;"	m	struct:
shr	/home/jasta/c/giFT/ui/fe_transfer.h	/^	SharedFile shr;         \/* shared data ... *\/$/;"	m	struct:
shutdowncallback	/home/jasta/c/giFT/src/perl.c	/^	char *shutdowncallback; \/* bleh *\/$/;"	m	struct:perlscript	file:
sibling_last	/home/jasta/c/giFT/lib/tree.c	/^static TreeNode *sibling_last (TreeNode *node)$/;"	f	file:
size	/home/jasta/c/giFT/OpenFT/daemon.c	/^	double        size; \/* in gigs *\/$/;"	m	struct:_stats	file:
size	/home/jasta/c/giFT/OpenFT/search.c	/^	size_t        size;$/;"	m	struct:_match_data	file:
size	/home/jasta/c/giFT/OpenFT/share.h	/^	double        size;        \/* GB *\/$/;"	m	struct:
size	/home/jasta/c/giFT/lib/hash.h	/^	size_t        size;$/;"	m	struct:_hash_table
size	/home/jasta/c/giFT/src/share_file.h	/^	unsigned long  size;$/;"	m	struct:_file_share
size_max	/home/jasta/c/giFT/OpenFT/search.h	/^	size_t     size_max;$/;"	m	struct:_search
size_min	/home/jasta/c/giFT/OpenFT/search.h	/^	size_t     size_min;$/;"	m	struct:_search
snprintf	/home/jasta/c/giFT/win32/config.h	198;"	d
socketpair	/home/jasta/c/giFT/lib/platform.c	/^static int socketpair (int family, int type, int protocol, int sv[2])$/;"	f	file:
sort_list	/home/jasta/c/giFT/OpenFT/netorg.c	/^static void sort_list (ListLock *lock, List **iterator, CompareFunc func)$/;"	f	file:
source	/home/jasta/c/giFT/src/transfer.h	/^	Source       *source;        \/* source fulfilling this chunk's range *\/$/;"	m	struct:_chunk
source_cmp	/home/jasta/c/giFT/lib/protocol.h	/^	int  (*source_cmp) (struct _source *a, struct _source *b);$/;"	m	struct:_protocol
source_cmp	/home/jasta/c/giFT/src/transfer.c	/^int source_cmp (Source *a, Source *b)$/;"	f
source_free	/home/jasta/c/giFT/src/transfer.c	/^void source_free (Source *source)$/;"	f
source_new	/home/jasta/c/giFT/src/transfer.c	/^Source *source_new (char *user, char *hash, char *url)$/;"	f
source_pause	/home/jasta/c/giFT/src/download.c	/^static int source_pause (Source *source, Transfer *transfer)$/;"	f	file:
source_remove	/home/jasta/c/giFT/OpenFT/xfer.c	/^static void source_remove (Chunk *chunk, Source *source)$/;"	f	file:
source_status	/home/jasta/c/giFT/src/transfer.c	/^char *source_status (Source *source)$/;"	f
source_unpause	/home/jasta/c/giFT/src/download.c	/^static int source_unpause (Source *source, Transfer *transfer)$/;"	f	file:
sources	/home/jasta/c/giFT/src/transfer.h	/^	List         *sources;      \/* sources used for downloading *\/$/;"	m	struct:_transfer
spawn_gift	/home/jasta/c/giFT/win32/giFTtray/giFTtray.c	/^static int spawn_gift ()$/;"	f	file:
spread_checking	/home/jasta/c/giFT/OpenFT/netorg.c	/^static int spread_checking = FALSE;$/;"	v	file:
spread_disco	/home/jasta/c/giFT/OpenFT/netorg.c	/^static ListLock *spread_disco = NULL;  \/* disconnected *\/$/;"	v	file:
spread_disco_iter	/home/jasta/c/giFT/OpenFT/netorg.c	/^static List     *spread_disco_iter = NULL;$/;"	v	file:
spread_final	/home/jasta/c/giFT/OpenFT/netorg.c	/^static ListLock *spread_final = NULL;  \/* connected    *\/$/;"	v	file:
spread_final_iter	/home/jasta/c/giFT/OpenFT/netorg.c	/^static List     *spread_final_iter = NULL;$/;"	v	file:
spread_limbo	/home/jasta/c/giFT/OpenFT/netorg.c	/^static ListLock *spread_limbo = NULL;  \/* connecting   *\/$/;"	v	file:
spread_limbo_iter	/home/jasta/c/giFT/OpenFT/netorg.c	/^static List     *spread_limbo_iter = NULL;$/;"	v	file:
spread_op_list	/home/jasta/c/giFT/OpenFT/netorg.c	/^static ListLock **spread_op_list (unsigned short state, List ***r_op_iter)$/;"	f	file:
srch_buffer	/home/jasta/c/giFT/ui/fe_search.c	/^static GList *srch_buffer     = NULL;$/;"	v	file:
srch_list	/home/jasta/c/giFT/ui/gift-fe.h	/^	GtkWidget *srch_list;$/;"	m	struct:
srch_list_download	/home/jasta/c/giFT/ui/fe_search.c	/^static void srch_list_download (GtkWidget *mitem, Search *srch_node)$/;"	f	file:
srch_list_sort_column	/home/jasta/c/giFT/ui/fe_search.c	/^void srch_list_sort_column (GtkWidget *w, int column, void *sort_col)$/;"	f
sroot_len	/home/jasta/c/giFT/src/share_cache.c	/^static size_t sroot_len (char *root)$/;"	f	file:
start	/home/jasta/c/giFT/OpenFT/xfer.h	/^	off_t          start;              \/* range begin *\/$/;"	m	struct:
start	/home/jasta/c/giFT/src/transfer.h	/^	unsigned long start;$/;"	m	struct:_chunk
start_download	/home/jasta/c/giFT/src/daemon.c	/^static void start_download (Connection *c, Dataset *event)$/;"	f	file:
state	/home/jasta/c/giFT/OpenFT/node.h	/^	} state;$/;"	m	struct:
state	/home/jasta/c/giFT/lib/event.h	/^	InputState    state;$/;"	m	struct:
state_path	/home/jasta/c/giFT/src/transfer.h	/^	char         *state_path;$/;"	m	struct:_transfer
stats	/home/jasta/c/giFT/OpenFT/node.h	/^	FT_Stats       stats;$/;"	m	struct:
stats	/home/jasta/c/giFT/src/daemon.c	/^EV_HANDLER (stats);$/;"	v
stats_finish	/home/jasta/c/giFT/src/daemon.c	/^static void stats_finish (IFEvent *event)$/;"	f	file:
stats_free	/home/jasta/c/giFT/OpenFT/share.c	/^static void stats_free (FT_Stats *stats)$/;"	f	file:
stats_get	/home/jasta/c/giFT/OpenFT/share.c	/^static int stats_get (unsigned long key, FT_Stats *stats,$/;"	f	file:
stats_get_digest	/home/jasta/c/giFT/OpenFT/share.c	/^static int stats_get_digest (unsigned long key, FileShare *file,$/;"	f	file:
stats_list	/home/jasta/c/giFT/ui/gift-fe.h	/^	GtkWidget *stats_list;$/;"	m	struct:
stats_new	/home/jasta/c/giFT/OpenFT/share.c	/^static FT_Stats *stats_new ()$/;"	f	file:
stats_populate	/home/jasta/c/giFT/ui/fe_stats.c	/^int stats_populate (GtkWidget *clist)$/;"	f
stats_remove	/home/jasta/c/giFT/OpenFT/share.c	/^static int stats_remove (unsigned long key, FT_Stats *stats,$/;"	f	file:
stats_request	/home/jasta/c/giFT/OpenFT/protocol.c	/^FT_HANDLER (stats_request);$/;"	v
stats_response	/home/jasta/c/giFT/OpenFT/protocol.c	/^FT_HANDLER (stats_response);$/;"	v
stats_response	/home/jasta/c/giFT/ui/fe_stats.c	/^static int stats_response (char *head, int keys, GData *dataset,$/;"	f	file:
stats_timer_populate	/home/jasta/c/giFT/ui/fe_stats.c	/^int stats_timer_populate (FTApp *ftapp)$/;"	f
status	/home/jasta/c/giFT/src/transfer.h	/^	SourceStatus   status;   \/* reflects the "last" known status change of this$/;"	m	struct:_source
status_data	/home/jasta/c/giFT/src/transfer.h	/^	char          *status_data;$/;"	m	struct:_source
stop	/home/jasta/c/giFT/OpenFT/xfer.h	/^	off_t          stop;               \/* range stop.  0 is an exception which$/;"	m	struct:
stop	/home/jasta/c/giFT/src/transfer.h	/^	unsigned long stop;$/;"	m	struct:_chunk
str	/home/jasta/c/giFT/src/hook.h	/^		char  *str;$/;"	m	union:
str_append	/home/jasta/c/giFT/OpenFT/packet.c	/^static char *str_append (char *str, size_t *str_len, size_t *a_len,$/;"	f	file:
str_isempty	/home/jasta/c/giFT/lib/parse.c	/^int str_isempty (char *string)$/;"	f
strcasecmp	/home/jasta/c/giFT/win32/config.h	192;"	d
strdup	/home/jasta/c/giFT/lib/gift.h	97;"	d
string_lower	/home/jasta/c/giFT/lib/parse.c	/^char *string_lower (char *string)$/;"	f
string_sep	/home/jasta/c/giFT/lib/parse.c	/^char *string_sep (char **string, char *delim)$/;"	f
string_sep_ex	/home/jasta/c/giFT/lib/parse.c	/^static char *string_sep_ex (char **string, char *needle, size_t needle_len,$/;"	f	file:
string_sep_set	/home/jasta/c/giFT/lib/parse.c	/^char *string_sep_set (char **string, char *charset)$/;"	f
string_sep_set_func	/home/jasta/c/giFT/lib/parse.c	/^static char *string_sep_set_func (char *string, char *charset)$/;"	f	file:
string_set	/home/jasta/c/giFT/lib/parse.c	/^static unsigned char string_set[256] =$/;"	v	file:
stringf	/home/jasta/c/giFT/lib/parse.c	/^char *stringf (char *fmt, ...)$/;"	f
stringf_dup	/home/jasta/c/giFT/lib/parse.c	/^char *stringf_dup (char *fmt, ...)$/;"	f
strmove	/home/jasta/c/giFT/lib/parse.c	/^void strmove (char *dst, const char *src)$/;"	f
strncasecmp	/home/jasta/c/giFT/win32/config.h	193;"	d
submit_share_digest	/home/jasta/c/giFT/OpenFT/protocol.c	/^static Connection *submit_share_digest (Connection *c, Node *node,$/;"	f	file:
submit_to_index	/home/jasta/c/giFT/OpenFT/node.c	/^static Connection *submit_to_index (Connection *c, Node *node,$/;"	f	file:
submit_uploads	/home/jasta/c/giFT/OpenFT/xfer.c	/^static Connection *submit_uploads (Connection *c, Node *node, int *uploads)$/;"	f	file:
support	/home/jasta/c/giFT/lib/protocol.h	/^	struct _hash_table *support; \/* protocol-specific features *\/$/;"	m	struct:_protocol
suspended	/home/jasta/c/giFT/lib/event.h	/^	int           suspended; \/* suspended is TRUE when input should not be$/;"	m	struct:
term	/home/jasta/c/giFT/lib/nb.h	/^	char  term;                        \/**< Boolean flag indicating whether$/;"	m	struct:
throttle_resume	/home/jasta/c/giFT/OpenFT/xfer.c	/^static void throttle_resume (Chunk *chunk, int s_opt, void *data)$/;"	f	file:
throttle_suspend	/home/jasta/c/giFT/OpenFT/xfer.c	/^static void throttle_suspend (Chunk *chunk, int s_opt, void *data)$/;"	f	file:
throttle_tick	/home/jasta/c/giFT/src/download.c	/^static void throttle_tick (void *arg)$/;"	f	file:
throttle_tick	/home/jasta/c/giFT/src/upload.c	/^static void throttle_tick (void *arg)$/;"	f	file:
throttle_tick_timer	/home/jasta/c/giFT/src/download.c	/^static int            throttle_tick_timer          = 0;$/;"	v	file:
throttle_tick_timer	/home/jasta/c/giFT/src/upload.c	/^static int            throttle_tick_timer          = 0;$/;"	v	file:
throttle_update	/home/jasta/c/giFT/src/download.c	/^static void throttle_update (void *arg)$/;"	f	file:
throttle_update	/home/jasta/c/giFT/src/upload.c	/^static void throttle_update(void *arg)$/;"	f	file:
throttle_update_timer	/home/jasta/c/giFT/src/download.c	/^static int            throttle_update_timer        = 0;$/;"	v	file:
throttle_update_timer	/home/jasta/c/giFT/src/upload.c	/^static int            throttle_update_timer        = 0;$/;"	v	file:
throughput	/home/jasta/c/giFT/src/transfer.h	/^	unsigned long throughput;   \/* bytes\/second throughput *\/$/;"	m	struct:_transfer
throughput	/home/jasta/c/giFT/src/transfer.h	/^	unsigned long throughput;$/;"	m	struct:_chunk
tick_cap	/home/jasta/c/giFT/src/transfer.h	/^	int           tick_cap;      \/* number of ticks this chunk can be$/;"	m	struct:_chunk
timeout_cnt	/home/jasta/c/giFT/src/transfer.h	/^	int           timeout_cnt;   \/* timeout counter (how many seconds of$/;"	m	struct:_chunk
timeout_max	/home/jasta/c/giFT/src/transfer.h	/^	int           timeout_max;   \/* maximum number of timeout counts until an$/;"	m	struct:_chunk
timer_add	/home/jasta/c/giFT/lib/event.c	/^int timer_add (time_t interval, TimerCallback callback, void *data)$/;"	f
timer_counter	/home/jasta/c/giFT/lib/event.c	/^static unsigned long timer_counter = 0;$/;"	v	file:
timer_find	/home/jasta/c/giFT/lib/event.c	/^static Timer *timer_find (unsigned long id)$/;"	f	file:
timer_find_func	/home/jasta/c/giFT/lib/event.c	/^static int timer_find_func (Timer *timer, unsigned long *id)$/;"	f	file:
timer_remove	/home/jasta/c/giFT/lib/event.c	/^void timer_remove (unsigned long id)$/;"	f
timer_reset	/home/jasta/c/giFT/lib/event.c	/^void timer_reset (unsigned long id)$/;"	f
timer_uniq_id	/home/jasta/c/giFT/lib/event.c	/^static unsigned long timer_uniq_id ()$/;"	f	file:
timers	/home/jasta/c/giFT/lib/event.c	/^static ListLock *timers = NULL;$/;"	v	file:
timers_free	/home/jasta/c/giFT/lib/event.c	/^static List *timers_free = NULL;$/;"	v	file:
title_font	/home/jasta/c/giFT/win32/giFTsetup/giFTsetup.c	/^static HFONT      title_font;$/;"	v	file:
tmp_recv	/home/jasta/c/giFT/src/transfer.h	/^	unsigned long tmp_recv;      \/* k\/s calculations, timeout *\/$/;"	m	struct:_chunk
toggle_sharing	/home/jasta/c/giFT/win32/giFTtray/giFTtray.c	/^static void toggle_sharing ()$/;"	f	file:
token_remove_punct	/home/jasta/c/giFT/OpenFT/search.c	/^static void token_remove_punct (char *token)$/;"	f	file:
tokens	/home/jasta/c/giFT/OpenFT/share.h	/^	ft_uint32     *tokens;     \/* list of tokens for quick searching *\/$/;"	m	struct:
total	/home/jasta/c/giFT/src/transfer.h	/^	unsigned long total;        \/* total filesize to download *\/$/;"	m	struct:_transfer
total	/home/jasta/c/giFT/ui/fe_transfer.h	/^	unsigned long total;    \/* total size *\/$/;"	m	struct:
trace	/home/jasta/c/giFT/ui/gift-fe.h	39;"	d
trace_extra	/home/jasta/c/giFT/lib/log.c	/^static char *trace_extra = NULL;$/;"	v	file:
trace_file	/home/jasta/c/giFT/lib/log.c	/^static char *trace_file  = "";$/;"	v	file:
trace_func	/home/jasta/c/giFT/lib/log.c	/^static char *trace_func  = "";$/;"	v	file:
trace_line	/home/jasta/c/giFT/lib/log.c	/^static int   trace_line  = 0;$/;"	v	file:
transfer	/home/jasta/c/giFT/src/daemon.c	/^EV_HANDLER (transfer);$/;"	v
transfer	/home/jasta/c/giFT/src/transfer.h	/^	Transfer     *transfer;      \/* parent *\/$/;"	m	struct:_chunk
transfer	/home/jasta/c/giFT/ui/fe_daemon.c	/^FE_EV_HANDLER (transfer);$/;"	v
transfer_calc_bw	/home/jasta/c/giFT/src/transfer.c	/^int transfer_calc_bw (Transfer *transfer)$/;"	f
transfer_free	/home/jasta/c/giFT/src/transfer.c	/^void transfer_free (Transfer *transfer)$/;"	f
transfer_get_pixmap	/home/jasta/c/giFT/ui/fe_transfer.c	/^int transfer_get_pixmap (Transfer* transfer, GdkPixmap **pixmap,$/;"	f
transfer_get_rate	/home/jasta/c/giFT/ui/fe_transfer.c	/^unsigned long transfer_get_rate (Transfer *tr)$/;"	f
transfer_log	/home/jasta/c/giFT/src/transfer.c	/^void transfer_log (Transfer *transfer, char *fmt, ...)$/;"	f
transfer_new	/home/jasta/c/giFT/src/transfer.c	/^Transfer *transfer_new (TransferType direction,$/;"	f
transfer_output_path	/home/jasta/c/giFT/src/transfer.c	/^char *transfer_output_path (char *key, char *name, char *file)$/;"	f
transfer_pause	/home/jasta/c/giFT/src/transfer.c	/^void transfer_pause (Transfer *transfer)$/;"	f
transfer_rate	/home/jasta/c/giFT/ui/fe_transfer.h	/^	GList *transfer_rate; \/* transfer rate ac *\/$/;"	m	struct:
transfer_report_progress	/home/jasta/c/giFT/src/transfer.c	/^int transfer_report_progress (Transfer *transfer)$/;"	f
transfer_stop	/home/jasta/c/giFT/src/transfer.c	/^void transfer_stop (Transfer *transfer, int cancel)$/;"	f
transfer_unpause	/home/jasta/c/giFT/src/transfer.c	/^void transfer_unpause (Transfer *transfer)$/;"	f
transfers_throttle	/home/jasta/c/giFT/src/transfer.c	/^int transfers_throttle (List *transfers, unsigned long max_bw)$/;"	f
transfers_throttle_tick	/home/jasta/c/giFT/src/transfer.c	/^int transfers_throttle_tick (List *transfers, unsigned short *tick_count)$/;"	f
transmit	/home/jasta/c/giFT/src/transfer.h	/^	unsigned long transmit;      \/* currently received *\/$/;"	m	struct:_chunk
transmit	/home/jasta/c/giFT/src/transfer.h	/^	unsigned long transmit;     \/* total received *\/$/;"	m	struct:_transfer
transmit	/home/jasta/c/giFT/ui/fe_transfer.h	/^	unsigned long transmit; \/* total data sent\/received *\/$/;"	m	struct:
transmit_old	/home/jasta/c/giFT/src/transfer.h	/^	unsigned long transmit_old; \/* previous total received *\/$/;"	m	struct:_transfer
transmit_old	/home/jasta/c/giFT/src/transfer.h	/^	unsigned long transmit_old;$/;"	m	struct:_chunk
tree_destroy	/home/jasta/c/giFT/lib/tree.c	/^void tree_destroy (Tree **tree)$/;"	f
tree_destroy_free	/home/jasta/c/giFT/lib/tree.c	/^void tree_destroy_free (Tree **tree)$/;"	f
tree_find	/home/jasta/c/giFT/lib/tree.c	/^TreeNode *tree_find (Tree **tree, TreeNode *start,$/;"	f
tree_foreach	/home/jasta/c/giFT/lib/tree.c	/^void tree_foreach (Tree **tree, TreeNode *start, int depth,$/;"	f
tree_free	/home/jasta/c/giFT/lib/tree.c	/^static void tree_free (Tree **tree, int free_udata)$/;"	f	file:
tree_insert	/home/jasta/c/giFT/lib/tree.c	/^TreeNode *tree_insert (Tree **tree, TreeNode *parent, TreeNode *sibling,$/;"	f
tree_new	/home/jasta/c/giFT/lib/tree.c	/^static Tree *tree_new ()$/;"	f	file:
tree_node_free	/home/jasta/c/giFT/lib/tree.c	/^static void tree_node_free (TreeNode *node)$/;"	f	file:
tree_node_new	/home/jasta/c/giFT/lib/tree.c	/^static TreeNode *tree_node_new (void *data)$/;"	f	file:
tree_remove	/home/jasta/c/giFT/lib/tree.c	/^void tree_remove (Tree **tree, TreeNode *node)$/;"	f
trim_whitespace	/home/jasta/c/giFT/lib/parse.c	/^void trim_whitespace (char *string)$/;"	f
type	/home/jasta/c/giFT/OpenFT/search.h	/^	int        type;$/;"	m	struct:_search
type	/home/jasta/c/giFT/lib/if_event.h	/^	IFEventType type;$/;"	m	struct:_if_event
type	/home/jasta/c/giFT/src/hook.h	/^	HookVarType type;$/;"	m	struct:
type	/home/jasta/c/giFT/src/mime.c	/^	char *type;$/;"	m	struct:_mime_type	file:
type	/home/jasta/c/giFT/src/share_file.h	/^	char          *type;     \/* audio\/mpeg          (memory from mime.c) *\/$/;"	m	struct:_file_share
type	/home/jasta/c/giFT/src/transfer.h	/^	TransferType  type;         \/* the type of the transfer *\/$/;"	m	struct:_transfer
type	/home/jasta/c/giFT/ui/fe_obj.c	/^	unsigned int type;$/;"	m	struct:_free_table	file:
type	/home/jasta/c/giFT/ui/fe_obj.h	/^	unsigned int type;$/;"	m	struct:_object_data
udata	/home/jasta/c/giFT/lib/nb.h	/^	void *udata;                       \/**< Arbitrary attached data *\/$/;"	m	struct:
udata	/home/jasta/c/giFT/lib/platform.h	/^	void       *udata;$/;"	m	struct:
udata	/home/jasta/c/giFT/lib/queue.h	/^	void          *udata;              \/**< Arbitrary data passed along *\/$/;"	m	struct:
ui_conf	/home/jasta/c/giFT/lib/gift.c	/^static Config     *ui_conf     = NULL;$/;"	v	file:
ui_search_clicked	/home/jasta/c/giFT/ui/fe_ui.c	/^static void ui_search_clicked (GtkWidget *button, FTApp *ft)$/;"	f	file:
ui_share_btn_clicked	/home/jasta/c/giFT/ui/fe_ui.c	/^static void ui_share_btn_clicked (GtkWidget *button, char *what)$/;"	f	file:
ui_size_changed	/home/jasta/c/giFT/ui/fe_ui.c	/^static void ui_size_changed (GtkWidget *window, GtkAllocation *req, FTApp *ft)$/;"	f	file:
ul_frame	/home/jasta/c/giFT/ui/gift-fe.h	/^	GtkWidget *ul_frame;$/;"	m	struct:
ul_list	/home/jasta/c/giFT/ui/gift-fe.h	/^	GtkWidget *ul_list;$/;"	m	struct:
uncomp_path	/home/jasta/c/giFT/OpenFT/share_comp.c	/^static char      *uncomp_path      = NULL;$/;"	v	file:
uniq	/home/jasta/c/giFT/src/transfer.h	/^	char         *uniq;         \/* unique identifer, see uniq_file in$/;"	m	struct:_transfer
uniq_file	/home/jasta/c/giFT/src/download.c	/^static char *uniq_file (Transfer *transfer)$/;"	f	file:
uniq_id	/home/jasta/c/giFT/lib/if_event.c	/^static IFEventID uniq_id ()$/;"	f	file:
unix_init	/home/jasta/c/giFT/lib/platform.c	/^static int unix_init ()$/;"	f	file:
unlink_db	/home/jasta/c/giFT/OpenFT/share_db.c	/^static void unlink_db (char *path)$/;"	f	file:
unused_chunk	/home/jasta/c/giFT/src/download.c	/^static Chunk *unused_chunk (Transfer *transfer)$/;"	f	file:
update_index	/home/jasta/c/giFT/src/share_cache.c	/^static void update_index (ChildFunc cfunc, ParentFunc pfunc, void *udata)$/;"	f	file:
upload	/home/jasta/c/giFT/lib/protocol.h	/^	ProtocolCallback    upload;$/;"	m	struct:_protocol
upload_auth	/home/jasta/c/giFT/src/upload.c	/^char *upload_auth (char *user, char *path, AuthReason *reason)$/;"	f
upload_cancel	/home/jasta/c/giFT/OpenFT/xfer.c	/^static void upload_cancel (Chunk *chunk, void *data)$/;"	f	file:
upload_close	/home/jasta/c/giFT/src/upload.c	/^static void upload_close (IFEvent *event)$/;"	f	file:
upload_digest	/home/jasta/c/giFT/OpenFT/node.c	/^static Connection *upload_digest (Connection *c, Node *node, void *udata)$/;"	f	file:
upload_disable	/home/jasta/c/giFT/src/upload.c	/^void upload_disable ()$/;"	f
upload_display	/home/jasta/c/giFT/src/upload.c	/^void upload_display (Transfer *transfer)$/;"	f
upload_enable	/home/jasta/c/giFT/src/upload.c	/^void upload_enable ()$/;"	f
upload_free	/home/jasta/c/giFT/src/upload.c	/^static void upload_free (Transfer *upload)$/;"	f	file:
upload_insert	/home/jasta/c/giFT/ui/fe_upload.c	/^Transfer *upload_insert (GtkWidget *ul_list, GData *ft_data)$/;"	f
upload_length	/home/jasta/c/giFT/src/upload.c	/^int upload_length (char *user)$/;"	f
upload_new	/home/jasta/c/giFT/src/upload.c	/^Transfer *upload_new (Protocol *p, char *host, char *hash, char *filename,$/;"	f
upload_register	/home/jasta/c/giFT/OpenFT/xfer.c	/^static void upload_register (Chunk *chunk, void *data)$/;"	f	file:
upload_report	/home/jasta/c/giFT/src/upload.c	/^static int upload_report (void *udata)$/;"	f	file:
upload_report_attached	/home/jasta/c/giFT/src/upload.c	/^void upload_report_attached (Connection *c)$/;"	f
upload_report_progress	/home/jasta/c/giFT/src/upload.c	/^static int upload_report_progress (Transfer *transfer, void *udata)$/;"	f	file:
upload_response	/home/jasta/c/giFT/ui/fe_upload.c	/^int upload_response (char *head, int keys, GData *dataset, DaemonEvent *event)$/;"	f
upload_resume	/home/jasta/c/giFT/OpenFT/xfer.c	/^static void upload_resume (Chunk *chunk, void *data)$/;"	f	file:
upload_status	/home/jasta/c/giFT/src/upload.c	/^int upload_status ()$/;"	f
upload_stop	/home/jasta/c/giFT/src/upload.c	/^void upload_stop (Transfer *upload, int cancel)$/;"	f
upload_suspend	/home/jasta/c/giFT/OpenFT/xfer.c	/^static void upload_suspend (Chunk *chunk, void *data)$/;"	f	file:
upload_tick_count	/home/jasta/c/giFT/src/upload.c	/^static unsigned short upload_tick_count            = 0;$/;"	v	file:
upload_timer	/home/jasta/c/giFT/src/upload.c	/^static unsigned long upload_timer                  = 0;$/;"	v	file:
upload_unregister	/home/jasta/c/giFT/OpenFT/xfer.c	/^static void upload_unregister (Chunk *chunk, void *data)$/;"	f	file:
upload_write	/home/jasta/c/giFT/src/upload.c	/^void upload_write (Chunk *chunk, char *segment, size_t len)$/;"	f
uploads	/home/jasta/c/giFT/OpenFT/search.c	/^	int           uploads;$/;"	m	struct:_match_data	file:
uploads	/home/jasta/c/giFT/OpenFT/share.h	/^	int            uploads;      \/* currently active uploads *\/$/;"	m	struct:
uploads	/home/jasta/c/giFT/src/upload.c	/^static List *uploads                               = NULL;$/;"	v	file:
url	/home/jasta/c/giFT/OpenFT/xfer.c	/^	char *url;$/;"	m	struct:_ft_source	file:
url	/home/jasta/c/giFT/src/transfer.h	/^	char          *url;      \/* OpenFT:\/\/65.4.102.175:1216\/file.tar.gz *\/$/;"	m	struct:_source
url_decode	/home/jasta/c/giFT/OpenFT/html.c	/^char *url_decode (char *encoded)$/;"	f
url_encode	/home/jasta/c/giFT/OpenFT/html.c	/^char *url_encode (char *decoded)$/;"	f
url_encode_char	/home/jasta/c/giFT/OpenFT/html.c	/^static char *url_encode_char (char *stream, unsigned char c)$/;"	f	file:
usage	/home/jasta/c/giFT/src/main.c	/^static void usage (char *argv0, int exit_val)$/;"	f	file:
user	/home/jasta/c/giFT/src/transfer.h	/^	char          *user;     \/* 65.4.102.175                           *\/$/;"	m	struct:_source
user	/home/jasta/c/giFT/ui/fe_share.h	/^	char *user;$/;"	m	struct:_shared_file
users	/home/jasta/c/giFT/OpenFT/daemon.c	/^	unsigned long users;$/;"	m	struct:_stats	file:
users	/home/jasta/c/giFT/OpenFT/share.h	/^	unsigned long users;       \/* this value depends on context of the$/;"	m	struct:
validate	/home/jasta/c/giFT/lib/event.h	/^	unsigned long validate;  \/* timeout for incomplete sockets *\/$/;"	m	struct:
validate_share_submit	/home/jasta/c/giFT/OpenFT/utils.c	/^int validate_share_submit ()$/;"	f
validate_timeout	/home/jasta/c/giFT/lib/event.c	/^static int validate_timeout (Input *input)$/;"	f	file:
value	/home/jasta/c/giFT/lib/hash.h	/^	void              *value;$/;"	m	struct:_hash_node
value	/home/jasta/c/giFT/lib/list_dataset.c	/^	void *value;$/;"	m	struct:_pair	file:
value	/home/jasta/c/giFT/src/hook.h	/^	} value;$/;"	m	struct:
verified	/home/jasta/c/giFT/OpenFT/node.h	/^	unsigned char  verified : 1;   \/* both ports have been verified *\/$/;"	m	struct:
verified	/home/jasta/c/giFT/OpenFT/share.h	/^	int            verified;     \/* set to TRUE after both ports are verified *\/$/;"	m	struct:
verify_clear	/home/jasta/c/giFT/OpenFT/node.c	/^static void verify_clear (Connection **verify)$/;"	f	file:
verify_db	/home/jasta/c/giFT/OpenFT/share_db.c	/^static int verify_db (FILE *f, size_t *nrec)$/;"	f	file:
version	/home/jasta/c/giFT/OpenFT/node.h	/^	ft_uint32      version;$/;"	m	struct:
version	/home/jasta/c/giFT/src/main.c	/^static void version ()$/;"	f	file:
version	/home/jasta/c/giFT/src/perl.c	/^	char *version;$/;"	m	struct:perlscript	file:
version_request	/home/jasta/c/giFT/OpenFT/protocol.c	/^FT_HANDLER (version_request);$/;"	v
version_request_003	/home/jasta/c/giFT/OpenFT/protocol.c	/^FT_HANDLER (version_request_003);$/;"	v
version_response	/home/jasta/c/giFT/OpenFT/protocol.c	/^FT_HANDLER (version_response);$/;"	v
version_response_003	/home/jasta/c/giFT/OpenFT/protocol.c	/^FT_HANDLER (version_response_003);$/;"	v
vitality	/home/jasta/c/giFT/OpenFT/node.h	/^	time_t         vitality;$/;"	m	struct:
vsnprintf	/home/jasta/c/giFT/win32/config.h	195;"	d
wdbg	/home/jasta/c/giFT/win32/giFTsetup/giFTsetup.c	/^static void wdbg (const char *format, ...)$/;"	f	file:
widget	/home/jasta/c/giFT/ui/fe_pref.c	/^	GtkWidget *widget;$/;"	m	struct:option_entry	file:
win32_format_message	/home/jasta/c/giFT/lib/platform.c	/^char *win32_format_message (const DWORD err)$/;"	f
win32_init	/home/jasta/c/giFT/lib/platform.c	/^static int win32_init ()$/;"	f	file:
window	/home/jasta/c/giFT/ui/gift-fe.h	/^	GtkWidget *window;$/;"	m	struct:
window_proc	/home/jasta/c/giFT/win32/giFTtray/giFTtray.c	/^static LRESULT CALLBACK window_proc (HWND window, UINT message,$/;"	f	file:
with_ctree_selection	/home/jasta/c/giFT/ui/fe_ui_utils.c	/^void with_ctree_selection (GtkCTree *ctree, void function(Transfer *))$/;"	f
write_data	/home/jasta/c/giFT/src/download.c	/^static int write_data (Transfer *transfer, Chunk *chunk,$/;"	f	file:
write_int	/home/jasta/c/giFT/OpenFT/share_db.c	/^static size_t write_int (FILE *f, ft_uint32 integer, size_t integer_size)$/;"	f	file:
write_list	/home/jasta/c/giFT/win32/giFTtray/giFTtray.c	/^static List *write_list = NULL;$/;"	v	file:
write_queue	/home/jasta/c/giFT/lib/connection.h	/^	ListQueue        *write_queue;     \/**< Holds the currently pending$/;"	m	struct:_connection
write_record	/home/jasta/c/giFT/OpenFT/share_db.c	/^static int write_record (FILE *f, FileShare *file, FT_Share *share)$/;"	f	file:
write_source	/home/jasta/c/giFT/ui/fe_download.c	/^static void write_source (FEConnection *c, Transfer *obj)$/;"	f	file:
x	/home/jasta/c/giFT/research/test.c	/^	char  x;$/;"	m	struct:_bar	file:
xfer	/home/jasta/c/giFT/ui/fe_transfer.h	/^	int xfer;               \/* upload\/download *\/$/;"	m	struct:
xpm	/home/jasta/c/giFT/ui/fe_share.c	/^	char **xpm;$/;"	m	struct:mime_entry	file:
xs_init	/home/jasta/c/giFT/src/perl.c	/^void xs_init ()$/;"	f
y	/home/jasta/c/giFT/research/test.c	/^	char *y;$/;"	m	struct:_bar	file:
z	/home/jasta/c/giFT/research/test.c	/^	int   z[4];$/;"	m	struct:_bar	file:
