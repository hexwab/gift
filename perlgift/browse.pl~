#!/usr/bin/perl -w
use strict;

use CGI qw[:standard start_ul end_ul start_table end_table escape unescape];

use giFT::Daemon;
use giFT::Shares;
use giFT::Stats;
use giFT::TransferHandler;

use vars qw[$daemon $shares $stats $th %tree];

use subs qw[cb_shares];

if (!$daemon) {
    $daemon=new giFT::Daemon(undef,undef,1,0);
    $daemon->attach;
}
$shares||=new giFT::Shares($daemon,0,undef,undef,undef,\&cb_shares);
$stats||=new giFT::Stats($daemon);
$th||=new giFT::TransferHandler($daemon);

$stats->pump;

do {
    $daemon->poll;
} while (!$shares->share_status);

my $hostname=$ENV{SERVER_NAME};
my $port=1216;


my $path=unescape path_info;
my $dir=\%tree;
#$path=~s#/../[^/]*/#/#g;
$path=~s#(?=.)/$##;
my $valid=1;
my @path;
for (split /\//,$path) {
    next if !$_;
    $valid=0, last if !exists $dir->{$_};
    $dir=$dir->{$_};
    push @path, $_;
}
if (!$valid) {
    print header{status=>'404 Not Found'};
} else {
    print header;

    print start_html{title=>"giFT: $path"};
    print div{class=>'status'}, join ' | ',(
					  scalar localtime,
					 'Files: '.$shares->shares,
					 'Size: '.sprintf("%.2fGB",($stats->shared_stats)[1]/(1<<30)),
					 'Uploads: '.$th->uploads,
					 'Bandwidth: '.sprintf("%.2fkB/s",($th->bandwidth)[0]/1024),
					 );
#    print p 'Hidden: '.($shares->hidden_status?'yes':'no');
    my $linkpath;
    {
	my $i=@path;
	$linkpath=a{href=>'./'.join'/',('..')x$i},'/';
	for (@path) {
	    $linkpath.=a{href=>'./'.join'/',('..')x--$i},escapeHTML $_;
	    $linkpath.='/';
	}
	chop $linkpath if @path;
    }
    print h3{class=>'dirheader'},"Directory listing of $linkpath";
    print start_ul{class=>'subdirs'};
    for (sort keys %$dir) {
	next if !$_;
	my $subdir=$dir->{$_};
	my $files=($subdir->{''} && keys %{$subdir->{''}});
	my $dirs=keys(%$subdir);
	$dirs-- if $files;
	my @info;
	push @info, "$files file".($files==1?'':'s') if ($files);
	push @info, "$dirs subdir".($dirs==1?'':'s') if ($dirs);
	
	print li[a({href=>escape($_).'/'},escapeHTML $_). ' ['.(@info?join', ',@info:'empty').']'];
    }
    print end_ul;
    $path=~s/.//; # :(
    print start_table{class=>'files'};
    for (sort keys %{$dir->{''}}) {
	my $share=$dir->{''}{$_};
	my @meta;
	if ($share->{META}{bitrate}) {
	    push @meta, sprintf("%dkbps",$share->{META}{bitrate}/1000);
	}
	if ($share->{META}{duration}) {
	    push @meta, sprintf("%d:%02d",map{$_/60,$_%60}$share->{META}{duration});
	}
	my $size=$share->{size};
	1 while $size=~s/(\d)(\d{3})(?!\d)/$1,$2/;

	print Tr td[
		    $size,
		    a({href=>"http://$hostname:$port/".escape"$path/$_"},escapeHTML $_),
		    @meta,
		    ];
    }
    print end_table;
    print hr;
}

sub cb_shares {
    for my $share ($shares->shares) {
	my ($path,$file)=$share->{hpath}=~m#^/(.*)/([^/]*)$#;

	my $pos=\%tree;
	
	for (split /\//,$path) {
	    my $newpos=$pos->{$_};
	    if (!$newpos) {
		$pos->{$_}={};
		$newpos=$pos->{$_};
	    }
	    $pos=$newpos;
	}
	$pos->{''}{$file}=$share;
    }
}
