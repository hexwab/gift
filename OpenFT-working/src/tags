DB_COMPAREFN	ft_search_db.c	/^# define DB_COMPAREFN(cmpfn) int cmpfn (DB *dbp, c/
ERR_DB	ft_search_db.c	/^#define ERR_DB(method,ret)                 \\$/
ERR_DB_NODE	ft_search_db.c	/^#define ERR_DB_NODE(method,ret,node)       \\$/
ERR_DB_PATH	ft_search_db.c	/^#define ERR_DB_PATH(method,ret,path,db)    \\$/
ERR_DB_SDB	ft_search_db.c	/^#define ERR_DB_SDB(method,ret,sdb)         \\$/
F1	md5.c	/^# define F1(x, y, z) (z ^ (x & (y ^ z)))$/
F2	md5.c	/^# define F2(x, y, z) F1(z, x, y)$/
F3	md5.c	/^# define F3(x, y, z) (x ^ y ^ z)$/
F4	md5.c	/^# define F4(x, y, z) (y ^ (x | ~z))$/
FT_CONN	ft_node.h	/^#define FT_CONN(node) (node ? (node->session ? nod/
FT_HANDLER	ft_protocol.h	/^#define FT_HANDLER(hfunc) \\$/
FT_NETORG_FOREACH	ft_netorg.h	/^#define FT_NETORG_FOREACH(func) ((FTNetorgForeach)/
FT_NODE	ft_node.h	/^#define FT_NODE(c)       ((FTNode *)c->udata)$/
FT_NODE_INFO	ft_node.h	/^#define FT_NODE_INFO(c)  (&(FT_NODE(c)->ninfo))$/
FT_SEARCH_DB	ft_search_db.h	/^#define FT_SEARCH_DB(node) ((node)->session->searc/
FT_SEARCH_METHOD	ft_search_obj.h	/^#define FT_SEARCH_METHOD(flags) ((flags) & 0x03)$/
FT_SESSION	ft_session.h	/^#define FT_SESSION(c) ((FT_NODE(c)) ? FT_NODE(c)->/
FT_VERSION_CMP	ft_version.h	/^#define FT_VERSION_CMP(a,b) ((a & COMPAT_MASK) - (/
FT_VERSION_EQ	ft_version.h	/^#define FT_VERSION_EQ(a,b) ((a & COMPAT_MASK) == (/
FT_VERSION_GT	ft_version.h	/^#define FT_VERSION_GT(a,b) ((a & COMPAT_MASK) > (b/
FT_VERSION_LT	ft_version.h	/^#define FT_VERSION_LT(a,b) ((a & COMPAT_MASK) < (b/
KLASS_INDEX	ft_netorg.c	/^#define KLASS_INDEX(klass)   \\$/
MD5Final	md5.c	/^static void MD5Final(unsigned char digest[HASH_LEN/
MD5Init	md5.c	/^static void MD5Init(struct MD5Context *ctx)$/
MD5STEP	md5.c	/^# define MD5STEP(f, w, x, y, z, data, s) ( w += f(/
MD5Transform	md5.c	/^static void MD5Transform(uint32_t buf[4], uint32_t/
MD5Update	md5.c	/^static void MD5Update(struct MD5Context *ctx, unsi/
Mft_guid	ft_guid.c	/^int main (int argc, char **argv)$/
Mft_http	ft_http.c	/^int main (int argc, char **argv)$/
Mft_version	ft_version.c	/^int main ()$/
Mmd5	md5.c	/^int main (int argc, char **argv)$/
OpenFT_init	ft_openft.c	/^BOOL OpenFT_init (Protocol *p)$/
SHIFT	ft_version.c	/^#define SHIFT(x,y)       (((x) & 0xff) << (y))$/
STATE_INDEX	ft_netorg.c	/^#define STATE_INDEX(state)   (int)(state)$/
UNSHIFT	ft_version.c	/^#define UNSHIFT(v,x,y)   if (x) *x = (((v) >> (y))/
accept_test_port	ft_utils.c	/^static void accept_test_port (TCPC *c, in_port_t p/
accept_test_result	ft_utils.c	/^static void accept_test_result (TCPC *c, TCPC *ver/
accept_test_verify	ft_utils.c	/^static void accept_test_verify (int fd, input_id i/
access_nodes_share	ft_http_server.c	/^static Share *access_nodes_share (FTHttpRequest *r/
acquire_new_stuff	ft_conn.c	/^static int acquire_new_stuff (void)$/
add_class	ft_node.c	/^static void add_class (String *s, int *first, char/
add_conn_list	ft_netorg.c	/^static int add_conn_list (ft_state_t state, FTNode/
add_download	ft_transfer.c	/^static void add_download (FTTransfer *xfer)$/
add_keylist	ft_http.c	/^static void add_keylist (ds_data_t *key, ds_data_t/
add_meta	ft_share.c	/^static void add_meta (ds_data_t *key, ds_data_t *v/
add_reply_503_hidden	ft_http_server.c	/^static void add_reply_503_hidden (FTHttpReply *rep/
add_reply_503_queued	ft_http_server.c	/^static void add_reply_503_queued (FTHttpReply *rep/
add_reply_success	ft_http_server.c	/^static void add_reply_success (FTHttpReply *reply,/
add_result	ft_search_exec.c	/^static void add_result (SearchData *sdata, FileSha/
add_search_result	ft_search_db.c	/^static BOOL add_search_result (Array **a, FTSearch/
add_sorted	ft_netorg.c	/^static int add_sorted (FTNode *a, FTNode *b)$/
alloc_udata	ft_openft.c	/^static struct openft_data *alloc_udata (Protocol */
allow_dups	ft_search_db.c	/^static int allow_dups (DB *dbp, DBCompareFn cmpfun/
array_ho	ft_packet.c	/^static void array_ho (unsigned char *ptr, size_t s/
array_range	ft_packet.c	/^static int array_range (FTPacket *packet, size_t s/
array_sentinel	ft_packet.c	/^static int array_sentinel (unsigned char *ptr, siz/
auth_get_request	ft_http_server.c	/^static Share *auth_get_request (TCPC *c, FTHttpReq/
auth_http_code	ft_http_server.c	/^static int auth_http_code (int response)$/
bin_to_hex	md5.c	/^static int bin_to_hex (unsigned char *bin, char *h/
bm_close_db	ft_search_db.c	/^static void bm_close_db (DB *dbp)$/
bm_open_db	ft_search_db.c	/^static DB *bm_open_db (const char *file, const cha/
browse_begin	ft_search_obj.c	/^static int browse_begin (FTBrowse *browse)$/
browse_by_event	ft_search_obj.c	/^static int browse_by_event (ds_data_t *key, ds_dat/
browse_free	ft_search_obj.c	/^static void browse_free (FTBrowse *browse)$/
browse_timeout	ft_search_obj.c	/^static int browse_timeout (FTBrowse *browse)$/
build_openft_url	ft_search.c	/^static char *build_openft_url (struct search_resul/
byteReverse	md5.c	/^# define byteReverse(buf, len)$/
calc_shortest	ft_search_db.c	/^static void calc_shortest (struct cursor_stream *s/
check_local_allow	ft_conn.c	/^static int check_local_allow (FTNode *node)$/
check_overrun	ft_packet.c	/^static BOOL check_overrun (FTPacket *packet, size_/
clamp_openft_params	ft_openft.c	/^static BOOL clamp_openft_params (Protocol *p, stru/
clean_db_path	ft_search_db.c	/^static void clean_db_path (const char *path)$/
cleanup_conn	ft_openft.c	/^static BOOL cleanup_conn (FTNode *node, void *data/
cleanup_cursors	ft_search_db.c	/^static int cleanup_cursors (struct cursor_stream */
cleanup_matches	ft_search_db.c	/^static int cleanup_matches (DBT *data, void *udata/
clear_sdata	ft_search_exec.c	/^static void clear_sdata (SearchData *sdata)$/
clear_stream	ft_stream.c	/^static int clear_stream (ds_data_t *key, ds_data_t/
client_send_get_request	ft_http_client.c	/^static int client_send_get_request (FTTransfer *xf/
close	md5.c	/^# define close(p1) _close(p1)$/
close_db	ft_search_db.c	/^static int close_db (DB *dbp, char *path, char *da/
cmp_filename	ft_search_exec.c	/^static BOOL cmp_filename (SearchData *sdata, FileS/
cmp_host	ft_search_exec.c	/^static BOOL cmp_host (SearchData *sdata, FileShare/
cmp_md5	ft_search_exec.c	/^static BOOL cmp_md5 (SearchData *sdata, FileShare /
cmp_sdata	ft_search_exec.c	/^static BOOL cmp_sdata (SearchData *sdata, FileShar/
cmp_sources	ft_transfer.c	/^static int cmp_sources (Source *a, struct ft_sourc/
cmp_token	ft_search_exec.c	/^static int cmp_token (const void *a, const void *b/
conn_list_iter	ft_netorg.c	/^static int conn_list_iter (struct conn_list *clist/
connect_complete	ft_session.c	/^static void connect_complete (TCPC *c, int fd, inp/
construct_reply	ft_http_server.c	/^static FTHttpReply *construct_reply (FTHttpRequest/
create_nodes_share	ft_http_server.c	/^static BOOL create_nodes_share (Share *share)$/
create_session	ft_session.c	/^static FTSession *create_session (FTNode *node)$/
cursor_md5idx_md5	ft_search_db.c	/^static DBC *cursor_md5idx_md5 (DB *dbp, unsigned c/
db_abort	ft_search_db.c	/^static BOOL db_abort (FTSearchDB *sdb)$/
db_close	ft_search_db.c	/^static BOOL db_close (FTSearchDB *sdb, BOOL rm)$/
db_destroy	ft_search_db.c	/^static void db_destroy (const char *envpath)$/
db_init	ft_search_db.c	/^static BOOL db_init (const char *envpath, u_int32_/
db_insert	ft_search_db.c	/^static BOOL db_insert (FTSearchDB *sdb, Share *sha/
db_insert_md5idx	ft_search_db.c	/^static BOOL db_insert_md5idx (FTSearchDB *sdb, Has/
db_insert_sharedata	ft_search_db.c	/^static BOOL db_insert_sharedata (FTSearchDB *sdb, /
db_insert_shareidx	ft_search_db.c	/^static BOOL db_insert_shareidx (FTSearchDB *sdb, H/
db_insert_tokenidx	ft_search_db.c	/^static BOOL db_insert_tokenidx (FTSearchDB *sdb, H/
db_lookup_md5	ft_search_db.c	/^static Share *db_lookup_md5 (FTSearchDB *sdb, unsi/
db_master	ft_search_db.c	/^static DB *db_master (DB **dbpp, DBCompareFn cmpfu/
db_md5idx	ft_search_db.c	/^static DB *db_md5idx (void)$/
db_remove	ft_search_db.c	/^static BOOL db_remove (FTSearchDB *sdb, unsigned c/
db_remove_host_finish	ft_search_db.c	/^static void db_remove_host_finish (FTSearchDB *sdb/
db_remove_host_init	ft_search_db.c	/^static BOOL db_remove_host_init (FTSearchDB *sdb)$/
db_remove_host_next	ft_search_db.c	/^static BOOL db_remove_host_next (FTSearchDB *sdb)$/
db_remove_host_next_scheduled	ft_search_db.c	/^static FTSearchDB *db_remove_host_next_scheduled (/
db_remove_host_schedule	ft_search_db.c	/^static BOOL db_remove_host_schedule (FTSearchDB *s/
db_remove_host_timer	ft_search_db.c	/^static BOOL db_remove_host_timer (FTSearchDB *sdb)/
db_remove_md5idx	ft_search_db.c	/^static BOOL db_remove_md5idx (FTSearchDB *sdb, uns/
db_remove_sharedata	ft_search_db.c	/^static BOOL db_remove_sharedata (FTSearchDB *sdb, /
db_remove_shareidx	ft_search_db.c	/^static BOOL db_remove_shareidx (FTSearchDB *sdb, u/
db_remove_tokenidx	ft_search_db.c	/^static BOOL db_remove_tokenidx (FTSearchDB *sdb,$/
db_remove_tokenidx_token	ft_search_db.c	/^static BOOL db_remove_tokenidx_token (DBC *dbcp, F/
db_search_md5	ft_search_db.c	/^static int db_search_md5 (Array **a, unsigned char/
db_search_tokens	ft_search_db.c	/^static int db_search_tokens (Array **a, char *real/
db_sharedata	ft_search_db.c	/^static DB *db_sharedata (void)$/
db_shareidx	ft_search_db.c	/^static DB *db_shareidx (FTSearchDB *sdb, BOOL allo/
db_shareidx_path	ft_search_db.c	/^static char *db_shareidx_path (FTSearchDB *sdb, ch/
db_sync	ft_search_db.c	/^static BOOL db_sync (FTSearchDB *sdb)$/
db_tokenidx	ft_search_db.c	/^static DB *db_tokenidx (void)$/
dec_value_from_hex	ft_http.c	/^static int dec_value_from_hex (char hex_char)$/
decompose_source	ft_transfer.c	/^static BOOL decompose_source (struct ft_source *sr/
delete_key_data	ft_search_db.c	/^static BOOL delete_key_data (DBC *dbcp, DBT *key, /
deliver_result	ft_search.c	/^static BOOL deliver_result (IFEvent *event, struct/
direct_md5_hash	ft_search_db.c	/^static u_int32_t direct_md5_hash (DB *dbp, const v/
drop_notalive	ft_conn.c	/^static BOOL drop_notalive (FTNode *node, void *uda/
dump_node	ft_netorg.c	/^static int dump_node (FTNode *node, void *udata)$/
exec_browse	ft_search.c	/^static int exec_browse (Protocol *p, IFEvent *even/
exec_search	ft_search.c	/^static int exec_search (Protocol *p, IFEvent *even/
fill_sdata	ft_search_exec.c	/^static int fill_sdata (SearchData *sdata, int nmax/
final_match	ft_search_exec.c	/^static int final_match (FileShare *file, SearchDat/
finish_params	ft_search_obj.c	/^static void finish_params (ft_search_parms_t *para/
finish_source	ft_transfer.c	/^static void finish_source (struct ft_source *src)$/
flush_queue	ft_node.c	/^static void flush_queue (Array **queue)$/
foreach_list	ft_netorg.c	/^static int foreach_list (ft_class_t klass, ft_stat/
free_conn_list	ft_netorg.c	/^static void free_conn_list (struct conn_list *clis/
free_source	ft_transfer.c	/^static void free_source (struct ft_source *src)$/
free_udata	ft_openft.c	/^static void free_udata (struct openft_data *openft/
ft_accept_test	ft_utils.c	/^void ft_accept_test (TCPC *c)$/
ft_browse_disable	ft_search_obj.c	/^void ft_browse_disable (FTBrowse *browse)$/
ft_browse_find	ft_search_obj.c	/^FTBrowse *ft_browse_find (ft_guid_t *guid, in_addr/
ft_browse_find_by_event	ft_search_obj.c	/^FTBrowse *ft_browse_find_by_event (IFEvent *event)/
ft_browse_finish	ft_search_obj.c	/^void ft_browse_finish (FTBrowse *browse)$/
ft_browse_new	ft_search_obj.c	/^FTBrowse *ft_browse_new (IFEvent *event, in_addr_t/
ft_browse_reply	ft_search.c	/^BOOL ft_browse_reply (FTBrowse *browse, ft_nodeinf/
ft_cfg_get_int	ft_conf.c	/^int ft_cfg_get_int (char *keypath)$/
ft_cfg_get_path	ft_conf.c	/^char *ft_cfg_get_path (char *keypath, char *def)$/
ft_cfg_get_str	ft_conf.c	/^char *ft_cfg_get_str (char *keypath)$/
ft_conn_auth	ft_conn.c	/^BOOL ft_conn_auth (FTNode *node, int outgoing)$/
ft_conn_children_left	ft_conn.c	/^int ft_conn_children_left (void)$/
ft_conn_initial	ft_conn.c	/^BOOL ft_conn_initial (void)$/
ft_conn_maintain	ft_conn.c	/^int ft_conn_maintain (void *udata)$/
ft_conn_need_index	ft_conn.c	/^BOOL ft_conn_need_index (void)$/
ft_conn_need_parents	ft_conn.c	/^BOOL ft_conn_need_parents (void)$/
ft_conn_need_peers	ft_conn.c	/^BOOL ft_conn_need_peers (void)$/
ft_downloads_access	ft_transfer.c	/^Array *ft_downloads_access (void)$/
ft_guid_dup	ft_guid.c	/^ft_guid_t *ft_guid_dup (ft_guid_t *src)$/
ft_guid_fmt	ft_guid.c	/^char *ft_guid_fmt (ft_guid_t *guid)$/
ft_guid_free	ft_guid.c	/^void ft_guid_free (ft_guid_t *guid)$/
ft_guid_new	ft_guid.c	/^ft_guid_t *ft_guid_new (void)$/
ft_http_client_get	ft_http_client.c	/^BOOL ft_http_client_get (FTTransfer *xfer)$/
ft_http_client_push	ft_http_client.c	/^BOOL ft_http_client_push (in_addr_t ip, in_port_t /
ft_http_reply_free	ft_http.c	/^void ft_http_reply_free (FTHttpReply *reply)$/
ft_http_reply_new	ft_http.c	/^FTHttpReply *ft_http_reply_new (int code)$/
ft_http_reply_send	ft_http.c	/^int ft_http_reply_send (FTHttpReply *reply, TCPC */
ft_http_reply_serialize	ft_http.c	/^char *ft_http_reply_serialize (FTHttpReply *reply,/
ft_http_reply_unserialize	ft_http.c	/^FTHttpReply *ft_http_reply_unserialize (char *data/
ft_http_request_free	ft_http.c	/^void ft_http_request_free (FTHttpRequest *req)$/
ft_http_request_new	ft_http.c	/^FTHttpRequest *ft_http_request_new (const char *me/
ft_http_request_send	ft_http.c	/^int ft_http_request_send (FTHttpRequest *req, TCPC/
ft_http_request_serialize	ft_http.c	/^char *ft_http_request_serialize (FTHttpRequest *re/
ft_http_request_unserialize	ft_http.c	/^FTHttpRequest *ft_http_request_unserialize (char */
ft_http_server_incoming	ft_http_server.c	/^void ft_http_server_incoming (int fd, input_id id,/
ft_netorg_add	ft_netorg.c	/^void ft_netorg_add (FTNode *node)$/
ft_netorg_change	ft_netorg.c	/^void ft_netorg_change (FTNode *node,$/
ft_netorg_clear	ft_netorg.c	/^void ft_netorg_clear (FTNetorgForeach func, void */
ft_netorg_dump	ft_netorg.c	/^void ft_netorg_dump (void)$/
ft_netorg_foreach	ft_netorg.c	/^int ft_netorg_foreach (ft_class_t klass, ft_state_/
ft_netorg_length	ft_netorg.c	/^int ft_netorg_length (ft_class_t klass, ft_state_t/
ft_netorg_lookup	ft_netorg.c	/^FTNode *ft_netorg_lookup (in_addr_t ip)$/
ft_netorg_remove	ft_netorg.c	/^void ft_netorg_remove (FTNode *node)$/
ft_node_add_class	ft_node.c	/^void ft_node_add_class (FTNode *node, ft_class_t k/
ft_node_cache_update	ft_node_cache.c	/^int ft_node_cache_update (void)$/
ft_node_class	ft_node.c	/^ft_class_t ft_node_class (FTNode *node, BOOL sessi/
ft_node_classstr	ft_node.c	/^char *ft_node_classstr (ft_class_t klass)$/
ft_node_classstr_full	ft_node.c	/^char *ft_node_classstr_full (ft_class_t klass)$/
ft_node_err	ft_node.c	/^void ft_node_err (FTNode *node, ft_error_t err, co/
ft_node_fmt	ft_node.c	/^char *ft_node_fmt (FTNode *node)$/
ft_node_free	ft_node.c	/^void ft_node_free (FTNode *node)$/
ft_node_fw	ft_node.c	/^BOOL ft_node_fw (FTNode *node)$/
ft_node_geterr	ft_node.c	/^char *ft_node_geterr (FTNode *node)$/
ft_node_new	ft_node.c	/^FTNode *ft_node_new (in_addr_t ip)$/
ft_node_queue	ft_node.c	/^void ft_node_queue (FTNode *node, FTPacket *packet/
ft_node_register	ft_node.c	/^FTNode *ft_node_register (in_addr_t ip)$/
ft_node_register_full	ft_node.c	/^FTNode *ft_node_register_full (in_addr_t ip,$/
ft_node_remove_class	ft_node.c	/^void ft_node_remove_class (FTNode *node, ft_class_/
ft_node_set_alias	ft_node.c	/^char *ft_node_set_alias (FTNode *node, const char /
ft_node_set_class	ft_node.c	/^void ft_node_set_class (FTNode *node, ft_class_t k/
ft_node_set_http_port	ft_node.c	/^void ft_node_set_http_port (FTNode *node, in_port_/
ft_node_set_port	ft_node.c	/^void ft_node_set_port (FTNode *node, in_port_t por/
ft_node_set_state	ft_node.c	/^void ft_node_set_state (FTNode *node, ft_state_t s/
ft_node_statestr	ft_node.c	/^char *ft_node_statestr (ft_state_t state)$/
ft_node_unregister	ft_node.c	/^void ft_node_unregister (FTNode *node)$/
ft_node_unregister_ip	ft_node.c	/^void ft_node_unregister_ip (in_addr_t ip)$/
ft_node_user	ft_node.c	/^char *ft_node_user (FTNode *node)$/
ft_node_user_host	ft_node.c	/^char *ft_node_user_host (in_addr_t host, const cha/
ft_packet_command	ft_packet.c	/^uint16_t ft_packet_command (FTPacket *packet)$/
ft_packet_dup	ft_packet.c	/^FTPacket *ft_packet_dup (FTPacket *packet)$/
ft_packet_flags	ft_packet.c	/^uint16_t ft_packet_flags (FTPacket *packet)$/
ft_packet_fmt	ft_packet.c	/^char *ft_packet_fmt (FTPacket *packet)$/
ft_packet_free	ft_packet.c	/^void ft_packet_free (FTPacket *packet)$/
ft_packet_get_array	ft_packet.c	/^void *ft_packet_get_array (FTPacket *packet, size_/
ft_packet_get_arraynul	ft_packet.c	/^void *ft_packet_get_arraynul (FTPacket *packet, si/
ft_packet_get_ip	ft_packet.c	/^in_addr_t ft_packet_get_ip (FTPacket *packet)$/
ft_packet_get_raw	ft_packet.c	/^unsigned char *ft_packet_get_raw (FTPacket *packet/
ft_packet_get_str	ft_packet.c	/^char *ft_packet_get_str (FTPacket *packet)$/
ft_packet_get_uint	ft_packet.c	/^uint32_t ft_packet_get_uint (FTPacket *packet, siz/
ft_packet_get_uint16	ft_packet.c	/^uint16_t ft_packet_get_uint16 (FTPacket *packet, i/
ft_packet_get_uint32	ft_packet.c	/^uint32_t ft_packet_get_uint32 (FTPacket *packet, i/
ft_packet_get_uint8	ft_packet.c	/^uint8_t ft_packet_get_uint8 (FTPacket *packet)$/
ft_packet_get_ustr	ft_packet.c	/^unsigned char *ft_packet_get_ustr (FTPacket *packe/
ft_packet_length	ft_packet.c	/^uint16_t ft_packet_length (FTPacket *packet)$/
ft_packet_new	ft_packet.c	/^FTPacket *ft_packet_new (uint16_t cmd, uint16_t fl/
ft_packet_overrun	ft_packet.c	/^size_t ft_packet_overrun (FTPacket *packet)$/
ft_packet_put_ip	ft_packet.c	/^BOOL ft_packet_put_ip (FTPacket *packet, in_addr_t/
ft_packet_put_raw	ft_packet.c	/^BOOL ft_packet_put_raw (FTPacket *packet, unsigned/
ft_packet_put_str	ft_packet.c	/^BOOL ft_packet_put_str (FTPacket *packet, char *st/
ft_packet_put_uarray	ft_packet.c	/^BOOL ft_packet_put_uarray (FTPacket *packet, int s/
ft_packet_put_uint	ft_packet.c	/^BOOL ft_packet_put_uint (FTPacket *packet, void *d/
ft_packet_put_uint16	ft_packet.c	/^BOOL ft_packet_put_uint16 (FTPacket *packet, uint1/
ft_packet_put_uint32	ft_packet.c	/^BOOL ft_packet_put_uint32 (FTPacket *packet, uint3/
ft_packet_put_uint8	ft_packet.c	/^BOOL ft_packet_put_uint8 (FTPacket *packet, uint8_/
ft_packet_put_ustr	ft_packet.c	/^BOOL ft_packet_put_ustr (FTPacket *packet, unsigne/
ft_packet_remaining	ft_packet.c	/^size_t ft_packet_remaining (FTPacket *packet)$/
ft_packet_send	ft_packet.c	/^int ft_packet_send (TCPC *c, FTPacket *packet)$/
ft_packet_sendto	ft_packet.c	/^int ft_packet_sendto (in_addr_t to, FTPacket *pack/
ft_packet_sendva	ft_packet.c	/^int ft_packet_sendva (TCPC *c, uint16_t cmd, uint1/
ft_packet_serialize	ft_packet.c	/^unsigned char *ft_packet_serialize (FTPacket *pack/
ft_packet_set_command	ft_packet.c	/^void ft_packet_set_command (FTPacket *packet, uint/
ft_packet_set_flags	ft_packet.c	/^void ft_packet_set_flags (FTPacket *packet, uint16/
ft_packet_set_length	ft_packet.c	/^void ft_packet_set_length (FTPacket *packet, uint1/
ft_packet_unserialize	ft_packet.c	/^FTPacket *ft_packet_unserialize (unsigned char *da/
ft_protocol_handle	ft_protocol.c	/^BOOL ft_protocol_handle (TCPC *c, FTPacket *packet/
ft_search	ft_search_exec.c	/^int ft_search (int nmax, FTSearchResultFn resultfn/
ft_search_cmp	ft_search_exec.c	/^BOOL ft_search_cmp (Share *file, ft_search_flags_t/
ft_search_db_close	ft_search_db.c	/^BOOL ft_search_db_close (FTNode *node, BOOL rm)$/
ft_search_db_destroy	ft_search_db.c	/^void ft_search_db_destroy (void)$/
ft_search_db_init	ft_search_db.c	/^BOOL ft_search_db_init (const char *envpath, unsig/
ft_search_db_insert	ft_search_db.c	/^BOOL ft_search_db_insert (FTNode *node, Share *sha/
ft_search_db_isopen	ft_search_db.c	/^BOOL ft_search_db_isopen (FTNode *node)$/
ft_search_db_lookup_md5	ft_search_db.c	/^Share *ft_search_db_lookup_md5 (FTNode *node, unsi/
ft_search_db_md5	ft_search_db.c	/^int ft_search_db_md5 (Array **a, unsigned char *md/
ft_search_db_open	ft_search_db.c	/^BOOL ft_search_db_open (FTNode *node)$/
ft_search_db_remove	ft_search_db.c	/^BOOL ft_search_db_remove (FTNode *node, unsigned c/
ft_search_db_remove_host	ft_search_db.c	/^BOOL ft_search_db_remove_host (FTNode *node)$/
ft_search_db_sync	ft_search_db.c	/^BOOL ft_search_db_sync (FTNode *node)$/
ft_search_db_tokens	ft_search_db.c	/^int ft_search_db_tokens (Array **a, char *realm,$/
ft_search_disable	ft_search_obj.c	/^void ft_search_disable (FTSearch *srch)$/
ft_search_find	ft_search_obj.c	/^FTSearch *ft_search_find (ft_guid_t *guid)$/
ft_search_find_by_event	ft_search_obj.c	/^FTSearch *ft_search_find_by_event (IFEvent *event)/
ft_search_finish	ft_search_obj.c	/^void ft_search_finish (FTSearch *srch)$/
ft_search_fwd_find	ft_search_obj.c	/^FTSearchFwd *ft_search_fwd_find (ft_guid_t *guid, /
ft_search_fwd_finish	ft_search_obj.c	/^unsigned int ft_search_fwd_finish (FTSearchFwd *sf/
ft_search_fwd_new	ft_search_obj.c	/^FTSearchFwd *ft_search_fwd_new (ft_guid_t *guid, i/
ft_search_new	ft_search_obj.c	/^FTSearch *ft_search_new (IFEvent *event, ft_search/
ft_search_rcvdfrom	ft_search_obj.c	/^unsigned int ft_search_rcvdfrom (FTSearch *srch, i/
ft_search_reply	ft_search.c	/^BOOL ft_search_reply (FTSearch *srch,$/
ft_search_reply_self	ft_search.c	/^BOOL ft_search_reply_self (FTSearch *srch, ft_node/
ft_search_sentto	ft_search_obj.c	/^unsigned int ft_search_sentto (FTSearch *srch, in_/
ft_search_tokenize	ft_search_exec.c	/^uint32_t *ft_search_tokenize (const char *string)$/
ft_search_tokenizef	ft_search_exec.c	/^uint32_t *ft_search_tokenizef (Share *file)$/
ft_session_add_purpose	ft_session.c	/^void ft_session_add_purpose (FTNode *node, ft_purp/
ft_session_connect	ft_session.c	/^int ft_session_connect (FTNode *node, ft_purpose_t/
ft_session_drop_purpose	ft_session.c	/^BOOL ft_session_drop_purpose (FTNode *node, ft_pur/
ft_session_incoming	ft_session.c	/^void ft_session_incoming (int fd, input_id id, TCP/
ft_session_queue	ft_session.c	/^int ft_session_queue (TCPC *c, FTPacket *packet)$/
ft_session_remove_purpose	ft_session.c	/^ft_purpose_t ft_session_remove_purpose (FTNode *no/
ft_session_set_purpose	ft_session.c	/^void ft_session_set_purpose (FTNode *node, ft_purp/
ft_session_stage	ft_session.c	/^void ft_session_stage (TCPC *c, unsigned char curr/
ft_session_start	ft_session.c	/^BOOL ft_session_start (TCPC *c, int incoming)$/
ft_session_stop	ft_session.c	/^void ft_session_stop (TCPC *c)$/
ft_session_uptime	ft_session.c	/^time_t ft_session_uptime (TCPC *c)$/
ft_share_complete	ft_share_file.c	/^BOOL ft_share_complete (Share *file)$/
ft_share_free	ft_share_file.c	/^void ft_share_free (Share *file)$/
ft_share_free_data	ft_share_file.c	/^void ft_share_free_data (Share *file, FTShare *sha/
ft_share_local_flush	ft_share.c	/^void ft_share_local_flush ()$/
ft_share_local_submit	ft_share.c	/^void ft_share_local_submit (TCPC *c)$/
ft_share_new	ft_share_file.c	/^Share *ft_share_new (FTNode *node, off_t size,$/
ft_share_new_data	ft_share_file.c	/^FTShare *ft_share_new_data (Share *file, FTNode *n/
ft_share_ref	ft_share_file.c	/^unsigned int ft_share_ref (Share *file)$/
ft_share_unref	ft_share_file.c	/^unsigned int ft_share_unref (Share *file)$/
ft_stats_collect	ft_stats.c	/^BOOL ft_stats_collect (ft_stats_t *collect)$/
ft_stats_insert	ft_stats.c	/^void ft_stats_insert (in_addr_t depend, in_addr_t /
ft_stats_remove	ft_stats.c	/^void ft_stats_remove (in_addr_t depend, in_addr_t /
ft_stats_remove_dep	ft_stats.c	/^void ft_stats_remove_dep (in_addr_t depend)$/
ft_stream_clear	ft_stream.c	/^int ft_stream_clear (TCPC *c, ft_stream_dir_t dir)/
ft_stream_clear_all	ft_stream.c	/^int ft_stream_clear_all (TCPC *c)$/
ft_stream_finish	ft_stream.c	/^void ft_stream_finish (FTStream *stream)$/
ft_stream_free	ft_stream.c	/^void ft_stream_free (FTStream *stream)$/
ft_stream_get	ft_stream.c	/^FTStream *ft_stream_get (TCPC *c, ft_stream_dir_t /
ft_stream_recv	ft_stream.c	/^int ft_stream_recv (FTStream *stream, FTPacket *st/
ft_stream_send	ft_stream.c	/^int ft_stream_send (FTStream *stream, FTPacket *pa/
ft_transfer_free	ft_transfer.c	/^static void ft_transfer_free (FTTransfer *xfer)$/
ft_transfer_get_chunk	ft_transfer.c	/^Chunk *ft_transfer_get_chunk (FTTransfer *xfer)$/
ft_transfer_get_fhandle	ft_transfer.c	/^FILE *ft_transfer_get_fhandle (FTTransfer *xfer)$/
ft_transfer_get_source	ft_transfer.c	/^Source *ft_transfer_get_source (FTTransfer *xfer)$/
ft_transfer_get_transfer	ft_transfer.c	/^Transfer *ft_transfer_get_transfer (FTTransfer *xf/
ft_transfer_new	ft_transfer.c	/^FTTransfer *ft_transfer_new (TransferType dir,$/
ft_transfer_set_chunk	ft_transfer.c	/^void ft_transfer_set_chunk (FTTransfer *xfer, Chun/
ft_transfer_set_fhandle	ft_transfer.c	/^void ft_transfer_set_fhandle (FTTransfer *xfer, FI/
ft_transfer_set_source	ft_transfer.c	/^void ft_transfer_set_source (FTTransfer *xfer, Sou/
ft_transfer_set_transfer	ft_transfer.c	/^void ft_transfer_set_transfer (FTTransfer *xfer, T/
ft_transfer_status	ft_transfer.c	/^void ft_transfer_status (FTTransfer *xfer, SourceS/
ft_transfer_stop	ft_transfer.c	/^void ft_transfer_stop (FTTransfer *xfer)$/
ft_transfer_stop_status	ft_transfer.c	/^void ft_transfer_stop_status (FTTransfer *xfer, So/
ft_upload_avail	ft_transfer.c	/^unsigned long ft_upload_avail (void)$/
ft_version	ft_version.c	/^ft_version_t ft_version (uint8_t major, uint8_t mi/
ft_version_eq	ft_version.c	/^BOOL ft_version_eq (ft_version_t a, ft_version_t b/
ft_version_gt	ft_version.c	/^BOOL ft_version_gt (ft_version_t a, ft_version_t b/
ft_version_local	ft_version.c	/^ft_version_t ft_version_local ()$/
ft_version_lt	ft_version.c	/^BOOL ft_version_lt (ft_version_t a, ft_version_t b/
ft_version_parse	ft_version.c	/^void ft_version_parse (ft_version_t version,$/
fwd_free	ft_search_obj.c	/^static void fwd_free (FTSearchFwd *sfwd)$/
fwd_insert	ft_search_obj.c	/^static void fwd_insert (FTSearchFwd *sfwd, ft_guid/
fwd_remove	ft_search_obj.c	/^static unsigned int fwd_remove (FTSearchFwd *sfwd)/
fwd_tick_by_addr	ft_search_obj.c	/^static int fwd_tick_by_addr (ds_data_t *key, ds_da/
fwd_tick_by_guid	ft_search_obj.c	/^static int fwd_tick_by_guid (ds_data_t *key, ds_da/
fwd_timeout	ft_search_obj.c	/^static int fwd_timeout (void *udata)$/
gather_stats	ft_stats.c	/^static BOOL gather_stats (FTNode *node, ft_stats_t/
get_client_request	ft_http_server.c	/^void get_client_request (int fd, input_id id, TCPC/
get_complete_connect	ft_http_client.c	/^void get_complete_connect (int fd, input_id id, FT/
get_conn_list	ft_netorg.c	/^static struct conn_list *get_conn_list (ft_state_t/
get_connection	ft_transfer.c	/^static TCPC *get_connection (Transfer *t, Chunk *c/
get_cost	ft_conn.c	/^static int get_cost (FTNode *node, time_t current)/
get_cursor	ft_search_db.c	/^static DBC *get_cursor (DB *dbp, uint32_t token)$/
get_direction	ft_stream.c	/^static Dataset **get_direction (TCPC *c, ft_stream/
get_direction_str	ft_stream.c	/^static char *get_direction_str (FTStream *stream)$/
get_fd_limit	ft_conn.c	/^static int get_fd_limit (void)$/
get_file_records	ft_search_db.c	/^static int get_file_records (FTNode *node, DB *hos/
get_ft_transfer	ft_transfer.c	/^static FTTransfer *get_ft_transfer (Chunk *c)$/
get_gift_transfer	ft_http_server.c	/^static Transfer *get_gift_transfer (Chunk **chunk,/
get_handler	ft_protocol.c	/^static HandlerFn get_handler (uint16_t cmd)$/
get_max_active	ft_conn.c	/^static int get_max_active (void)$/
get_new_parent	ft_share.c	/^static void get_new_parent ()$/
get_nodes	ft_conn.c	/^static BOOL get_nodes (FTNode *node, void *udata)$/
get_openft_transfer	ft_http_server.c	/^static FTTransfer *get_openft_transfer (Transfer */
get_read_file	ft_http_client.c	/^static void get_read_file (int fd, input_id id, FT/
get_request_range	ft_http_server.c	/^static BOOL get_request_range (FTHttpRequest *req,/
get_server_reply	ft_http_client.c	/^static void get_server_reply (int fd, input_id id,/
get_start_cursor	ft_search_db.c	/^static struct cursor_stream *get_start_cursor (Lis/
get_tokens_len	ft_search_db.c	/^static int get_tokens_len (uint32_t *tokens)$/
handle_class_change	ft_node.c	/^static void handle_class_change (FTNode *node,$/
handle_class_gain	ft_node.c	/^static void handle_class_gain (FTNode *node, ft_cl/
handle_class_loss	ft_node.c	/^static void handle_class_loss (FTNode *node, ft_cl/
handle_command	ft_protocol.c	/^static BOOL handle_command (TCPC *c, FTPacket *pac/
handle_packet	ft_session.c	/^static void handle_packet (TCPC *c, unsigned char /
handle_server_reply	ft_http_client.c	/^static void handle_server_reply (FTTransfer *xfer,/
handle_state_change	ft_node.c	/^static void handle_state_change (FTNode *node, ft_/
handle_stream	ft_protocol.c	/^static BOOL handle_stream (TCPC *c, FTPacket *pack/
handle_stream_pkt	ft_protocol.c	/^static void handle_stream_pkt (FTStream *stream, F/
handle_test_suite	ft_openft.c	/^static BOOL handle_test_suite (Protocol *p)$/
handshake_timeout	ft_session.c	/^static int handshake_timeout (TCPC *c)$/
head_get_and_write	ft_http_server.c	/^static Share *head_get_and_write (TCPC *c, FTHttpR/
hex_char_to_bin	md5.c	/^static unsigned char hex_char_to_bin (char x)$/
hex_to_bin	md5.c	/^static int hex_to_bin (char *hex, unsigned char *b/
http_bind	ft_openft.c	/^static TCPC *http_bind (in_port_t port)$/
http_check_sentinel	ft_http.c	/^BOOL http_check_sentinel (char *data, size_t len)$/
http_code_string	ft_http.c	/^char *http_code_string (int code)$/
http_parse_keylist	ft_http.c	/^static unsigned int http_parse_keylist (Dataset **/
http_url_decode	ft_http.c	/^char *http_url_decode (const char *encoded)$/
http_url_encode	ft_http.c	/^char *http_url_encode (const char *unencoded)$/
import_cache	ft_node_cache.c	/^static int import_cache (FILE *f, char *path)$/
import_meta	ft_search_db.c	/^static void import_meta (Share *share, char *meta,/
incoming_complete	ft_session.c	/^static void incoming_complete (int fd, input_id id/
init_handlers	ft_protocol.c	/^static void init_handlers (void)$/
init_openft_obj	ft_openft.c	/^static BOOL init_openft_obj (Protocol *p, struct o/
init_source	ft_transfer.c	/^static BOOL init_source (struct ft_source *src)$/
insert_stream	ft_stream.c	/^static int insert_stream (TCPC *c, ft_stream_dir_t/
is_stale_db	ft_search_db.c	/^static BOOL is_stale_db (DBT *data)$/
is_valid_alias	ft_node.c	/^static BOOL is_valid_alias (const char *alias, siz/
iter_state	ft_netorg.c	/^static int iter_state (ft_class_t klass, ft_state_/
keep_alive	ft_conn.c	/^static int keep_alive (void)$/
key_as_md5	ft_search_exec.c	/^static int key_as_md5 (ds_data_t *key, ds_data_t */
load_queries	ft_search_db.c	/^static int load_queries (const char *filename)$/
load_test_data	ft_search_db.c	/^static int load_test_data (const char *dbfile)$/
local_flush	ft_share.c	/^static int local_flush (FTNode *node, void *udata)/
locate_future_parent	ft_share.c	/^static int locate_future_parent (FTNode *node, FTN/
locate_to	ft_packet.c	/^static int locate_to (FTNode *node, in_addr_t *ip)/
log_class_change	ft_node.c	/^static void log_class_change (FTNode *node, ft_cla/
look_for	ft_search_db.c	/^static BOOL look_for (struct cursor_stream *s, DBT/
lookup_ret	ft_search_db.c	/^static int lookup_ret (DBT *dbt, void **args)$/
lookup_stream	ft_stream.c	/^static FTStream *lookup_stream (TCPC *c, ft_stream/
make_conn	ft_conn.c	/^static BOOL make_conn (FTNode *node, void *udata)$/
make_conn_for_new_parents	ft_conn.c	/^static BOOL make_conn_for_new_parents (FTNode *nod/
make_conn_get_nodes	ft_conn.c	/^static BOOL make_conn_get_nodes (FTNode *node, voi/
make_conn_purpose	ft_conn.c	/^static BOOL make_conn_purpose (FTNode *node, ft_pu/
match_et	ft_search_db.c	/^static int match_et (List **results, List **et, in/
match_qt	ft_search_db.c	/^static int match_qt (List **results, List **qt, in/
math_dist	ft_conn.c	/^static int math_dist (long value, int nargs, ...)$/
md5_bin	md5.c	/^unsigned char *md5_bin (char *md5_ascii)$/
md5_digest	md5.c	/^unsigned char *md5_digest (const char *file, off_t/
md5_dup	md5.c	/^unsigned char *md5_dup (unsigned char *md5)$/
md5_fmt	md5.c	/^char *md5_fmt (unsigned char *md5)$/
md5_hash_file	md5.c	/^static unsigned char *md5_hash_file (const char *f/
md5_hash_file_mmap	md5.c	/^static unsigned char *md5_hash_file_mmap(char *fil/
method_get	ft_http_server.c	/^static BOOL method_get (TCPC *c, FTHttpRequest *re/
method_head	ft_http_server.c	/^static BOOL method_head (TCPC *c, FTHttpRequest *r/
method_push	ft_http_server.c	/^static BOOL method_push (TCPC *c, FTHttpRequest *r/
method_unsupported	ft_http_server.c	/^static BOOL method_unsupported (TCPC *c, FTHttpReq/
netorg_valid	ft_netorg.c	/^static BOOL netorg_valid (FTNode *node)$/
new_parents	ft_conn.c	/^static BOOL new_parents (FTNode *node, void *udata/
new_source	ft_transfer.c	/^static struct ft_source *new_source (void)$/
node_set_indirect	ft_node.c	/^static void node_set_indirect (FTNode *node)$/
open	md5.c	/^# define open(p1, p2) _open(p1, p2)$/
open_db	ft_search_db.c	/^static int open_db (DB *dbp, char *path, char *dat/
open_db_sharedata	ft_search_db.c	/^static DB *open_db_sharedata (void)$/
open_db_shareidx	ft_search_db.c	/^static DB *open_db_shareidx (FTSearchDB *sdb)$/
open_share	ft_http_server.c	/^static FILE *open_share (Share *share)$/
openft_bind	ft_openft.c	/^static TCPC *openft_bind (in_port_t port)$/
openft_browse	ft_search.c	/^int openft_browse (Protocol *p, IFEvent *event, ch/
openft_chunk_resume	ft_transfer.c	/^BOOL openft_chunk_resume (Protocol *p, Transfer *t/
openft_chunk_suspend	ft_transfer.c	/^BOOL openft_chunk_suspend (Protocol *p, Transfer */
openft_destroy	ft_openft.c	/^static void openft_destroy (Protocol *p)$/
openft_download_start	ft_transfer.c	/^BOOL openft_download_start (Protocol *p, Transfer /
openft_download_stop	ft_transfer.c	/^void openft_download_stop (Protocol *p, Transfer */
openft_locate	ft_search.c	/^int openft_locate (Protocol *p, IFEvent *event, ch/
openft_md5	ft_openft.c	/^static unsigned char *openft_md5 (const char *path/
openft_search	ft_search.c	/^int openft_search (Protocol *p, IFEvent *event, ch/
openft_search_cancel	ft_search.c	/^void openft_search_cancel (Protocol *p, IFEvent *e/
openft_share_add	ft_share.c	/^BOOL openft_share_add (Protocol *p, Share *share, /
openft_share_free	ft_share.c	/^void openft_share_free (Protocol *p, Share *share,/
openft_share_hide	ft_share.c	/^void openft_share_hide (Protocol *p)$/
openft_share_new	ft_share.c	/^void *openft_share_new (Protocol *p, Share *share)/
openft_share_remove	ft_share.c	/^BOOL openft_share_remove (Protocol *p, Share *shar/
openft_share_show	ft_share.c	/^void openft_share_show (Protocol *p)$/
openft_share_sync	ft_share.c	/^void openft_share_sync (Protocol *p, int start)$/
openft_source_add	ft_transfer.c	/^BOOL openft_source_add (Protocol *p, Transfer *t, /
openft_source_cmp	ft_transfer.c	/^int openft_source_cmp (Protocol *p, Source *a, Sou/
openft_source_remove	ft_transfer.c	/^void openft_source_remove (Protocol *p, Transfer */
openft_start	ft_openft.c	/^static BOOL openft_start (Protocol *p)$/
openft_stats	ft_stats.c	/^int openft_stats (Protocol *p,$/
openft_upload_avail	ft_transfer.c	/^void openft_upload_avail (Protocol *p, unsigned lo/
openft_upload_stop	ft_transfer.c	/^void openft_upload_stop (Protocol *p, Transfer *t,/
openft_user_cmp	ft_transfer.c	/^int openft_user_cmp (Protocol *p, const char *a, c/
outgoing_complete	ft_session.c	/^static void outgoing_complete (int fd, input_id id/
output_flush	ft_stream.c	/^static void output_flush (FTStream *stream)$/
packet_append	ft_packet.c	/^static BOOL packet_append (FTPacket *packet, void /
packet_resize	ft_packet.c	/^static int packet_resize (FTPacket *packet, size_t/
parse_source	ft_transfer.c	/^static BOOL parse_source (struct ft_source *src, c/
prep_upload	ft_http_server.c	/^static FTTransfer *prep_upload (TCPC *c, FTHttpReq/
push_access	ft_transfer.c	/^FTTransfer *push_access (in_addr_t host, const cha/
push_add	ft_transfer.c	/^static void push_add (struct ft_source *src, FTTra/
push_complete_connect	ft_http_client.c	/^static void push_complete_connect (int fd, input_i/
push_find_xfer	ft_transfer.c	/^static BOOL push_find_xfer (ds_data_t *key, ds_dat/
push_remove	ft_transfer.c	/^static void push_remove (FTTransfer *xfer)$/
push_send_request	ft_transfer.c	/^static BOOL push_send_request (struct ft_source *s/
put_uint32_array	ft_packet.c	/^void put_uint32_array (FTPacket *packet, uint32_t /
read	md5.c	/^# define read(p1, p2, p3) _read(p1, p2, p3)$/
read_cache	ft_node_cache.c	/^static int read_cache ()$/
rem_conn_list	ft_netorg.c	/^static void rem_conn_list (ft_state_t state, FTNod/
remove_db	ft_search_db.c	/^static int remove_db (DB_ENV *dbenv, char *path, c/
remove_download	ft_transfer.c	/^static void remove_download (FTTransfer *xfer)$/
remove_dups	ft_search_exec.c	/^static int remove_dups (uint32_t *tokens, int num)/
remove_stream	ft_stream.c	/^static int remove_stream (FTStream *stream)$/
result_reply	ft_search.c	/^static BOOL result_reply (Share *share, FTSearch */
rewrite_cache	ft_node_cache.c	/^static int rewrite_cache (char *path)$/
run_insert	ft_search_db.c	/^static double run_insert (void)$/
run_remove	ft_search_db.c	/^static double run_remove (void)$/
run_search	ft_search_db.c	/^static double run_search (void)$/
search_begin	ft_search_obj.c	/^static int search_begin (FTSearch *srch)$/
search_by_event	ft_search_obj.c	/^static int search_by_event (ds_data_t *key, ds_dat/
search_children	ft_search.c	/^static void search_children (FTSearch *search)$/
search_db_free	ft_search_db.c	/^static void search_db_free (FTSearchDB *sdb)$/
search_db_new	ft_search_db.c	/^static FTSearchDB *search_db_new (FTNode *node)$/
search_free	ft_search_obj.c	/^static void search_free (FTSearch *srch)$/
search_local	ft_search_exec.c	/^static void search_local (SearchData *sdata)$/
search_parents	ft_search.c	/^static int search_parents (FTSearch *search)$/
search_remote	ft_search_exec.c	/^static void search_remote (SearchData *sdata)$/
search_reply	ft_search.c	/^static BOOL search_reply (FTSearch *srch, struct s/
search_reply_logic	ft_search.c	/^static BOOL search_reply_logic (FTSearch *srch, st/
search_reply_term	ft_search.c	/^static BOOL search_reply_term (FTSearch *srch, str/
search_timeout	ft_search_obj.c	/^static int search_timeout (FTSearch *srch)$/
send_file	ft_http_server.c	/^static void send_file (int fd, input_id id, FTTran/
send_heartbeat	ft_conn.c	/^static int send_heartbeat (FTNode *node, Dataset */
send_packet	ft_share.c	/^static void send_packet (TCPC *c, FTStream *stream/
send_search	ft_search.c	/^static int send_search (FTNode *node, FTSearch *se/
serialize_fld	ft_search_db.c	/^static u_int16_t serialize_fld (struct sharedata_d/
serialize_record	ft_search_db.c	/^static int serialize_record (DBT *data, Hash *hash/
session_auth_packet	ft_session.c	/^static BOOL session_auth_packet (TCPC *c, FTPacket/
session_destroy_data	ft_session.c	/^static void session_destroy_data (FTSession *s)$/
session_flush_queue	ft_session.c	/^static void session_flush_queue (TCPC *c, int psen/
session_handle	ft_session.c	/^static void session_handle (int fd, input_id id, T/
session_reset_data	ft_session.c	/^static void session_reset_data (FTSession *s)$/
session_stop	ft_session.c	/^static void session_stop (TCPC *c)$/
set_ft_transfer	ft_transfer.c	/^static void set_ft_transfer (Chunk *c, FTTransfer /
set_keep	ft_conn.c	/^static int set_keep (FTNode *node, void *udata)$/
set_params	ft_search_obj.c	/^static void set_params (ft_search_parms_t *dst, ft/
setup_functbl	ft_openft.c	/^static void setup_functbl (Protocol *p)$/
share_add	ft_share.c	/^static BOOL share_add (FTNode *node, Share *share)/
share_remove	ft_share.c	/^static BOOL share_remove (FTNode *node, Share *sha/
share_sync	ft_share.c	/^static BOOL share_sync (FTNode *node, int *begin)$/
share_sync_begin	ft_share.c	/^static BOOL share_sync_begin (FTNode *node)$/
share_sync_end	ft_share.c	/^static BOOL share_sync_end (FTNode *node)$/
sharedata_meta	ft_search_db.c	/^static void sharedata_meta (ds_data_t *key, ds_dat/
stage_1	ft_session.c	/^static void stage_1 (TCPC *c)$/
stage_2	ft_session.c	/^static void stage_2 (TCPC *c)$/
stage_3	ft_session.c	/^static void stage_3 (TCPC *c)$/
stage_4	ft_session.c	/^static void stage_4 (TCPC *c)$/
start_connection	ft_conn.c	/^static int start_connection (FTNode *node, int *we/
stats_collect	ft_stats.c	/^static void stats_collect (ds_data_t *key, ds_data/
stats_collect_by_user	ft_stats.c	/^static void stats_collect_by_user (ds_data_t *key,/
stream_deflate	ft_stream.c	/^static void stream_deflate (FTStream *stream, unsi/
stream_free	ft_stream.c	/^static void stream_free (FTStream *stream)$/
stream_id	ft_stream.c	/^static uint32_t stream_id (TCPC *c)$/
stream_init	ft_stream.c	/^static int stream_init (FTStream *stream, ft_strea/
stream_new	ft_stream.c	/^static FTStream *stream_new (TCPC *c, ft_stream_di/
stream_write	ft_stream.c	/^static void stream_write (FTStream *stream, unsign/
submit_addshare	ft_share.c	/^static BOOL submit_addshare (TCPC *c, FTStream *st/
submit_avail	ft_transfer.c	/^static BOOL submit_avail (FTNode *node, unsigned l/
submit_digest_child	ft_node.c	/^static BOOL submit_digest_child (FTNode *child, FT/
submit_remshare	ft_share.c	/^static BOOL submit_remshare (TCPC *c, FTStream *st/
submit_to_index	ft_node.c	/^static int submit_to_index (FTNode *node, ft_nodei/
submit_write	ft_share.c	/^static void submit_write (ds_data_t *key, ds_data_/
test_benchmarks	ft_search_db.c	/^static void test_benchmarks (void)$/
test_suite_search_db	ft_search_db.c	/^BOOL test_suite_search_db (Protocol *p)$/
tidy_node	ft_session.c	/^static void tidy_node (FTNode *node)$/
tidy_node_search	ft_session.c	/^static void tidy_node_search (FTNode *node)$/
tidy_push	ft_http_client.c	/^static void tidy_push (TCPC *http)$/
token_add_result	ft_search_db.c	/^static void token_add_result (List **results, DBT /
token_add_str	ft_search_exec.c	/^static void token_add_str (uint32_t **tokens, int /
token_cleanup	ft_search_db.c	/^static void token_cleanup (List *matches, List *cu/
token_gather_cursors	ft_search_db.c	/^static List *token_gather_cursors (DB *dbp, uint32/
token_lookup_match	ft_search_db.c	/^static List *token_lookup_match (List *qt, List *e/
token_lookup_ret	ft_search_db.c	/^static int token_lookup_ret (Array **a, List *curs/
token_remove_punct	ft_search_exec.c	/^static void token_remove_punct (char *token)$/
tokenize_str	ft_search_exec.c	/^static uint32_t tokenize_str (char *str)$/
tokens_resize	ft_search_exec.c	/^static int tokens_resize (uint32_t **tokens, int */
unserialize_record	ft_search_db.c	/^static Share *unserialize_record (FTSearchDB *sdb,/
update_nodes_len	ft_netorg.c	/^static void update_nodes_len (FTNode *node,$/
write_node	ft_http_server.c	/^static BOOL write_node (FTNode *node, FILE *f)$/
write_node_cache	ft_node_cache.c	/^static int write_node_cache (FTNode *node, FILE *f/
write_node_index	ft_node_cache.c	/^static BOOL write_node_index (FTNode *node, FILE */
write_node_search	ft_node_cache.c	/^static BOOL write_node_search (FTNode *node, FILE /
write_node_user	ft_node_cache.c	/^static BOOL write_node_user (FTNode *node, FILE *f/
zlib_deflate	ft_stream.c	/^static void zlib_deflate (FTStream *stream, unsign/
zlib_recv	ft_stream.c	/^static int zlib_recv (z_stream *s, unsigned char */
