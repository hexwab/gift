                        giFT/OpenFT's Installation Guide

  Author: Eelco Lempsink

   Abstract

   A document to guide you through the process of installing (and starting to
   use) giFT and OpenFT.

     ----------------------------------------------------------------------

   Table of Contents

   1. Introduction

   2. Getting giFT/OpenFT

                2.1. Updating

   3. Building giFT/OpenFT

                3.1. Third party software

                             3.1.1. Zlib

                             3.1.2. Perl

                             3.1.3. LibDB

                             3.1.4. LibID3

                             3.1.5. LibVorbis

                             3.1.6. ImageMagick

                3.2. Running autogen.sh

                3.3. Making and installing

   4. Configuring giFT/OpenFT

                4.1. giFT-setup

                4.2. Configuring by hand

   5. Running and using giFT/OpenFT

                5.1. Running giFT

                5.2. Getting a client

   6. Miscellaneous

                6.1. Log files

                6.2. The nodes file

                6.3. More information

1. Introduction

   A small notice to begin with. Lots (and I mean lots) of people are coming
   to our channel and ask about things covered in this document. Please note
   that every line, every word and every letter in this document actually
   matters. If you haven't read these instructions completely, and start
   asking dumb things, you will be shot.

   These instructions are for installing giFT on a *nix platform.
   Instructions for Windows, and some additional instructions for MacOS X are
   in the doc/ directory.

2. Getting giFT/OpenFT

   Because giFT/OpenFT has not yet been released, you must retrieve the
   sources via CVS to use the program. If you don't have cvs installed, do it
   now, it's useful.

   Go to the directory you want to download the sources to and type: (the $
   is used to indicate this is a shell command):

     $ cvs -d:pserver:anonymous@cvs.gift.sf.net:/cvsroot/gift login   

   Just press enter when prompted for a password. You'll have to do this only
   once, after that cvs will read your password information from ~/.cvspass.
   Now type:

     $ cvs -z3 -d:pserver:anonymous@cvs.gift.sf.net:/cvsroot/gift co giFT 

   This will create a directory giFT/ and download everything you need (and
   more) into it.

  2.1. Updating

   To update giFT/OpenFT to include the latest updates from CVS, type:

     $ cd giFT                                                        
     $ cvs update -Pd                                                 

   It is important that you update regularly (every day if possible), because
   giFT/OpenFT is still in development, and being updated frequently. Most of
   the time updates to OpenFT are not backwards compatible, which means
   outdated nodes will be locked out from the network of updated nodes.

3. Building giFT/OpenFT

   First things first, make sure you have recent versions of autoconf (2.5x),
   automake (1.4) and libtool (1.4.x). You will get fatal errors if you're
   using other versions. Remember to run ./autogen.sh again after upgrading
   one or more of those programs.

   For every luser grepping through the docs instead of reading them, if you
   get a 'configure.in: No such file or directory' error message, it means
   your autotools are not up to date.

  3.1. Third party software

   There are a few third party libraries which giFT/OpenFT can use. A few are
   more or less mandatory (but giFT/OpenFT doesn't depend on them), all are
   recommend.

    3.1.1. Zlib

   Next, you need to enable zlib compression, so your shares list will be
   compressed before sending it to your PARENT nodes. This will reduce the
   amount of data sent over the OpenFT network significantly. To enable
   compression you must have zlib 1.1.4 installed. If you are using Debian,
   type:

     $ su -c 'apt-get -y install zlib1g zlib1g-dev'                   

   If you're not using Debian, and have wget installed on your system, use
   the provided zlib.mak file to install zlib:

     $ cd giFT                                                        
     $ make -f zlib.mak                                               
     $ su -c 'make -f zlib.mak install'                               

   zlib.mak installs zlib in /usr/local Otherwise, you will need to install
   zlib 1.1.4 manually. See zlib.mak for the required steps.

    3.1.2. Perl

   Perl support can be used to 'hook' Perl subroutines in giFT. On startup
   giFT will try to load ~/.giFT/gift.pl. An example gift.pl file is
   available in the data/ directory. Note that Perl support is disabled by
   default, you'll have to run autogen.sh with the --enable-perl switch to
   enable it.

   On Debian install libperl-dev.

  todo

   add information for other distributions

    3.1.3. LibDB

   For efficient data storage and access OpenFT uses libdb. If you want to
   function as a SEARCH node (a node that handles searches for other nodes)
   you'll need libdb. A version >= 3.2.9 is required.

   On Debian install libdb3-dev or libdb4-dev will get you the necessary
   files. RPM based distribution need the libdb3.3 and libdb3.3-devel or the
   libdb4.0 and libdb4.0-devel packages. The source if available at
   SleepyCat.

    3.1.4. LibID3

   To extract meta data from .mp3 files, giFT uses libid3. On Debian install
   libid3-dev. RPM-based distributions can use libid3lib13-devel. Please note
   that support for version 3.8.0 is currently broken. Fix it or use an older
   version.

    3.1.5. LibVorbis

   Meta data from OGG files is extracted using libvorbis. On Debian install
   libvorbis-dev. RPM-based distributions can use libvorbis-devel.

    3.1.6. ImageMagick

   For image meta data ImageMagick is used. On Debian install libmagick-dev.
   RPM-based distributions can use libMagick5-devel.

  3.2. Running autogen.sh

   This step is pretty straight forward. Just do

     $ ./autogen.sh                                                   

   At the end of the run you'll be presented a small list with information
   about the extensions and meta data tools that will be used to build
   giFT/OpenFT. Check that list to see if all the stuff you wishes to include
   is listed. If not, install it or check if you've installed the right
   version. Don't forget to remove config.cache before rerunning
   ./autogen.sh.

   If you need more help, try looking at the information ./autogen.sh --help
   gives you. If you get errors related to configure.in, read the first
   paragraph of this (main)section again.

  3.3. Making and installing

   This is even easier then the previous action. Type

     $ make                                                           

   And press enter. If you get fatal errors during make, read the
   instructions about configuring again, and check your system setup before
   complaining to us.

   If all went well, you can now install giFT/OpenFT with

     $ su -c 'make install'                                           

   giFT/OpenFT is not plug-n-play compatible, so read on to the next section
   before trying to use it.

4. Configuring giFT/OpenFT

  4.1. giFT-setup

   After installing giFT/OpenFT you'll need to set it up. Do this by running

     $ giFT-setup                                                     

   Note that giFT/OpenFT will not work with the default setup, so make sure
   you read and understand all questions before answering or just pressing
   enter. To reconfigure giFT/OpenFT later, just run giFT-setup again.

  4.2. Configuring by hand

   You may choose to configure giFT/OpenFT by hand (if you don't want to run
   through all options again, for example. The config file for giFT is
   ~/.giFT/gift.conf, for OpenFT it is ~/.giFT/OpenFT/OpenFT.conf.

   Both files should include enough comments to understand the options.
   Alternativly the manpages gift.conf(5) and OpenFT.conf(5) are available,
   containing explanations for all options.

5. Running and using giFT/OpenFT

  5.1. Running giFT

   ...is easy:

     $ giFT                                                           
   or                                                                 
     $ giFT -d                                                        

   That'll start the daemon and load all protocols (currently only OpenFT).
   The -d switch will make giFT fork to the background. Because giFT is a
   daemon, it will "just sit there", like it doesn't do anything. If you
   really want to know what it's doing (if you think it doesn't work for
   example), use tail -f ~/.giFT/gift.log.

   When you run giFT for the first time, it will most likely hog your CPU and
   drive your harddrive crazy. This is because giFT will need to calculate
   the md5sum (this process is called 'hashing') of all your shared files to
   create a database. The next time you run giFT only files that were added
   or changed will be hashed.

   You can check out some info about the nodes you're connected to and files
   you share with your browser at localhost:1216, or another port you
   configured to be your http_port.

  5.2. Getting a client

   Of course, at this point you may want to actually use giFT. Search OpenFT,
   download files, stuff like that. For this you'll need to download a
   client. A list with 'good' clients is available at our website.

   Alternativly you can use Google's or SourceForge's search to find other
   clients. We try to keep a list with all available clients, some details,
   their status and other info in a database that is accessible through
   clientbot (in our irc channel #giFT@freenode.net). Message 'help' to it to
   get usage instructions.

6. Miscellaneous

  6.1. Log files

   giFT/OpenFT keeps a few different logfiles. Firstly, there is
   ~/.giFT/gift.log which contains information about both giFT and OpenFT.
   This file is created on startup, so don't restart giFT immediatelly when
   it crashes, but check the log and report the problem.

   Since OpenFT works with HTTP, it also generates an Apache style
   access.log. With some tweaking you can make beautiful overviews and graphs
   with your favorite log analyser / statistics generator. You can find the
   file at ~/.giFT/access.log.

  6.2. The nodes file

   Ah yes, the ever popular nodes file... Since many questions in our IRC
   channel were asked related to this file, it gets a special section here.

   Upon startup OpenFT reads the nodes file. Nodes are sorted by last-seen
   packet, and OpenFT attempts up to 15 outgoing connections every 2 minutes.
   When the network devides, because of a newer protocol, your nodes file
   will be filled with mostly old nodes. This makes it difficult to find a
   connection to an up-to-date node.

  6.3. More information

   More information about the giFT project and giFT/OpenFT can be found in
   the other documentation at our website.

   If you want to learn about the interface protocol (that clients use to
   connect to giFT) read the Interface Protocol documentation. Please check
   other client projects first before starting your own.

   Our FAQ is a must-read before joining our IRC channel
   (#giFT@freenode.net). It even has a special "problems" section, hooray!
