!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.2.2	//
ATOI	/home/jasta/c/giFT/src/parse.c	/^long ATOI (char *string)$/;"	f
ATOUL	/home/jasta/c/giFT/src/parse.c	/^unsigned long ATOUL (char *string)$/;"	f
CLAMP	/home/jasta/c/giFT/src/gift.h	116;"	d
Chunk	/home/jasta/c/giFT/src/transfer.h	/^} Chunk;$/;"	t
ClientConnector_parse	/home/jasta/c/giFT/FT/ft_ClientConnect.c	/^ClientConnector_parse(Connection *my_con, int type, $/;"	f
ClientConnector_stage2	/home/jasta/c/giFT/FT/ft_ClientConnect.c	/^ClientConnector_stage2(Connection * my_con)$/;"	f
CompareFunc	/home/jasta/c/giFT/src/list.h	/^typedef int (*CompareFunc)     (void *a, void *b);$/;"	t
ComplexQuery	/home/jasta/c/giFT/FT/search.h	/^} *ComplexQuery;$/;"	t
Config	/home/jasta/c/giFT/src/conf.h	/^} Config;$/;"	t
ConfigHeader	/home/jasta/c/giFT/src/conf.h	/^} ConfigHeader;$/;"	t
ConnForeachFunc	/home/jasta/c/giFT/OpenFT/netorg.h	/^typedef Connection* (*ConnForeachFunc) (Connection *c, Node *node, void *data);$/;"	t
Connection	/home/jasta/c/giFT/src/connection.h	/^} Connection;$/;"	t
DATA_DIR	/home/jasta/c/giFT/acconfig.h	3;"	d
DATA_DIR	/home/jasta/c/giFT/config.h	27;"	d
DATA_DIR	/home/jasta/c/giFT/src/win32_support.h	27;"	d
DEBUG	/home/jasta/c/giFT/src/gift.h	68;"	d
DEFAULT_HTTP_PORT	/home/jasta/c/giFT/OpenFT/openft.c	39;"	d	file:
DEFAULT_NODE	/home/jasta/c/giFT/FT/ft.c	31;"	d	file:
DEFAULT_NODE	/home/jasta/c/giFT/OpenFT/openft.c	37;"	d	file:
DEFAULT_PORT	/home/jasta/c/giFT/FT/ft.c	32;"	d	file:
DEFAULT_PORT	/home/jasta/c/giFT/OpenFT/openft.c	38;"	d	file:
DEF_HEIGHT	/home/jasta/c/giFT/ui/ui.h	24;"	d
DEF_WIDTH	/home/jasta/c/giFT/ui/ui.h	23;"	d
DIVIDE_THRESHOLD	/home/jasta/c/giFT/src/download.c	44;"	d	file:
DaemonEvent	/home/jasta/c/giFT/ui/daemon.h	/^} DaemonEvent;$/;"	t
Dataset	/home/jasta/c/giFT/src/dataset.h	/^typedef struct _hash_table Dataset;$/;"	t
ERROR_DIALOG_TITLE	/home/jasta/c/giFT/src/win32_support.c	35;"	d	file:
EV_HANDLER	/home/jasta/c/giFT/FT/daemon.c	/^EV_HANDLER (daemon_stats)$/;"	f
EV_HANDLER	/home/jasta/c/giFT/FT/daemon.c	/^EV_HANDLER(daemon_ping)$/;"	f
EV_HANDLER	/home/jasta/c/giFT/FT/daemon.c	/^EV_HANDLER(daemon_search)$/;"	f
EV_HANDLER	/home/jasta/c/giFT/FT/daemon.c	31;"	d	file:
EV_HANDLER	/home/jasta/c/giFT/OpenFT/daemon.c	/^EV_HANDLER (daemon_promote)$/;"	f
EV_HANDLER	/home/jasta/c/giFT/OpenFT/daemon.c	/^EV_HANDLER (daemon_search)$/;"	f
EV_HANDLER	/home/jasta/c/giFT/OpenFT/daemon.c	/^EV_HANDLER (daemon_share)$/;"	f
EV_HANDLER	/home/jasta/c/giFT/OpenFT/daemon.c	/^EV_HANDLER (daemon_stats)$/;"	f
EV_HANDLER	/home/jasta/c/giFT/OpenFT/daemon.c	30;"	d	file:
EV_HANDLER	/home/jasta/c/giFT/src/daemon.c	/^EV_HANDLER (attach)$/;"	f
EV_HANDLER	/home/jasta/c/giFT/src/daemon.c	/^EV_HANDLER (search)$/;"	f
EV_HANDLER	/home/jasta/c/giFT/src/daemon.c	/^EV_HANDLER (share)$/;"	f
EV_HANDLER	/home/jasta/c/giFT/src/daemon.c	/^EV_HANDLER (stats)$/;"	f
EV_HANDLER	/home/jasta/c/giFT/src/daemon.c	/^EV_HANDLER (transfer)$/;"	f
EV_HANDLER	/home/jasta/c/giFT/src/daemon.c	35;"	d	file:
EventCallback	/home/jasta/c/giFT/FT/daemon.c	/^typedef void (*EventCallback) (Protocol *p, Connection *c, Dataset *event);$/;"	t	file:
EventCallback	/home/jasta/c/giFT/OpenFT/daemon.c	/^typedef void (*EventCallback) (Protocol *p, Connection *c, Dataset *event);$/;"	t	file:
EventCallback	/home/jasta/c/giFT/src/daemon.c	/^typedef void (*EventCallback) (Protocol *p, Connection *c, Dataset *event);$/;"	t	file:
F1	/home/jasta/c/giFT/src/md5.c	210;"	d	file:
F2	/home/jasta/c/giFT/src/md5.c	211;"	d	file:
F3	/home/jasta/c/giFT/src/md5.c	212;"	d	file:
F4	/home/jasta/c/giFT/src/md5.c	213;"	d	file:
FALSE	/home/jasta/c/giFT/FT/ft.h	75;"	d
FALSE	/home/jasta/c/giFT/OpenFT/openft.h	75;"	d
FALSE	/home/jasta/c/giFT/src/gift.h	102;"	d
FEConnection	/home/jasta/c/giFT/ui/feconnect.h	/^} FEConnection;$/;"	t
FEConnectionCallback	/home/jasta/c/giFT/ui/feconnect.h	/^typedef int (*FEConnectionCallback) (int sock, struct _fe_connection *c);$/;"	t
FEEventHandler	/home/jasta/c/giFT/ui/daemon.c	/^typedef int (*FEEventHandler) (FEConnection *c, char *head, GData *datalist);$/;"	t	file:
FE_EV_HANDLER	/home/jasta/c/giFT/ui/daemon.c	/^FE_EV_HANDLER (event)$/;"	f
FE_EV_HANDLER	/home/jasta/c/giFT/ui/daemon.c	/^FE_EV_HANDLER (transfer)$/;"	f
FE_EV_HANDLER	/home/jasta/c/giFT/ui/daemon.c	46;"	d	file:
FILE_TAG_ALBUM	/home/jasta/c/giFT/FT/search.h	/^    FILE_TAG_ARTIST = 0x06, FILE_TAG_ALBUM = 0x08, FILE_TAG_LANGUAGE = 0x0a,$/;"	e
FILE_TAG_ANY	/home/jasta/c/giFT/FT/search.h	/^enum { FILE_TAG_ANY = 0x00, FILE_TAG_YEAR = 0x01, FILE_TAG_HREF = 0x02,$/;"	e
FILE_TAG_ARTIST	/home/jasta/c/giFT/FT/search.h	/^    FILE_TAG_ARTIST = 0x06, FILE_TAG_ALBUM = 0x08, FILE_TAG_LANGUAGE = 0x0a,$/;"	e
FILE_TAG_BITDEPTH	/home/jasta/c/giFT/FT/search.h	/^    FILE_TAG_GENRE = 0x0e, FILE_TAG_BITDEPTH = 0x11, FILE_TAG_QUALITY = 0x15,$/;"	e
FILE_TAG_COMMENT	/home/jasta/c/giFT/FT/search.h	/^    FILE_TAG_VERSION = 0x18, FILE_TAG_COMMENT = 0x1a, FILE_TAG_RATING = 0x1d,$/;"	e
FILE_TAG_GENRE	/home/jasta/c/giFT/FT/search.h	/^    FILE_TAG_GENRE = 0x0e, FILE_TAG_BITDEPTH = 0x11, FILE_TAG_QUALITY = 0x15,$/;"	e
FILE_TAG_HASH	/home/jasta/c/giFT/FT/search.h	/^    FILE_TAG_HASH = 0x03, FILE_TAG_TITLE = 0x04, FILE_TAG_TIME = 0x05,$/;"	e
FILE_TAG_HREF	/home/jasta/c/giFT/FT/search.h	/^enum { FILE_TAG_ANY = 0x00, FILE_TAG_YEAR = 0x01, FILE_TAG_HREF = 0x02,$/;"	e
FILE_TAG_KEYWORDS	/home/jasta/c/giFT/FT/search.h	/^    FILE_TAG_KEYWORDS = 0x0c, FILE_TAG_RESOLUTION = 0x0d,$/;"	e
FILE_TAG_LANGUAGE	/home/jasta/c/giFT/FT/search.h	/^    FILE_TAG_ARTIST = 0x06, FILE_TAG_ALBUM = 0x08, FILE_TAG_LANGUAGE = 0x0a,$/;"	e
FILE_TAG_QUALITY	/home/jasta/c/giFT/FT/search.h	/^    FILE_TAG_GENRE = 0x0e, FILE_TAG_BITDEPTH = 0x11, FILE_TAG_QUALITY = 0x15,$/;"	e
FILE_TAG_RATING	/home/jasta/c/giFT/FT/search.h	/^    FILE_TAG_VERSION = 0x18, FILE_TAG_COMMENT = 0x1a, FILE_TAG_RATING = 0x1d,$/;"	e
FILE_TAG_RESOLUTION	/home/jasta/c/giFT/FT/search.h	/^    FILE_TAG_KEYWORDS = 0x0c, FILE_TAG_RESOLUTION = 0x0d,$/;"	e
FILE_TAG_SIZE	/home/jasta/c/giFT/FT/search.h	/^    FILE_TAG_SIZE = 0x21 };$/;"	e
FILE_TAG_TIME	/home/jasta/c/giFT/FT/search.h	/^    FILE_TAG_HASH = 0x03, FILE_TAG_TITLE = 0x04, FILE_TAG_TIME = 0x05,$/;"	e
FILE_TAG_TITLE	/home/jasta/c/giFT/FT/search.h	/^    FILE_TAG_HASH = 0x03, FILE_TAG_TITLE = 0x04, FILE_TAG_TIME = 0x05,$/;"	e
FILE_TAG_VERSION	/home/jasta/c/giFT/FT/search.h	/^    FILE_TAG_VERSION = 0x18, FILE_TAG_COMMENT = 0x1a, FILE_TAG_RATING = 0x1d,$/;"	e
FILE_TAG_YEAR	/home/jasta/c/giFT/FT/search.h	/^enum { FILE_TAG_ANY = 0x00, FILE_TAG_YEAR = 0x01, FILE_TAG_HREF = 0x02,$/;"	e
FTApp	/home/jasta/c/giFT/ui/gift-fe.h	/^} FTApp;$/;"	t
FTPacket	/home/jasta/c/giFT/OpenFT/packet.h	/^} FTPacket;$/;"	t
FT_CLASS_REQUEST	/home/jasta/c/giFT/OpenFT/protocol.h	/^	FT_CLASS_REQUEST = 0,$/;"	e
FT_CLASS_RESPONSE	/home/jasta/c/giFT/OpenFT/protocol.h	/^	FT_CLASS_RESPONSE,$/;"	e
FT_HANDLER	/home/jasta/c/giFT/OpenFT/protocol.c	/^FT_HANDLER (class_request)$/;"	f
FT_HANDLER	/home/jasta/c/giFT/OpenFT/protocol.c	/^FT_HANDLER (class_response)$/;"	f
FT_HANDLER	/home/jasta/c/giFT/OpenFT/protocol.c	/^FT_HANDLER (nodeinfo_request)$/;"	f
FT_HANDLER	/home/jasta/c/giFT/OpenFT/protocol.c	/^FT_HANDLER (nodeinfo_response)$/;"	f
FT_HANDLER	/home/jasta/c/giFT/OpenFT/protocol.c	/^FT_HANDLER (nodelist_request)$/;"	f
FT_HANDLER	/home/jasta/c/giFT/OpenFT/protocol.c	/^FT_HANDLER (nodelist_response)$/;"	f
FT_HANDLER	/home/jasta/c/giFT/OpenFT/protocol.c	/^FT_HANDLER (ping_request)$/;"	f
FT_HANDLER	/home/jasta/c/giFT/OpenFT/protocol.c	/^FT_HANDLER (ping_response)$/;"	f
FT_HANDLER	/home/jasta/c/giFT/OpenFT/protocol.c	/^FT_HANDLER (push_request)$/;"	f
FT_HANDLER	/home/jasta/c/giFT/OpenFT/protocol.c	/^FT_HANDLER (push_response)$/;"	f
FT_HANDLER	/home/jasta/c/giFT/OpenFT/protocol.c	/^FT_HANDLER (search_request)$/;"	f
FT_HANDLER	/home/jasta/c/giFT/OpenFT/protocol.c	/^FT_HANDLER (search_response)$/;"	f
FT_HANDLER	/home/jasta/c/giFT/OpenFT/protocol.c	/^FT_HANDLER (share_request)$/;"	f
FT_HANDLER	/home/jasta/c/giFT/OpenFT/protocol.c	/^FT_HANDLER (share_response)$/;"	f
FT_HANDLER	/home/jasta/c/giFT/OpenFT/protocol.c	/^FT_HANDLER (stats_request)$/;"	f
FT_HANDLER	/home/jasta/c/giFT/OpenFT/protocol.c	/^FT_HANDLER (stats_response)$/;"	f
FT_HANDLER	/home/jasta/c/giFT/OpenFT/protocol.c	34;"	d	file:
FT_HEADER_LEN	/home/jasta/c/giFT/OpenFT/packet.h	26;"	d
FT_NODEINFO_REQUEST	/home/jasta/c/giFT/OpenFT/protocol.h	/^	FT_NODEINFO_REQUEST,$/;"	e
FT_NODEINFO_RESPONSE	/home/jasta/c/giFT/OpenFT/protocol.h	/^	FT_NODEINFO_RESPONSE,$/;"	e
FT_NODELIST_REQUEST	/home/jasta/c/giFT/OpenFT/protocol.h	/^	FT_NODELIST_REQUEST,$/;"	e
FT_NODELIST_RESPONSE	/home/jasta/c/giFT/OpenFT/protocol.h	/^	FT_NODELIST_RESPONSE,$/;"	e
FT_PING_REQUEST	/home/jasta/c/giFT/OpenFT/protocol.h	/^	FT_PING_REQUEST,$/;"	e
FT_PING_RESPONSE	/home/jasta/c/giFT/OpenFT/protocol.h	/^	FT_PING_RESPONSE$/;"	e
FT_PUSH_REQUEST	/home/jasta/c/giFT/OpenFT/protocol.h	/^	FT_PUSH_REQUEST,$/;"	e
FT_PUSH_RESPONSE	/home/jasta/c/giFT/OpenFT/protocol.h	/^	FT_PUSH_RESPONSE,$/;"	e
FT_SEARCH_REQUEST	/home/jasta/c/giFT/OpenFT/protocol.h	/^	FT_SEARCH_REQUEST,$/;"	e
FT_SEARCH_RESPONSE	/home/jasta/c/giFT/OpenFT/protocol.h	/^	FT_SEARCH_RESPONSE,$/;"	e
FT_SHARE_REQUEST	/home/jasta/c/giFT/OpenFT/protocol.h	/^	FT_SHARE_REQUEST,$/;"	e
FT_SHARE_RESPONSE	/home/jasta/c/giFT/OpenFT/protocol.h	/^	FT_SHARE_RESPONSE,$/;"	e
FT_STATS_REQUEST	/home/jasta/c/giFT/OpenFT/protocol.h	/^	FT_STATS_REQUEST,$/;"	e
FT_STATS_RESPONSE	/home/jasta/c/giFT/OpenFT/protocol.h	/^	FT_STATS_RESPONSE,$/;"	e
FT_init	/home/jasta/c/giFT/FT/ft.c	/^int FT_init (Protocol *p)$/;"	f
FileDescription	/home/jasta/c/giFT/FT/search.h	/^} FileDescription;$/;"	t
FileEntry	/home/jasta/c/giFT/FT/search.h	/^} FileEntry;$/;"	t
FileShare	/home/jasta/c/giFT/src/sharing.h	/^} FileShare;$/;"	t
FileTag	/home/jasta/c/giFT/FT/search.h	/^} FileTag;$/;"	t
GC_strdup	/home/jasta/c/giFT/src/gift.h	/^static char *GC_strdup (char *x) { char *str = GC_malloc (strlen (x)); strcpy (str, x); return str; }$/;"	f
GIFT_CONFIG_PATH	/home/jasta/c/giFT/src/conf.h	24;"	d
GIFT_CVSID	/home/jasta/c/giFT/src/gift.h	29;"	d
GIFT_DEBUG	/home/jasta/c/giFT/src/gift.h	72;"	d
GIFT_DEBUG	/home/jasta/c/giFT/src/gift.h	79;"	d
GIFT_DEBUG	/home/jasta/c/giFT/src/gift.h	87;"	d
GIFT_ERROR	/home/jasta/c/giFT/src/gift.h	73;"	d
GIFT_ERROR	/home/jasta/c/giFT/src/gift.h	80;"	d
GIFT_ERROR	/home/jasta/c/giFT/src/gift.h	88;"	d
GIFT_FATAL	/home/jasta/c/giFT/src/gift.h	75;"	d
GIFT_FATAL	/home/jasta/c/giFT/src/gift.h	82;"	d
GIFT_FATAL	/home/jasta/c/giFT/src/gift.h	90;"	d
GIFT_FE_PACKAGE	/home/jasta/c/giFT/ui/gift-fe.h	49;"	d
GIFT_FE_VERSION	/home/jasta/c/giFT/ui/gift-fe.h	50;"	d
GIFT_REG_PATH	/home/jasta/c/giFT/src/conf.h	22;"	d
GIFT_WARN	/home/jasta/c/giFT/src/gift.h	74;"	d
GIFT_WARN	/home/jasta/c/giFT/src/gift.h	81;"	d
GIFT_WARN	/home/jasta/c/giFT/src/gift.h	89;"	d
HASH_TABLE_MAX_SIZE	/home/jasta/c/giFT/src/hash.c	25;"	d	file:
HASH_TABLE_MIN_SIZE	/home/jasta/c/giFT/src/hash.c	24;"	d	file:
HAVE_DIRENT_H	/home/jasta/c/giFT/config.h	43;"	d
HAVE_DLFCN_H	/home/jasta/c/giFT/config.h	46;"	d
HAVE_FCNTL_H	/home/jasta/c/giFT/config.h	49;"	d
HAVE_LIBNSL	/home/jasta/c/giFT/config.h	67;"	d
HAVE_SELECT	/home/jasta/c/giFT/config.h	31;"	d
HAVE_SOCKET	/home/jasta/c/giFT/config.h	34;"	d
HAVE_STRDUP	/home/jasta/c/giFT/config.h	37;"	d
HAVE_STRSTR	/home/jasta/c/giFT/config.h	40;"	d
HAVE_SYS_TIME_H	/home/jasta/c/giFT/config.h	61;"	d
HAVE_SYS_WAIT_H	/home/jasta/c/giFT/config.h	8;"	d
HAVE_UNISTD_H	/home/jasta/c/giFT/config.h	64;"	d
HTTP_USER_AGENT	/home/jasta/c/giFT/FT/http.c	32;"	d	file:
HTTP_USER_AGENT	/home/jasta/c/giFT/OpenFT/http.c	33;"	d	file:
HashEqualFunc	/home/jasta/c/giFT/src/hash.h	/^typedef int (*HashEqualFunc) (unsigned long key1, unsigned long key2);$/;"	t
HashFunc	/home/jasta/c/giFT/src/hash.h	/^typedef int (*HashFunc) (unsigned long key, void *value, void *udata);$/;"	t
HashKeyFunc	/home/jasta/c/giFT/src/hash.h	/^typedef unsigned long (*HashKeyFunc) (unsigned long key);$/;"	t
HashNode	/home/jasta/c/giFT/src/hash.h	/^} HashNode;$/;"	t
HashTable	/home/jasta/c/giFT/src/hash.h	/^} HashTable;$/;"	t
IFEVENT_SEARCH	/home/jasta/c/giFT/src/if_event.h	/^	IFEVENT_SEARCH,$/;"	e
IFEVENT_STATS	/home/jasta/c/giFT/src/if_event.h	/^	IFEVENT_STATS$/;"	e
IFEVENT_TRANSFER	/home/jasta/c/giFT/src/if_event.h	/^	IFEVENT_TRANSFER,$/;"	e
IFEvent	/home/jasta/c/giFT/src/if_event.h	/^} IFEvent;$/;"	t
IFEventFunc	/home/jasta/c/giFT/src/if_event.h	/^typedef void (*IFEventFunc) (struct _if_event *event);$/;"	t
IFEventID	/home/jasta/c/giFT/src/if_event.h	/^typedef unsigned long IFEventID;$/;"	t
IFEventType	/home/jasta/c/giFT/src/if_event.h	/^} IFEventType;$/;"	t
IMAGE_HOST	/home/jasta/c/giFT/FT/html.c	33;"	d	file:
IMAGE_HOST	/home/jasta/c/giFT/OpenFT/html.c	33;"	d	file:
INC_KEY	/home/jasta/c/giFT/FT/ft_ClientConnect.c	33;"	d	file:
INC_KEY	/home/jasta/c/giFT/FT/ft_packet.c	35;"	d	file:
INITIAL_BUFFER	/home/jasta/c/giFT/src/nb.c	27;"	d	file:
INPUT_EXCEPTION	/home/jasta/c/giFT/src/event.h	/^	INPUT_EXCEPTION = 0x04$/;"	e
INPUT_READ	/home/jasta/c/giFT/src/event.h	/^	INPUT_READ      = 0x01,$/;"	e
INPUT_WRITE	/home/jasta/c/giFT/src/event.h	/^	INPUT_WRITE     = 0x02,$/;"	e
INTERFACE_PORT	/home/jasta/c/giFT/src/main.c	37;"	d	file:
IN_PACKET	/home/jasta/c/giFT/FT/ft_packet.c	32;"	d	file:
ITOA	/home/jasta/c/giFT/src/parse.c	/^char *ITOA (long integer)$/;"	f
Input	/home/jasta/c/giFT/src/event.h	/^} Input;$/;"	t
InputCallback	/home/jasta/c/giFT/src/event.h	/^typedef void (*InputCallback) (Protocol *p, Connection *c);$/;"	t
InputState	/home/jasta/c/giFT/src/event.h	/^} InputState;$/;"	t
InterfaceCloseFunc	/home/jasta/c/giFT/src/interface.h	/^typedef void (*InterfaceCloseFunc) (Connection *c, void *data);$/;"	t
InterfaceEvent	/home/jasta/c/giFT/src/interface.h	/^} InterfaceEvent;$/;"	t
LINUX	/home/jasta/c/giFT/config.h	82;"	d
LIST_SIZE	/home/jasta/c/giFT/ui/utils.h	24;"	d
LOG_WINDOW_CLASS	/home/jasta/c/giFT/src/win32_support.c	33;"	d	file:
LOG_WINDOW_TITLE	/home/jasta/c/giFT/src/win32_support.c	34;"	d	file:
List	/home/jasta/c/giFT/src/list.h	/^} List;$/;"	t
ListForeachFunc	/home/jasta/c/giFT/src/list.h	/^typedef int (*ListForeachFunc) (void *data, void *udata);$/;"	t
MAX	/home/jasta/c/giFT/src/gift.h	112;"	d
MAXCONNECTIONS	/home/jasta/c/giFT/FT/ft.h	82;"	d
MAX_FLUSH	/home/jasta/c/giFT/ui/search.c	31;"	d	file:
MAX_HEARTBEAT	/home/jasta/c/giFT/OpenFT/node.c	37;"	d	file:
MAX_INACTIVE	/home/jasta/c/giFT/src/download.c	46;"	d	file:
MAX_PARENTS	/home/jasta/c/giFT/OpenFT/utils.c	36;"	d	file:
MAX_PENDING_CONNECTIONS	/home/jasta/c/giFT/OpenFT/netorg.c	32;"	d	file:
MAX_RESULTS	/home/jasta/c/giFT/OpenFT/search.c	53;"	d	file:
MAX_RESULTS	/home/jasta/c/giFT/ui/search.c	30;"	d	file:
MD5Context	/home/jasta/c/giFT/src/md5.h	/^struct MD5Context$/;"	s
MD5Final	/home/jasta/c/giFT/src/md5.c	/^void MD5Final(unsigned char digest[16], struct MD5Context *ctx)$/;"	f
MD5Init	/home/jasta/c/giFT/src/md5.c	/^void MD5Init(struct MD5Context *ctx)$/;"	f
MD5STEP	/home/jasta/c/giFT/src/md5.c	216;"	d	file:
MD5SUM_READ	/home/jasta/c/giFT/src/sharing.c	53;"	d	file:
MD5Transform	/home/jasta/c/giFT/src/md5.c	/^void MD5Transform(uint32 buf[4], uint32 const in[16])$/;"	f
MD5Update	/home/jasta/c/giFT/src/md5.c	/^void MD5Update(struct MD5Context *ctx, unsigned char const *buf, unsigned len)$/;"	f
MD5_CTX	/home/jasta/c/giFT/src/md5.h	/^typedef struct MD5Context MD5_CTX;$/;"	t
MD5_H	/home/jasta/c/giFT/src/md5.h	2;"	d
MIN	/home/jasta/c/giFT/src/gift.h	108;"	d
MenuCreateFunc	/home/jasta/c/giFT/ui/menu.h	/^typedef int (*MenuCreateFunc) (GtkWidget *w, void *data, guint button, $/;"	t
Mortal	/home/jasta/c/giFT/src/mortal.h	/^} Mortal;$/;"	t
MortalDestroyFunc	/home/jasta/c/giFT/src/mortal.h	/^typedef void (*MortalDestroyFunc) (void *obj);$/;"	t
NBRead	/home/jasta/c/giFT/src/nb.h	/^} NBRead;$/;"	t
NEED_SOCKLEN_T	/home/jasta/c/giFT/acconfig.h	1;"	d
NODE	/home/jasta/c/giFT/OpenFT/node.h	87;"	d
NODE_CHILD	/home/jasta/c/giFT/OpenFT/node.h	/^		NODE_CHILD  = 0x08,        \/* node is sharing files to 'self' *\/$/;"	e
NODE_CONNECTED	/home/jasta/c/giFT/OpenFT/node.h	/^		NODE_CONNECTED     = 0x02, \/* first packet is seen *\/$/;"	e
NODE_CONNECTING	/home/jasta/c/giFT/OpenFT/node.h	/^		NODE_CONNECTING    = 0x01, \/* pending *\/$/;"	e
NODE_DISCONNECTED	/home/jasta/c/giFT/OpenFT/node.h	/^		NODE_DISCONNECTED  = 0x00, \/* functionless node *\/$/;"	e
NODE_IDLE	/home/jasta/c/giFT/OpenFT/node.h	/^		NODE_IDLE          = 0x04, \/* after handshake *\/$/;"	e
NODE_INDEX	/home/jasta/c/giFT/OpenFT/node.h	/^		NODE_INDEX  = 0x04,$/;"	e
NODE_NONE	/home/jasta/c/giFT/OpenFT/node.h	/^		NODE_NONE   = 0x00,$/;"	e
NODE_PARENT	/home/jasta/c/giFT/OpenFT/node.h	/^		NODE_PARENT = 0x10,        \/* node has 'self' files shared *\/$/;"	e
NODE_SEARCH	/home/jasta/c/giFT/OpenFT/node.h	/^		NODE_SEARCH = 0x02,$/;"	e
NODE_USER	/home/jasta/c/giFT/OpenFT/node.h	/^		NODE_USER   = 0x01,$/;"	e
Node	/home/jasta/c/giFT/OpenFT/node.h	/^} Node;$/;"	t
NumStatsFileType	/home/jasta/c/giFT/FT/ft_packet.h	26;"	d
OBJECT_DATA	/home/jasta/c/giFT/ui/obj.c	47;"	d	file:
OBJ_DATA	/home/jasta/c/giFT/ui/obj.h	41;"	d
OBJ_FREE	/home/jasta/c/giFT/ui/obj.h	23;"	d
OBJ_NEW	/home/jasta/c/giFT/ui/obj.h	22;"	d
OPENFT_TRANSFER	/home/jasta/c/giFT/FT/http.h	55;"	d
OPENFT_TRANSFER	/home/jasta/c/giFT/OpenFT/http.h	55;"	d
OUT_KEY	/home/jasta/c/giFT/FT/ft_ClientConnect.c	32;"	d	file:
OUT_KEY	/home/jasta/c/giFT/FT/ft_packet.c	34;"	d	file:
OUT_PACKET	/home/jasta/c/giFT/FT/ft_ClientConnect.c	34;"	d	file:
OUT_PACKET	/home/jasta/c/giFT/FT/ft_packet.c	33;"	d	file:
ObjDestroyFunc	/home/jasta/c/giFT/ui/obj.c	/^typedef void (*ObjDestroyFunc) (void *obj);$/;"	t	file:
Object	/home/jasta/c/giFT/ui/obj.h	/^} Object;$/;"	t
ObjectData	/home/jasta/c/giFT/ui/obj.h	/^} ObjectData;$/;"	t
OpenFT_Share	/home/jasta/c/giFT/OpenFT/share.h	/^} OpenFT_Share;$/;"	t
OpenFT_Transfer	/home/jasta/c/giFT/FT/http.h	/^} OpenFT_Transfer;$/;"	t
OpenFT_Transfer	/home/jasta/c/giFT/OpenFT/http.h	/^} OpenFT_Transfer;$/;"	t
OpenFT_TransferCB	/home/jasta/c/giFT/FT/http.h	/^typedef void (*OpenFT_TransferCB) (Chunk *chunk, char *data, size_t len);$/;"	t
OpenFT_TransferCB	/home/jasta/c/giFT/OpenFT/http.h	/^typedef void (*OpenFT_TransferCB) (Chunk *chunk, char *data, size_t len);$/;"	t
OpenFT_init	/home/jasta/c/giFT/OpenFT/openft.c	/^int OpenFT_init (Protocol *p)$/;"	f
PACK	/home/jasta/c/giFT/ui/ui.h	34;"	d
PACKAGE	/home/jasta/c/giFT/config.h	73;"	d
PACKET_APPEND	/home/jasta/c/giFT/OpenFT/packet.c	23;"	d	file:
PACK_END	/home/jasta/c/giFT/ui/ui.h	37;"	d
PACK_EXPAND	/home/jasta/c/giFT/ui/ui.h	31;"	d
PACK_FILL	/home/jasta/c/giFT/ui/ui.h	30;"	d
PACK_NONE	/home/jasta/c/giFT/ui/ui.h	29;"	d
PADSIZE	/home/jasta/c/giFT/FT/crypt.h	23;"	d
PLUGIN_DIR	/home/jasta/c/giFT/acconfig.h	2;"	d
PLUGIN_DIR	/home/jasta/c/giFT/config.h	26;"	d
PREF_APPLY	/home/jasta/c/giFT/ui/pref.c	26;"	d	file:
PREF_CLOSE	/home/jasta/c/giFT/ui/pref.c	25;"	d	file:
ParsePacketFunc	/home/jasta/c/giFT/ui/daemon.h	/^typedef int (*ParsePacketFunc) (char *head, int keys,$/;"	t
Protocol	/home/jasta/c/giFT/src/protocol.h	/^} Protocol;$/;"	t
ProtocolHandler	/home/jasta/c/giFT/OpenFT/protocol.c	/^typedef void (*ProtocolHandler) (Protocol *p, Connection *c, FTPacket *packet);$/;"	t	file:
ProtocolInit	/home/jasta/c/giFT/src/protocol.h	/^typedef int (*ProtocolInit) (struct _protocol *p);$/;"	t
QUERY_APPROX	/home/jasta/c/giFT/FT/search.h	/^typedef enum { QUERY_EQUALS=0x00, QUERY_ATMOST=0x02, QUERY_APPROX=0x03,$/;"	e
QUERY_ATLEAST	/home/jasta/c/giFT/FT/search.h	/^    QUERY_ATLEAST=0x04, QUERY_SUBSTRING=0x05 } QueryTermType;$/;"	e
QUERY_ATMOST	/home/jasta/c/giFT/FT/search.h	/^typedef enum { QUERY_EQUALS=0x00, QUERY_ATMOST=0x02, QUERY_APPROX=0x03,$/;"	e
QUERY_EQUALS	/home/jasta/c/giFT/FT/search.h	/^typedef enum { QUERY_EQUALS=0x00, QUERY_ATMOST=0x02, QUERY_APPROX=0x03,$/;"	e
QUERY_REALM_AUDIO	/home/jasta/c/giFT/FT/search.h	/^typedef enum { QUERY_REALM_EVERYTHING=0x3f, QUERY_REALM_AUDIO=0x21,$/;"	e
QUERY_REALM_DOCUMENTS	/home/jasta/c/giFT/FT/search.h	/^    QUERY_REALM_DOCUMENTS=0x24, QUERY_REALM_SOFTWARE=0x25 } QueryRealm;$/;"	e
QUERY_REALM_EVERYTHING	/home/jasta/c/giFT/FT/search.h	/^typedef enum { QUERY_REALM_EVERYTHING=0x3f, QUERY_REALM_AUDIO=0x21,$/;"	e
QUERY_REALM_IMAGES	/home/jasta/c/giFT/FT/search.h	/^    QUERY_REALM_VIDEO=0x22, QUERY_REALM_IMAGES=0x23,$/;"	e
QUERY_REALM_SOFTWARE	/home/jasta/c/giFT/FT/search.h	/^    QUERY_REALM_DOCUMENTS=0x24, QUERY_REALM_SOFTWARE=0x25 } QueryRealm;$/;"	e
QUERY_REALM_VIDEO	/home/jasta/c/giFT/FT/search.h	/^    QUERY_REALM_VIDEO=0x22, QUERY_REALM_IMAGES=0x23,$/;"	e
QUERY_SUBSTRING	/home/jasta/c/giFT/FT/search.h	/^    QUERY_ATLEAST=0x04, QUERY_SUBSTRING=0x05 } QueryTermType;$/;"	e
QueryRealm	/home/jasta/c/giFT/FT/search.h	/^    QUERY_REALM_DOCUMENTS=0x24, QUERY_REALM_SOFTWARE=0x25 } QueryRealm;$/;"	t
QueryResponse	/home/jasta/c/giFT/FT/search.h	/^} *QueryResponse;$/;"	t
QueryTerm	/home/jasta/c/giFT/FT/search.h	/^} QueryTerm;$/;"	t
QueryTermType	/home/jasta/c/giFT/FT/search.h	/^    QUERY_ATLEAST=0x04, QUERY_SUBSTRING=0x05 } QueryTermType;$/;"	t
QueueWriteFunc	/home/jasta/c/giFT/src/queue.h	/^typedef void (*QueueWriteFunc) (Connection *c, void *data, void *udata);$/;"	t
ROW_GET_TEXT	/home/jasta/c/giFT/ui/utils.h	33;"	d
RW_BUFFER	/home/jasta/c/giFT/src/network.h	37;"	d
SEARCH_FILENAME	/home/jasta/c/giFT/OpenFT/search.h	/^	SEARCH_FILENAME = 0x01,$/;"	e
SEARCH_HOST	/home/jasta/c/giFT/OpenFT/search.h	/^	SEARCH_HOST     = 0x04,$/;"	e
SEARCH_LOCAL	/home/jasta/c/giFT/OpenFT/search.h	/^	SEARCH_LOCAL    = 0x08$/;"	e
SEARCH_MD5	/home/jasta/c/giFT/OpenFT/search.h	/^	SEARCH_MD5      = 0x02,$/;"	e
SET_NODE_DATA	/home/jasta/c/giFT/ui/utils.h	28;"	d
SET_PARENT	/home/jasta/c/giFT/ui/utils.h	30;"	d
SET_ROW_DATA	/home/jasta/c/giFT/ui/utils.h	27;"	d
SHARE	/home/jasta/c/giFT/ui/share.h	37;"	d
STATE_FILE_PREFIX	/home/jasta/c/giFT/src/download.c	41;"	d	file:
STATE_FILE_SUFFIX	/home/jasta/c/giFT/src/download.c	42;"	d	file:
STATS_INTERVAL	/home/jasta/c/giFT/ui/download.c	25;"	d	file:
STDC_HEADERS	/home/jasta/c/giFT/config.h	17;"	d
STRCMP	/home/jasta/c/giFT/src/parse.c	/^int STRCMP (char *s1, char *s2)$/;"	f
STRDUP	/home/jasta/c/giFT/src/parse.c	/^char *STRDUP (char *string)$/;"	f
STRDUP	/home/jasta/c/giFT/src/parse.h	27;"	d
SUPPORTED_FORMATS	/home/jasta/c/giFT/ui/ui.h	43;"	d
Search	/home/jasta/c/giFT/FT/search.h	/^} Search;$/;"	t
Search	/home/jasta/c/giFT/OpenFT/search.h	/^} Search;$/;"	t
Search	/home/jasta/c/giFT/ui/search.h	/^} Search;$/;"	t
SearchFunc	/home/jasta/c/giFT/OpenFT/search.c	/^typedef int (*SearchFunc) (FileShare *file, Dataset *dataset);$/;"	t	file:
Search_Type	/home/jasta/c/giFT/ui/search.h	38;"	d
SendMes	/home/jasta/c/giFT/FT/ft_packet.c	/^SendMes(Connection *my_con, unsigned char *mes, int type, int size)$/;"	f
SendPing	/home/jasta/c/giFT/FT/ft_packet.c	/^void SendPing(Connection *my_con)$/;"	f
SendPong	/home/jasta/c/giFT/FT/ft_packet.c	/^void SendPong(Connection * my_con)$/;"	f
SharedFile	/home/jasta/c/giFT/ui/share.h	/^} SharedFile;$/;"	t
Source	/home/jasta/c/giFT/src/transfer.h	/^} Source;$/;"	t
StringFunc	/home/jasta/c/giFT/src/parse.c	/^typedef char* (*StringFunc) (char *string, char *needle);$/;"	t	file:
TIME_WITH_SYS_TIME	/home/jasta/c/giFT/config.h	20;"	d
TOKEN_DELIM	/home/jasta/c/giFT/OpenFT/search.c	55;"	d	file:
TOKEN_PUNCT	/home/jasta/c/giFT/OpenFT/search.c	54;"	d	file:
TRACE	/home/jasta/c/giFT/src/gift.h	76;"	d
TRACE	/home/jasta/c/giFT/src/gift.h	83;"	d
TRACE	/home/jasta/c/giFT/src/gift.h	91;"	d
TRACE_FUNC	/home/jasta/c/giFT/src/gift.h	77;"	d
TRACE_FUNC	/home/jasta/c/giFT/src/gift.h	84;"	d
TRACE_FUNC	/home/jasta/c/giFT/src/gift.h	92;"	d
TRACE_SOCK	/home/jasta/c/giFT/FT/ft.h	65;"	d
TRACE_SOCK	/home/jasta/c/giFT/FT/ft.h	67;"	d
TRACE_SOCK	/home/jasta/c/giFT/OpenFT/openft.h	67;"	d
TRACE_SOCK	/home/jasta/c/giFT/OpenFT/openft.h	69;"	d
TRANSFER_ACTIVE	/home/jasta/c/giFT/ui/transfer.h	/^	TRANSFER_ACTIVE,$/;"	e
TRANSFER_DOWNLOAD	/home/jasta/c/giFT/src/transfer.h	/^	TRANSFER_DOWNLOAD,$/;"	e	enum:_transfer_type
TRANSFER_FINISHED	/home/jasta/c/giFT/ui/transfer.h	/^	TRANSFER_FINISHED$/;"	e
TRANSFER_PAUSED	/home/jasta/c/giFT/ui/transfer.h	/^	TRANSFER_PAUSED,$/;"	e
TRANSFER_UPLOAD	/home/jasta/c/giFT/src/transfer.h	/^	TRANSFER_UPLOAD$/;"	e	enum:_transfer_type
TRANSFER_WAITING	/home/jasta/c/giFT/ui/transfer.h	/^	TRANSFER_WAITING = 0,$/;"	e
TRUE	/home/jasta/c/giFT/FT/ft.h	79;"	d
TRUE	/home/jasta/c/giFT/OpenFT/openft.h	79;"	d
TRUE	/home/jasta/c/giFT/src/gift.h	98;"	d
Timer	/home/jasta/c/giFT/src/event.h	/^} Timer;$/;"	t
TimerCallback	/home/jasta/c/giFT/src/event.h	/^typedef int (*TimerCallback) (void *data);$/;"	t
Transfer	/home/jasta/c/giFT/src/transfer.h	/^} Transfer;$/;"	t
Transfer	/home/jasta/c/giFT/ui/transfer.h	/^} Transfer;$/;"	t
TransferType	/home/jasta/c/giFT/src/transfer.h	/^} TransferType;$/;"	t
Transfer_Type	/home/jasta/c/giFT/ui/transfer.h	42;"	d
USE_DLOPEN	/home/jasta/c/giFT/acconfig.h	4;"	d
USE_DLOPEN	/home/jasta/c/giFT/config.h	28;"	d
VERSION	/home/jasta/c/giFT/config.h	76;"	d
WS_MAJOR	/home/jasta/c/giFT/src/win32_support.c	30;"	d	file:
WS_MINOR	/home/jasta/c/giFT/src/win32_support.c	31;"	d	file:
WinMain	/home/jasta/c/giFT/src/win32_support.c	/^int WINAPI WinMain (HINSTANCE instance, HINSTANCE prev_instance,$/;"	f
WriteQueue	/home/jasta/c/giFT/src/queue.h	/^} WriteQueue;$/;"	t
_CRYPT_H_	/home/jasta/c/giFT/FT/crypt.h	20;"	d
_ClientConnector_H_	/home/jasta/c/giFT/FT/ft_ClientConnect.h	15;"	d
__CONF_H	/home/jasta/c/giFT/src/conf.h	18;"	d
__CONNECTION_H__	/home/jasta/c/giFT/src/connection.h	18;"	d
__DAEMON_H	/home/jasta/c/giFT/FT/daemon.h	16;"	d
__DAEMON_H	/home/jasta/c/giFT/OpenFT/daemon.h	18;"	d
__DAEMON_H	/home/jasta/c/giFT/src/daemon.h	18;"	d
__DAEMON_H	/home/jasta/c/giFT/ui/daemon.h	18;"	d
__DATASET_H	/home/jasta/c/giFT/src/dataset.h	18;"	d
__DOWNLOAD_H	/home/jasta/c/giFT/src/download.h	18;"	d
__DOWNLOAD_H	/home/jasta/c/giFT/ui/download.h	18;"	d
__EVENT_H	/home/jasta/c/giFT/src/event.h	18;"	d
__FE_CONNECT_H	/home/jasta/c/giFT/ui/feconnect.h	18;"	d
__FILE_H	/home/jasta/c/giFT/src/file.h	18;"	d
__FT_H__	/home/jasta/c/giFT/FT/ft.h	19;"	d
__GIFT_H	/home/jasta/c/giFT/src/gift.h	18;"	d
__GIFT_H	/home/jasta/c/giFT/ui/gift-fe.h	18;"	d
__HASH_H	/home/jasta/c/giFT/src/hash.h	16;"	d
__HTML_H	/home/jasta/c/giFT/FT/html.h	18;"	d
__HTML_H	/home/jasta/c/giFT/OpenFT/html.h	18;"	d
__HTTP_H	/home/jasta/c/giFT/FT/http.h	18;"	d
__HTTP_H	/home/jasta/c/giFT/OpenFT/http.h	18;"	d
__IF_EVENT_H	/home/jasta/c/giFT/src/if_event.h	18;"	d
__INTERFACE_H	/home/jasta/c/giFT/src/interface.h	18;"	d
__LIST_H__	/home/jasta/c/giFT/src/list.h	18;"	d
__MENU_H	/home/jasta/c/giFT/ui/menu.h	18;"	d
__MENU_IF_H	/home/jasta/c/giFT/ui/menu-if.h	18;"	d
__MIME_H	/home/jasta/c/giFT/src/mime.h	18;"	d
__MORTAL_H	/home/jasta/c/giFT/src/mortal.h	18;"	d
__NB_H	/home/jasta/c/giFT/src/nb.h	18;"	d
__NETORG_H	/home/jasta/c/giFT/OpenFT/netorg.h	18;"	d
__NETWORK_H__	/home/jasta/c/giFT/src/network.h	18;"	d
__NODE_H__	/home/jasta/c/giFT/OpenFT/node.h	18;"	d
__OBJ_H	/home/jasta/c/giFT/ui/obj.h	18;"	d
__OPENFT_C__	/home/jasta/c/giFT/OpenFT/openft.c	17;"	d	file:
__OPENFT_H__	/home/jasta/c/giFT/OpenFT/openft.h	21;"	d
__OPENFT_PROTOCOL_H__	/home/jasta/c/giFT/OpenFT/protocol.h	18;"	d
__OPENFT_SHARE_H	/home/jasta/c/giFT/OpenFT/share.h	18;"	d
__PACKET_H__	/home/jasta/c/giFT/FT/ft_packet.h	16;"	d
__PACKET_H__	/home/jasta/c/giFT/OpenFT/packet.h	18;"	d
__PARSE_H	/home/jasta/c/giFT/src/parse.h	18;"	d
__PREF_H	/home/jasta/c/giFT/ui/pref.h	18;"	d
__PROTOCOL_H	/home/jasta/c/giFT/src/protocol.h	18;"	d
__QUEUE_H	/home/jasta/c/giFT/src/queue.h	18;"	d
__SEARCH_H	/home/jasta/c/giFT/OpenFT/search.h	18;"	d
__SEARCH_H	/home/jasta/c/giFT/ui/search.h	18;"	d
__SEARCH_H__	/home/jasta/c/giFT/FT/search.h	2;"	d
__SHARE_H	/home/jasta/c/giFT/ui/share.h	18;"	d
__SHARING_H	/home/jasta/c/giFT/src/sharing.h	18;"	d
__STATS_H	/home/jasta/c/giFT/ui/stats.h	18;"	d
__TRANSFER_H	/home/jasta/c/giFT/src/transfer.h	18;"	d
__TRANSFER_H	/home/jasta/c/giFT/ui/transfer.h	18;"	d
__UI_H	/home/jasta/c/giFT/ui/ui.h	18;"	d
__UI_UTILS_H	/home/jasta/c/giFT/ui/ui_utils.h	18;"	d
__UPLOAD_H	/home/jasta/c/giFT/src/upload.h	18;"	d
__UPLOAD_H	/home/jasta/c/giFT/ui/upload.h	18;"	d
__UTILS_H	/home/jasta/c/giFT/OpenFT/utils.h	18;"	d
__UTILS_H	/home/jasta/c/giFT/ui/utils.h	18;"	d
__WATCH_H	/home/jasta/c/giFT/src/watch.h	18;"	d
__WIN32_SUPPORT_H__	/home/jasta/c/giFT/src/win32_support.h	18;"	d
__u32	/home/jasta/c/giFT/FT/ft.h	/^typedef unsigned int	__u32;$/;"	t
_chunk	/home/jasta/c/giFT/src/transfer.h	/^typedef struct _chunk$/;"	s
_connection	/home/jasta/c/giFT/src/connection.h	/^typedef struct _connection$/;"	s
_daemon_event	/home/jasta/c/giFT/FT/daemon.c	/^struct _daemon_event$/;"	s	file:
_daemon_event	/home/jasta/c/giFT/OpenFT/daemon.c	/^struct _daemon_event$/;"	s	file:
_daemon_event	/home/jasta/c/giFT/ui/daemon.h	/^typedef struct _daemon_event$/;"	s
_dc_event	/home/jasta/c/giFT/src/daemon.c	/^struct _dc_event$/;"	s	file:
_fe_connection	/home/jasta/c/giFT/ui/feconnect.h	/^typedef struct _fe_connection {$/;"	s
_fe_ev_handler	/home/jasta/c/giFT/ui/daemon.c	/^struct _fe_ev_handler$/;"	s	file:
_file_share	/home/jasta/c/giFT/src/sharing.h	/^typedef struct _file_share$/;"	s
_free_table	/home/jasta/c/giFT/ui/obj.c	/^struct _free_table {$/;"	s	file:
_handler_table	/home/jasta/c/giFT/OpenFT/protocol.c	/^struct _handler_table$/;"	s	file:
_hash_node	/home/jasta/c/giFT/src/hash.h	/^typedef struct _hash_node$/;"	s
_hash_table	/home/jasta/c/giFT/src/hash.h	/^typedef struct _hash_table$/;"	s
_if_event	/home/jasta/c/giFT/src/if_event.h	/^typedef struct _if_event$/;"	s
_interface_event	/home/jasta/c/giFT/src/interface.h	/^typedef struct _interface_event$/;"	s
_list	/home/jasta/c/giFT/src/list.h	/^typedef struct _list$/;"	s
_match_data	/home/jasta/c/giFT/OpenFT/search.c	/^struct _match_data$/;"	s	file:
_mime_type	/home/jasta/c/giFT/src/mime.c	/^struct _mime_type$/;"	s	file:
_netstat	/home/jasta/c/giFT/FT/ft.h	/^}_netstat;$/;"	t
_object_data	/home/jasta/c/giFT/ui/obj.h	/^typedef struct _object_data$/;"	s
_protocol	/home/jasta/c/giFT/src/protocol.h	/^typedef struct _protocol$/;"	s
_search	/home/jasta/c/giFT/FT/search.h	/^typedef struct _search$/;"	s
_search	/home/jasta/c/giFT/OpenFT/search.h	/^typedef struct _search$/;"	s
_shared_file	/home/jasta/c/giFT/ui/share.h	/^typedef struct _shared_file$/;"	s
_source	/home/jasta/c/giFT/src/transfer.h	/^typedef struct _source$/;"	s
_stats	/home/jasta/c/giFT/OpenFT/daemon.c	/^struct _stats$/;"	s	file:
_transfer	/home/jasta/c/giFT/src/transfer.h	/^typedef struct _transfer$/;"	s
_transfer_type	/home/jasta/c/giFT/src/transfer.h	/^typedef enum _transfer_type$/;"	g
_write_queue	/home/jasta/c/giFT/src/queue.h	/^typedef struct _write_queue$/;"	s
accept_test_port	/home/jasta/c/giFT/OpenFT/utils.c	/^static void accept_test_port (Connection *c, unsigned short port,$/;"	f	file:
accept_test_result	/home/jasta/c/giFT/OpenFT/utils.c	/^static void accept_test_result (Connection *c, Connection *verify, int success)$/;"	f	file:
accept_test_verify	/home/jasta/c/giFT/OpenFT/utils.c	/^static void accept_test_verify (Protocol *p, Connection *verify)$/;"	f	file:
access_log	/home/jasta/c/giFT/OpenFT/http.c	/^static void access_log (OpenFT_Transfer *xfer, int status_code,$/;"	f	file:
access_log_format_time	/home/jasta/c/giFT/FT/http.c	/^static char *access_log_format_time (time_t log_time)$/;"	f	file:
access_log_format_time	/home/jasta/c/giFT/OpenFT/http.c	/^static char *access_log_format_time (time_t log_time)$/;"	f	file:
active	/home/jasta/c/giFT/src/transfer.h	/^	int           active;    \/* inactive chunks have been divided, but no$/;"	m	struct:_chunk
active	/home/jasta/c/giFT/src/transfer.h	/^	int           active;   \/* inactive when first created with 0 sources *\/$/;"	m	struct:_transfer
active	/home/jasta/c/giFT/src/transfer.h	/^	int       active;        \/* currently being used *\/$/;"	m	struct:_source
active	/home/jasta/c/giFT/ui/transfer.h	/^	int active;             \/* pending state   *\/$/;"	m	struct:
active_searches	/home/jasta/c/giFT/FT/ft.h	/^HashTable *active_searches;$/;"	v
active_searches	/home/jasta/c/giFT/OpenFT/search.c	/^static HashTable *active_searches = NULL;$/;"	v	file:
add_conn	/home/jasta/c/giFT/src/if_event.c	/^static int add_conn (unsigned long key, IFEvent *event, Connection *c)$/;"	f	file:
add_share	/home/jasta/c/giFT/src/sharing.c	/^static int add_share (FILE *f, char *root, char *path,$/;"	f	file:
add_source	/home/jasta/c/giFT/src/download.c	/^static void add_source (Transfer *transfer, Source *source)$/;"	f	file:
add_sources	/home/jasta/c/giFT/ui/download.c	/^static void add_sources (FEConnection *c, Transfer *obj,$/;"	f	file:
addr	/home/jasta/c/giFT/FT/ft.h	/^	unsigned int addr;$/;"	m	struct:
addr	/home/jasta/c/giFT/FT/search.h	/^    struct sockaddr_in addr;$/;"	m	struct:s_QueryResponse
array	/home/jasta/c/giFT/FT/ft.h	/^	unsigned char array[0x100];	\/\/we use just 64 bytes$/;"	m	struct:
array_for_crypt1	/home/jasta/c/giFT/FT/crypt.c	/^unsigned int array_for_crypt1[] =$/;"	v
array_for_crypt8	/home/jasta/c/giFT/FT/crypt.c	/^unsigned int array_for_crypt8[] =$/;"	v
attach	/home/jasta/c/giFT/src/daemon.c	/^EV_HANDLER (attach);$/;"	v
attached	/home/jasta/c/giFT/src/watch.c	/^static List *attached = NULL;$/;"	v	file:
back_to_forward_slashes	/home/jasta/c/giFT/src/win32_support.c	/^static void back_to_forward_slashes (char *str)$/;"	f	file:
bandwidthtag	/home/jasta/c/giFT/FT/search.h	/^    byte bandwidthtag;$/;"	m	struct:
bits	/home/jasta/c/giFT/src/md5.h	/^	uint32 bits[2];$/;"	m	struct:MD5Context
broadcast_search	/home/jasta/c/giFT/OpenFT/daemon.c	/^static Connection *broadcast_search (Connection *c, Node *node, Search *search)$/;"	f	file:
broadcast_status	/home/jasta/c/giFT/OpenFT/daemon.c	/^static Connection *broadcast_status (Connection *c, Node *node, void *data)$/;"	f	file:
buf	/home/jasta/c/giFT/src/md5.h	/^	uint32 buf[4];$/;"	m	struct:MD5Context
buffer	/home/jasta/c/giFT/src/queue.h	/^	List          *buffer;$/;"	m	struct:_write_queue
buildComplexQuery	/home/jasta/c/giFT/FT/search.c	/^int buildComplexQuery(ComplexQuery cq, QueryTermType type, byte field,$/;"	f
build_nodelist	/home/jasta/c/giFT/OpenFT/html.c	/^static Connection *build_nodelist (Connection *c, Node *node, FILE *f)$/;"	f	file:
build_shares	/home/jasta/c/giFT/OpenFT/html.c	/^static int build_shares (FileShare *file, FILE *f)$/;"	f	file:
build_sroot	/home/jasta/c/giFT/src/sharing.c	/^static void build_sroot ()$/;"	f	file:
byte	/home/jasta/c/giFT/FT/ft.h	/^typedef unsigned char	byte;$/;"	t
byteReverse	/home/jasta/c/giFT/src/md5.c	/^void byteReverse(unsigned char *buf, unsigned longs)$/;"	f
byteReverse	/home/jasta/c/giFT/src/md5.c	36;"	d	file:
c	/home/jasta/c/giFT/FT/http.h	/^	Connection    *c;$/;"	m	struct:
c	/home/jasta/c/giFT/OpenFT/http.h	/^	Connection    *c;$/;"	m	struct:
c	/home/jasta/c/giFT/src/if_event.h	/^	Connection *c;$/;"	m	struct:_if_event
c	/home/jasta/c/giFT/src/interface.h	/^	Connection        *c;$/;"	m	struct:_interface_event
c	/home/jasta/c/giFT/src/queue.h	/^	Connection    *c;$/;"	m	struct:_write_queue
calc_next_timer	/home/jasta/c/giFT/src/event.c	/^static int calc_next_timer (unsigned long key, Timer *timer,$/;"	f	file:
calc_node_len	/home/jasta/c/giFT/ui/ui_utils.c	/^static void calc_node_len (GtkCTree *ctree, GtkCTreeNode *node, int *len)$/;"	f	file:
calculate_ext	/home/jasta/c/giFT/src/sharing.c	/^static char *calculate_ext (char *path)$/;"	f	file:
calculate_final_path	/home/jasta/c/giFT/src/download.c	/^static char *calculate_final_path (Transfer *transfer)$/;"	f	file:
calculate_hpath	/home/jasta/c/giFT/src/sharing.c	/^static char *calculate_hpath (char *root, char *filename)$/;"	f	file:
calculate_num	/home/jasta/c/giFT/FT/crypt.c	/^calculate_num(unsigned int *num, int val)$/;"	f	file:
calculate_num_xor	/home/jasta/c/giFT/FT/crypt.c	/^calculate_num_xor(__u32 seed)$/;"	f
calculate_root	/home/jasta/c/giFT/src/sharing.c	/^static char *calculate_root (char *filename)$/;"	f	file:
calculate_transfer_info	/home/jasta/c/giFT/ui/utils.c	/^char *calculate_transfer_info (size_t transmit, size_t total,$/;"	f
callback	/home/jasta/c/giFT/FT/http.h	/^	OpenFT_TransferCB callback;$/;"	m	struct:
callback	/home/jasta/c/giFT/OpenFT/http.h	/^	OpenFT_TransferCB callback;$/;"	m	struct:
callback	/home/jasta/c/giFT/src/event.h	/^	InputCallback callback;$/;"	m	struct:
callback	/home/jasta/c/giFT/src/event.h	/^	TimerCallback callback;$/;"	m	struct:
callback	/home/jasta/c/giFT/src/protocol.h	/^    void (*callback) (struct _protocol *p, struct _connection *c,$/;"	m	struct:_protocol
callback	/home/jasta/c/giFT/ui/feconnect.h	/^	FEConnectionCallback callback;$/;"	m	struct:_fe_connection
cb	/home/jasta/c/giFT/FT/daemon.c	/^	EventCallback cb;$/;"	m	struct:_daemon_event	file:
cb	/home/jasta/c/giFT/OpenFT/daemon.c	/^	EventCallback cb;$/;"	m	struct:_daemon_event	file:
cb	/home/jasta/c/giFT/src/daemon.c	/^	EventCallback  cb;$/;"	m	struct:_dc_event	file:
cb	/home/jasta/c/giFT/ui/daemon.c	/^	FEEventHandler  cb;$/;"	m	struct:_fe_ev_handler	file:
cb	/home/jasta/c/giFT/ui/daemon.h	/^	ParsePacketFunc cb;$/;"	m	struct:_daemon_event
checksum	/home/jasta/c/giFT/FT/search.h	/^    size_t checksum;$/;"	m	struct:
children_length	/home/jasta/c/giFT/ui/utils.c	/^int children_length (GtkCTreeNode *parent)$/;"	f
chunk_cancel	/home/jasta/c/giFT/src/transfer.c	/^void chunk_cancel (Chunk *chunk)$/;"	f
chunk_free	/home/jasta/c/giFT/src/transfer.c	/^void chunk_free (Chunk *chunk)$/;"	f
chunk_new	/home/jasta/c/giFT/src/transfer.c	/^Chunk *chunk_new (Transfer *transfer, Source *source,$/;"	f
chunk_write	/home/jasta/c/giFT/src/transfer.c	/^void chunk_write (Chunk *chunk, char *segment, size_t len)$/;"	f
chunks	/home/jasta/c/giFT/src/transfer.h	/^	List         *chunks;   \/* partitioned download segments *\/$/;"	m	struct:_transfer
class_request	/home/jasta/c/giFT/OpenFT/protocol.c	/^FT_HANDLER (class_request);$/;"	v
class_response	/home/jasta/c/giFT/OpenFT/protocol.c	/^FT_HANDLER (class_response);$/;"	v
cleanup	/home/jasta/c/giFT/src/event.c	/^static void cleanup (List **source_list)$/;"	f	file:
cleanup_conn	/home/jasta/c/giFT/OpenFT/openft.c	/^static Connection *cleanup_conn (Connection *c, Node *node, void *data)$/;"	f	file:
clock_cipher	/home/jasta/c/giFT/FT/crypt.c	/^clock_cipher(con_key* con_key)$/;"	f	file:
close_conn	/home/jasta/c/giFT/src/if_event.c	/^static int close_conn (unsigned long key, IFEvent *event, Connection *c)$/;"	f	file:
closest_prime	/home/jasta/c/giFT/src/hash.c	/^static unsigned int closest_prime (unsigned int num)$/;"	f	file:
closing	/home/jasta/c/giFT/src/connection.h	/^	int               closing;   \/* state when this socket is currently$/;"	m	struct:_connection
cmp_config_header	/home/jasta/c/giFT/src/conf.c	/^static int cmp_config_header (ConfigHeader *a, char *b)$/;"	f	file:
command	/home/jasta/c/giFT/OpenFT/packet.h	/^	ft_uint16 command;$/;"	m	struct:
command	/home/jasta/c/giFT/OpenFT/protocol.c	/^	ft_uint16       command;$/;"	m	struct:_handler_table	file:
compileComplexQuery	/home/jasta/c/giFT/FT/search.c	/^byte* compileComplexQuery(ComplexQuery cq, size_t *outmsglenp)$/;"	f
complete	/home/jasta/c/giFT/src/event.h	/^	int           complete; \/* complete is FALSE until first state change *\/$/;"	m	struct:
con_est	/home/jasta/c/giFT/FT/ft.h	/^	int con_est; \/\/connection established$/;"	m	struct:
con_key	/home/jasta/c/giFT/FT/ft.h	/^}con_key;$/;"	t
con_stage	/home/jasta/c/giFT/FT/ft.h	/^	int con_stage;$/;"	m	struct:
condition	/home/jasta/c/giFT/ui/feconnect.h	/^	GdkInputCondition condition;$/;"	m	struct:_fe_connection
confhdr	/home/jasta/c/giFT/src/conf.h	/^	ConfigHeader *confhdr; \/* header "cursor" *\/$/;"	m	struct:
config	/home/jasta/c/giFT/src/main.c	/^static int config (const char *module)$/;"	f	file:
config_free	/home/jasta/c/giFT/src/conf.c	/^void config_free (Config *conf)$/;"	f
config_get_int	/home/jasta/c/giFT/src/conf.c	/^int config_get_int (Config *conf, char *keypath)$/;"	f
config_get_str	/home/jasta/c/giFT/src/conf.c	/^char *config_get_str (Config *conf, char *keypath)$/;"	f
config_header_new	/home/jasta/c/giFT/src/conf.c	/^static ConfigHeader *config_header_new (char *line)$/;"	f	file:
config_headers_clear	/home/jasta/c/giFT/src/conf.c	/^static void config_headers_clear (Config *conf)$/;"	f	file:
config_headers_read	/home/jasta/c/giFT/src/conf.c	/^static void config_headers_read (Config *conf)$/;"	f	file:
config_keys_read	/home/jasta/c/giFT/src/conf.c	/^static void config_keys_read (Config *conf)$/;"	f	file:
config_lookup	/home/jasta/c/giFT/src/conf.c	/^static char *config_lookup (Config *conf, ConfigHeader **confhdr_out,$/;"	f	file:
config_new	/home/jasta/c/giFT/src/conf.c	/^Config *config_new (char *file)$/;"	f
config_parse_keypath	/home/jasta/c/giFT/src/conf.c	/^static char *config_parse_keypath (char *keypath, char **header_out,$/;"	f	file:
config_set_int	/home/jasta/c/giFT/src/conf.c	/^void config_set_int (Config *conf, char *keypath, int value)$/;"	f
config_set_str	/home/jasta/c/giFT/src/conf.c	/^void config_set_str (Config *conf, char *keypath, char *value)$/;"	f
config_update	/home/jasta/c/giFT/src/conf.c	/^static void config_update (Config *conf)$/;"	f	file:
conn_add	/home/jasta/c/giFT/OpenFT/netorg.c	/^void conn_add (Connection *c)$/;"	f
conn_auth	/home/jasta/c/giFT/OpenFT/netorg.c	/^int conn_auth (Connection *c, int outgoing)$/;"	f
conn_clear	/home/jasta/c/giFT/OpenFT/netorg.c	/^void conn_clear (ConnForeachFunc func)$/;"	f
conn_clear_entry	/home/jasta/c/giFT/OpenFT/netorg.c	/^static int conn_clear_entry (Connection *c, void *udata)$/;"	f	file:
conn_counter	/home/jasta/c/giFT/OpenFT/netorg.c	/^static Connection *conn_counter (Connection *c, Node *node, int *length)$/;"	f	file:
conn_foreach	/home/jasta/c/giFT/OpenFT/netorg.c	/^Connection *conn_foreach (ConnForeachFunc func, void *user_data,$/;"	f
conn_length	/home/jasta/c/giFT/OpenFT/netorg.c	/^int conn_length (unsigned short klass, unsigned short state)$/;"	f
conn_maintain	/home/jasta/c/giFT/OpenFT/netorg.c	/^void conn_maintain ()$/;"	f
conn_remove	/home/jasta/c/giFT/OpenFT/netorg.c	/^void conn_remove (Connection *c)$/;"	f
conn_sort	/home/jasta/c/giFT/OpenFT/netorg.c	/^void conn_sort (CompareFunc func)$/;"	f
conn_sort_vit	/home/jasta/c/giFT/OpenFT/openft.c	/^static int conn_sort_vit (Connection *a, Connection *b)$/;"	f	file:
connect_callback	/home/jasta/c/giFT/ui/feconnect.c	/^static void connect_callback (FEConnection *c, int source,$/;"	f	file:
connect_out	/home/jasta/c/giFT/FT/ft.c	/^void connect_out (Protocol *p)$/;"	f
connect_verify	/home/jasta/c/giFT/ui/feconnect.c	/^static void connect_verify (FEConnection *c, int source,$/;"	f	file:
connection_deliver	/home/jasta/c/giFT/FT/http.c	/^static int connection_deliver (Protocol *p, Connection *c)$/;"	f	file:
connection_deliver	/home/jasta/c/giFT/OpenFT/http.c	/^static int connection_deliver (Protocol *p, Connection *c)$/;"	f	file:
connection_destroy	/home/jasta/c/giFT/src/connection.c	/^void connection_destroy (Connection *c)$/;"	f
connection_dissable	/home/jasta/c/giFT/FT/ft.h	/^	int connection_dissable;	\/\/ connection enable\/dissable$/;"	m	struct:
connection_establish	/home/jasta/c/giFT/FT/ft_ClientConnect.c	/^void connection_establish(Protocol *p,Connection *my_con)$/;"	f
connection_free	/home/jasta/c/giFT/src/connection.c	/^void connection_free (Connection *c)$/;"	f
connection_new	/home/jasta/c/giFT/src/connection.c	/^Connection *connection_new (Protocol *p)$/;"	f
connection_remove	/home/jasta/c/giFT/FT/ft.c	/^void connection_remove(Protocol *p,Connection *my_con)$/;"	f
connections	/home/jasta/c/giFT/FT/ft.h	/^List *connections;$/;"	v
connections	/home/jasta/c/giFT/OpenFT/daemon.c	/^	int connections;$/;"	m	struct:_stats	file:
connections	/home/jasta/c/giFT/OpenFT/netorg.c	/^static List *connections = NULL;$/;"	v	file:
connections	/home/jasta/c/giFT/src/if_event.h	/^	List *connections;$/;"	m	struct:_if_event
constraint_parse	/home/jasta/c/giFT/OpenFT/daemon.c	/^static void constraint_parse (char *str, size_t *min, size_t *max)$/;"	f	file:
construct_main	/home/jasta/c/giFT/ui/ui.c	/^int construct_main (FTApp *ft, char *title, char *cls)$/;"	f
construct_media_filter	/home/jasta/c/giFT/ui/ui.c	/^static GtkWidget *construct_media_filter ()$/;"	f	file:
counter1	/home/jasta/c/giFT/FT/ft.h	/^	unsigned int counter1;$/;"	m	struct:
counter2	/home/jasta/c/giFT/FT/ft.h	/^	unsigned char counter2;$/;"	m	struct:
createComplexQuery	/home/jasta/c/giFT/FT/search.c	/^ComplexQuery createComplexQuery(unsigned short maxresults, unsigned short qid)$/;"	f
create_header	/home/jasta/c/giFT/FT/ft_packet.c	/^void create_header( Connection *my_con, int packet_type, int packet_len)$/;"	f
ctoh	/home/jasta/c/giFT/FT/daemon.c	/^static int ctoh(char c)$/;"	f	file:
ctree_node_child_length	/home/jasta/c/giFT/ui/ui_utils.c	/^int ctree_node_child_length (GtkWidget *ctree, GtkCTreeNode *node)$/;"	f
d	/home/jasta/c/giFT/FT/search.h	/^    FileDescription d;$/;"	m	struct:
daemon_conn	/home/jasta/c/giFT/ui/daemon.c	/^static FEConnection   *daemon_conn = NULL;$/;"	v	file:
daemon_connect	/home/jasta/c/giFT/ui/daemon.c	/^FEConnection *daemon_connect (FEConnectionCallback cb, void *data)$/;"	f
daemon_connection	/home/jasta/c/giFT/ui/daemon.c	/^static int daemon_connection (int sock, FEConnection *c)$/;"	f	file:
daemon_event_add	/home/jasta/c/giFT/ui/daemon.c	/^static void daemon_event_add (DaemonEvent *event)$/;"	f	file:
daemon_event_new	/home/jasta/c/giFT/ui/daemon.c	/^static DaemonEvent *daemon_event_new (ParsePacketFunc cb, void *obj,$/;"	f	file:
daemon_event_remove	/home/jasta/c/giFT/ui/daemon.c	/^void daemon_event_remove (unsigned long id)$/;"	f
daemon_events	/home/jasta/c/giFT/FT/daemon.c	/^daemon_events[] =$/;"	v
daemon_events	/home/jasta/c/giFT/OpenFT/daemon.c	/^daemon_events[] =$/;"	v
daemon_handle_packet	/home/jasta/c/giFT/ui/daemon.c	/^static int daemon_handle_packet (FEConnection *c, char *head, int keys,$/;"	f	file:
daemon_host	/home/jasta/c/giFT/ui/daemon.c	/^static char           *daemon_host = NULL;$/;"	v	file:
daemon_interface	/home/jasta/c/giFT/ui/daemon.c	/^FEConnection *daemon_interface ()$/;"	f
daemon_parse_packet	/home/jasta/c/giFT/ui/daemon.c	/^static char *daemon_parse_packet (GData **datalist, char *packet, int *keys)$/;"	f	file:
daemon_ping	/home/jasta/c/giFT/FT/daemon.c	/^EV_HANDLER (daemon_ping);$/;"	v
daemon_port	/home/jasta/c/giFT/ui/daemon.c	/^static unsigned short  daemon_port = 0;$/;"	v	file:
daemon_promote	/home/jasta/c/giFT/OpenFT/daemon.c	/^EV_HANDLER (daemon_promote);$/;"	v
daemon_request	/home/jasta/c/giFT/ui/daemon.c	/^int daemon_request (ParsePacketFunc cb, void *event_obj, void *udata,$/;"	f
daemon_search	/home/jasta/c/giFT/FT/daemon.c	/^EV_HANDLER (daemon_search);$/;"	v
daemon_search	/home/jasta/c/giFT/OpenFT/daemon.c	/^EV_HANDLER (daemon_search);$/;"	v
daemon_set_primary	/home/jasta/c/giFT/ui/daemon.c	/^void daemon_set_primary (char *host, unsigned short port)$/;"	f
daemon_share	/home/jasta/c/giFT/OpenFT/daemon.c	/^EV_HANDLER (daemon_share);$/;"	v
daemon_stats	/home/jasta/c/giFT/FT/daemon.c	/^EV_HANDLER (daemon_stats);$/;"	v
daemon_stats	/home/jasta/c/giFT/OpenFT/daemon.c	/^EV_HANDLER (daemon_stats);$/;"	v
data	/home/jasta/c/giFT/FT/search.h	/^    byte *data;$/;"	m	struct:
data	/home/jasta/c/giFT/OpenFT/packet.h	/^	char data[1]; \/* pointer trickery.  len bytes after this are still our$/;"	m	struct:
data	/home/jasta/c/giFT/src/connection.h	/^	void             *data;      \/* the data that the connection needs (e.g.$/;"	m	struct:_connection
data	/home/jasta/c/giFT/src/event.h	/^	Connection   *data;$/;"	m	struct:
data	/home/jasta/c/giFT/src/event.h	/^	void         *data;$/;"	m	struct:
data	/home/jasta/c/giFT/src/if_event.h	/^	void *data;$/;"	m	struct:_if_event
data	/home/jasta/c/giFT/src/interface.h	/^	void              *data;$/;"	m	struct:_interface_event
data	/home/jasta/c/giFT/src/list.h	/^	void *data;$/;"	m	struct:_list
data	/home/jasta/c/giFT/src/nb.h	/^   char *data;$/;"	m	struct:
data	/home/jasta/c/giFT/src/protocol.h	/^    void               *data;    \/* arbitrary data associated with this$/;"	m	struct:_protocol
data	/home/jasta/c/giFT/src/sharing.h	/^	Dataset      *data;$/;"	m	struct:_file_share
data	/home/jasta/c/giFT/src/transfer.h	/^	void         *data;      \/* protocol-specific data *\/$/;"	m	struct:_chunk
data	/home/jasta/c/giFT/ui/daemon.h	/^	void *data;$/;"	m	struct:_daemon_event
data	/home/jasta/c/giFT/ui/feconnect.h	/^	void *data;$/;"	m	struct:_fe_connection
data_cb	/home/jasta/c/giFT/ui/feconnect.h	/^	FEConnectionCallback data_cb;$/;"	m	struct:_fe_connection
data_dir	/home/jasta/c/giFT/src/win32_support.c	/^static char *data_dir = NULL;$/;"	v	file:
data_list	/home/jasta/c/giFT/ui/obj.h	/^	GData *data_list;$/;"	m	struct:_object_data
datalen	/home/jasta/c/giFT/src/nb.h	/^   int datalen;$/;"	m	struct:
dataset	/home/jasta/c/giFT/OpenFT/search.c	/^	Dataset   *dataset;$/;"	m	struct:_match_data	file:
dataset_clear	/home/jasta/c/giFT/src/dataset.h	42;"	d
dataset_clear_free	/home/jasta/c/giFT/src/dataset.h	45;"	d
dataset_insert	/home/jasta/c/giFT/src/dataset.h	35;"	d
dataset_insert_real	/home/jasta/c/giFT/src/dataset.c	/^void dataset_insert_real (Dataset *dataset, char *key, void *value)$/;"	f
dataset_key_remove	/home/jasta/c/giFT/src/dataset.c	/^static int dataset_key_remove (unsigned long key, void *value, void *udata)$/;"	f	file:
dataset_lookup	/home/jasta/c/giFT/src/dataset.c	/^void *dataset_lookup (Dataset *dataset, char *string)$/;"	f
dataset_new	/home/jasta/c/giFT/src/dataset.c	/^Dataset *dataset_new ()$/;"	f
dataset_remove	/home/jasta/c/giFT/src/dataset.c	/^void dataset_remove (Dataset *dataset, char *string)$/;"	f
dc_close	/home/jasta/c/giFT/src/protocol.h	/^	void (*dc_close) (struct _connection *c);$/;"	m	struct:_protocol
dc_con	/home/jasta/c/giFT/FT/ft.h	/^	Connection *dc_con;$/;"	m	struct:
dc_connection	/home/jasta/c/giFT/FT/ft.h	/^}dc_connection;$/;"	t
dc_connections	/home/jasta/c/giFT/FT/ft.h	/^List *dc_connections;$/;"	v
dc_events	/home/jasta/c/giFT/src/daemon.c	/^dc_events[] =$/;"	v
dc_handle_event	/home/jasta/c/giFT/src/daemon.c	/^void dc_handle_event (Protocol *p, Connection *c, Dataset *event)$/;"	f
decode_int	/home/jasta/c/giFT/FT/search.c	/^static unsigned int decode_int(byte **dp, size_t *lp)$/;"	f	file:
decrypt_packet	/home/jasta/c/giFT/FT/ft_packet.c	/^void decrypt_packet(Protocol *p,Connection *my_con)$/;"	f
desc	/home/jasta/c/giFT/src/mime.c	/^	char *desc;$/;"	m	struct:_mime_type	file:
destroy	/home/jasta/c/giFT/src/protocol.h	/^	void (*destroy)  (struct _protocol *p);$/;"	m	struct:_protocol
destroy_free	/home/jasta/c/giFT/src/hash.c	/^static int destroy_free (unsigned long key, char *value, void *udata)$/;"	f	file:
destroy_func	/home/jasta/c/giFT/src/queue.h	/^	QueueWriteFunc destroy_func;$/;"	m	struct:_write_queue
destroy_func	/home/jasta/c/giFT/ui/obj.c	/^	ObjDestroyFunc destroy_func;$/;"	m	struct:_free_table	file:
destroy_host_table	/home/jasta/c/giFT/OpenFT/share.c	/^static int destroy_host_table (unsigned long key, void *value, void *udata)$/;"	f	file:
destroy_sroot	/home/jasta/c/giFT/src/sharing.c	/^static void destroy_sroot ()$/;"	f	file:
destroying	/home/jasta/c/giFT/OpenFT/share.h	/^	int            destroying;$/;"	m	struct:
dialog_close	/home/jasta/c/giFT/ui/ui_utils.c	/^static void dialog_close (GtkWidget *button, GtkWidget *dialog)$/;"	f	file:
disable_source	/home/jasta/c/giFT/src/download.c	/^static void disable_source (Transfer *transfer, Source *source)$/;"	f	file:
dispatch_input	/home/jasta/c/giFT/src/event.c	/^static void dispatch_input (Input *input, InputState state, fd_set *set)$/;"	f	file:
dispatch_inputs	/home/jasta/c/giFT/src/event.c	/^static void dispatch_inputs (fd_set *rset, fd_set *wset, fd_set *xset)$/;"	f	file:
dispatch_timers	/home/jasta/c/giFT/src/event.c	/^static void dispatch_timers (time_t current_time)$/;"	f	file:
dl_frame	/home/jasta/c/giFT/ui/gift-fe.h	/^	GtkWidget *dl_frame;$/;"	m	struct:
dl_list	/home/jasta/c/giFT/ui/gift-fe.h	/^	GtkWidget *dl_list;$/;"	m	struct:
do_crypt	/home/jasta/c/giFT/FT/crypt.c	/^void do_crypt(con_key *con_key, char *data, size_t len)$/;"	f
download	/home/jasta/c/giFT/src/protocol.h	/^    void (*download) (struct _chunk *chunk);$/;"	m	struct:_protocol
download_add_source	/home/jasta/c/giFT/src/download.c	/^void download_add_source (Transfer *transfer, Source *source)$/;"	f
download_complete	/home/jasta/c/giFT/src/download.c	/^static void download_complete (Transfer *transfer)$/;"	f	file:
download_event_close	/home/jasta/c/giFT/src/download.c	/^static void download_event_close (IFEvent *event)$/;"	f	file:
download_free	/home/jasta/c/giFT/src/download.c	/^void download_free (Transfer *transfer, int premature)$/;"	f
download_handle_change	/home/jasta/c/giFT/src/download.c	/^static void download_handle_change (Transfer *transfer)$/;"	f	file:
download_insert	/home/jasta/c/giFT/ui/download.c	/^Transfer *download_insert (GtkWidget *dl_list, GtkCTreeNode *node_hint,$/;"	f
download_new	/home/jasta/c/giFT/src/download.c	/^Transfer *download_new (Connection *c, char *filename, unsigned long size)$/;"	f
download_read_state	/home/jasta/c/giFT/src/download.c	/^static Transfer *download_read_state (char *file)$/;"	f	file:
download_recover_state	/home/jasta/c/giFT/src/download.c	/^void download_recover_state ()$/;"	f
download_register	/home/jasta/c/giFT/src/download.c	/^static void download_register (Transfer *transfer, Connection *c)$/;"	f	file:
download_remove_source	/home/jasta/c/giFT/src/download.c	/^void download_remove_source (Transfer *transfer, char *url)$/;"	f
download_report	/home/jasta/c/giFT/src/download.c	/^static int download_report (Transfer *transfer)$/;"	f	file:
download_report_attached	/home/jasta/c/giFT/src/download.c	/^void download_report_attached (Connection *c)$/;"	f
download_response	/home/jasta/c/giFT/ui/download.c	/^int download_response (char *head, int keys, GData *dataset, DaemonEvent *event)$/;"	f
download_start	/home/jasta/c/giFT/ui/download.c	/^void download_start (GtkWidget *dl_list)$/;"	f
download_start_node	/home/jasta/c/giFT/ui/download.c	/^static void download_start_node (GtkCTree *ctree, GtkCTreeNode *node,$/;"	f	file:
download_stop	/home/jasta/c/giFT/src/download.c	/^void download_stop (Transfer *transfer, int cancel)$/;"	f
download_stop	/home/jasta/c/giFT/ui/download.c	/^void download_stop (Transfer *transfer, int cancel)$/;"	f
download_write	/home/jasta/c/giFT/src/download.c	/^void download_write (Chunk *chunk, char *segment, size_t len)$/;"	f
downloads	/home/jasta/c/giFT/src/download.c	/^static List *downloads = NULL;$/;"	v	file:
enc_type	/home/jasta/c/giFT/FT/ft.h	/^	int enc_type;$/;"	m	struct:
enc_ver	/home/jasta/c/giFT/FT/ft.h	/^	int enc_ver;$/;"	m	struct:
encoded	/home/jasta/c/giFT/FT/http.h	/^	char          *encoded;$/;"	m	struct:
encoded	/home/jasta/c/giFT/OpenFT/http.h	/^	char          *encoded;$/;"	m	struct:
encryption_handshake	/home/jasta/c/giFT/FT/ft_packet.c	/^int encryption_handshake(Connection *my_con, int *retu)$/;"	f
etokens	/home/jasta/c/giFT/OpenFT/search.h	/^	ft_uint32 *etokens;$/;"	m	struct:_search
ev_handlers	/home/jasta/c/giFT/ui/daemon.c	/^ev_handlers[] =$/;"	v
ev_id	/home/jasta/c/giFT/src/connection.h	/^	int               ev_id;     \/* event associated w\/ this connection *\/$/;"	m	struct:_connection
event	/home/jasta/c/giFT/ui/daemon.c	/^FE_EV_HANDLER (event);$/;"	v
event_loop	/home/jasta/c/giFT/src/event.c	/^void event_loop ()$/;"	f
event_quit	/home/jasta/c/giFT/src/event.c	/^void event_quit ()$/;"	f
event_table	/home/jasta/c/giFT/ui/daemon.c	/^static GHashTable     *event_table = NULL;$/;"	v	file:
events	/home/jasta/c/giFT/src/if_event.c	/^static HashTable *events     = NULL;$/;"	v	file:
exclude	/home/jasta/c/giFT/OpenFT/search.h	/^	char      *exclude;$/;"	m	struct:_search
expiration	/home/jasta/c/giFT/src/event.h	/^	int           expiration;$/;"	m	struct:
ext	/home/jasta/c/giFT/src/mime.c	/^	char *ext;$/;"	m	struct:_mime_type	file:
ext	/home/jasta/c/giFT/src/sharing.h	/^	char         *ext;    \/*                .mp3 (memory from path) *\/$/;"	m	struct:_file_share
f	/home/jasta/c/giFT/FT/http.h	/^	FILE          *f;$/;"	m	struct:
f	/home/jasta/c/giFT/OpenFT/http.h	/^	FILE          *f;$/;"	m	struct:
f	/home/jasta/c/giFT/src/transfer.h	/^	FILE         *f;        \/* read\/write file descriptor *\/$/;"	m	struct:_transfer
fd	/home/jasta/c/giFT/OpenFT/node.h	/^	int            fd;$/;"	m	struct:
fd	/home/jasta/c/giFT/src/connection.h	/^	int               fd;        \/* the file discriptor of the connection *\/$/;"	m	struct:_connection
fd	/home/jasta/c/giFT/src/event.h	/^	int           fd;$/;"	m	struct:
fd	/home/jasta/c/giFT/ui/feconnect.h	/^	int fd;$/;"	m	struct:_fe_connection
fe_connect_close	/home/jasta/c/giFT/ui/feconnect.c	/^int fe_connect_close (FEConnection *c)$/;"	f
fe_connect_dispatch	/home/jasta/c/giFT/ui/feconnect.c	/^FEConnection *fe_connect_dispatch (char *ip, unsigned short port,$/;"	f
field	/home/jasta/c/giFT/FT/search.h	/^    byte field;$/;"	m	struct:
file	/home/jasta/c/giFT/src/conf.h	/^	FILE         *file;$/;"	m	struct:
file_basename	/home/jasta/c/giFT/src/file.c	/^char *file_basename (char *file)$/;"	f
file_exists	/home/jasta/c/giFT/src/file.c	/^int file_exists (char *file, size_t *size, time_t *mtime)$/;"	f
file_read_line	/home/jasta/c/giFT/src/file.c	/^char *file_read_line (FILE *f, char **outbuf)$/;"	f
file_temp	/home/jasta/c/giFT/src/file.c	/^FILE *file_temp (char **out, char *module)$/;"	f
filename	/home/jasta/c/giFT/FT/http.h	/^	char          *filename;$/;"	m	struct:
filename	/home/jasta/c/giFT/OpenFT/http.h	/^	char          *filename;$/;"	m	struct:
filename	/home/jasta/c/giFT/src/transfer.h	/^	char         *filename; \/* the name of the file *\/$/;"	m	struct:_transfer
filename	/home/jasta/c/giFT/ui/share.h	/^	char *filename;  \/* displayed filename ... *\/$/;"	m	struct:_shared_file
files	/home/jasta/c/giFT/FT/ft.h	/^	unsigned int files;$/;"	m	struct:
files	/home/jasta/c/giFT/FT/search.h	/^    FileEntry *files;$/;"	m	struct:s_QueryResponse
files	/home/jasta/c/giFT/OpenFT/daemon.c	/^	unsigned long files;$/;"	m	struct:_stats	file:
filesize	/home/jasta/c/giFT/FT/search.h	/^    size_t filesize;$/;"	m	struct:
filesize	/home/jasta/c/giFT/ui/share.h	/^	size_t filesize; \/* total file size (in bytes) *\/$/;"	m	struct:_shared_file
find_inactive	/home/jasta/c/giFT/src/download.c	/^static int find_inactive (Transfer *a, Transfer *b)$/;"	f	file:
find_inactive_source	/home/jasta/c/giFT/src/download.c	/^static Source *find_inactive_source (Transfer *transfer)$/;"	f	file:
find_share_node	/home/jasta/c/giFT/ui/utils.c	/^GtkCTreeNode *find_share_node (char *hash, char *user, unsigned long size,$/;"	f
finished	/home/jasta/c/giFT/ui/transfer.h	/^	int finished;           \/* completed state *\/$/;"	m	struct:
firewalled	/home/jasta/c/giFT/OpenFT/node.h	/^	int            firewalled : 1;$/;"	m	struct:
flag	/home/jasta/c/giFT/src/nb.h	/^   int flag;$/;"	m	struct:
format_href_disp	/home/jasta/c/giFT/ui/utils.c	/^char *format_href_disp (char *href)$/;"	f
format_size_disp	/home/jasta/c/giFT/ui/utils.c	/^char *format_size_disp (char start_unit, size_t size)$/;"	f
format_user_disp	/home/jasta/c/giFT/ui/utils.c	/^char *format_user_disp (char *user)$/;"	f
freeComplexQuery	/home/jasta/c/giFT/FT/search.c	/^void freeComplexQuery(ComplexQuery *cqp)$/;"	f
freeFileEntry	/home/jasta/c/giFT/FT/search.c	/^static void freeFileEntry(FileEntry *fep)$/;"	f	file:
freeQueryResponse	/home/jasta/c/giFT/FT/search.c	/^void freeQueryResponse(QueryResponse *qrp)$/;"	f
free_key	/home/jasta/c/giFT/src/conf.c	/^static int free_key (unsigned long key, void *value, void *data)$/;"	f	file:
free_table	/home/jasta/c/giFT/ui/obj.c	/^free_table[] =$/;"	v
frozen	/home/jasta/c/giFT/src/hash.h	/^	int           frozen;$/;"	m	struct:_hash_table
ft_accept_test	/home/jasta/c/giFT/OpenFT/utils.c	/^void ft_accept_test (Connection *c)$/;"	f
ft_conf	/home/jasta/c/giFT/FT/ft.c	/^Config *ft_conf = NULL;$/;"	v
ft_connect	/home/jasta/c/giFT/OpenFT/utils.c	/^int ft_connect (Connection *c)$/;"	f
ft_daemon_callback	/home/jasta/c/giFT/FT/daemon.c	/^void ft_daemon_callback (Protocol *p, Connection *c, Dataset *event)$/;"	f
ft_daemon_callback	/home/jasta/c/giFT/OpenFT/daemon.c	/^void ft_daemon_callback (Protocol *p, Connection *c, Dataset *event)$/;"	f
ft_daemon_close	/home/jasta/c/giFT/OpenFT/openft.c	/^static void ft_daemon_close (Connection *c)$/;"	f	file:
ft_daemon_destroy	/home/jasta/c/giFT/FT/ft.c	/^ft_daemon_destroy (Protocol *p, Connection *c, Dataset *event)$/;"	f
ft_daemon_destroy	/home/jasta/c/giFT/OpenFT/openft.c	/^static void ft_daemon_destroy (Protocol *p)$/;"	f	file:
ft_daemon_download	/home/jasta/c/giFT/FT/ft.c	/^static void ft_daemon_download (Chunk *chunk)$/;"	f	file:
ft_daemon_download	/home/jasta/c/giFT/OpenFT/openft.c	/^static void ft_daemon_download (Chunk *chunk)$/;"	f	file:
ft_daemon_upload	/home/jasta/c/giFT/OpenFT/openft.c	/^static void ft_daemon_upload (Chunk *chunk)$/;"	f	file:
ft_data	/home/jasta/c/giFT/FT/ft.h	/^}ft_data;$/;"	t
ft_dc_close	/home/jasta/c/giFT/FT/ft.c	/^ft_dc_close (Protocol *p, Connection *c, Dataset *event)$/;"	f
ft_download	/home/jasta/c/giFT/FT/ft.c	/^void ft_download (Chunk *chunk, char *segment, size_t len)$/;"	f
ft_download	/home/jasta/c/giFT/OpenFT/openft.c	/^void ft_download (Chunk *chunk, char *segment, size_t len)$/;"	f
ft_handle_incoming	/home/jasta/c/giFT/OpenFT/utils.c	/^void ft_handle_incoming (Protocol *p, Connection *c)$/;"	f
ft_handle_popup	/home/jasta/c/giFT/ui/menu.c	/^int ft_handle_popup (GtkWidget *widget, GdkEventButton *event,$/;"	f
ft_handle_source	/home/jasta/c/giFT/OpenFT/utils.c	/^static void ft_handle_source (Protocol *p, Connection *c)$/;"	f	file:
ft_handle_verification	/home/jasta/c/giFT/OpenFT/utils.c	/^static int ft_handle_verification (Protocol *p, Connection *c)$/;"	f	file:
ft_initial_connect	/home/jasta/c/giFT/OpenFT/openft.c	/^static void ft_initial_connect ()$/;"	f	file:
ft_maint	/home/jasta/c/giFT/OpenFT/openft.c	/^static int ft_maint = -1;$/;"	v	file:
ft_node_connection	/home/jasta/c/giFT/OpenFT/node.c	/^void ft_node_connection (Protocol *p, Connection *c)$/;"	f
ft_packet_data	/home/jasta/c/giFT/OpenFT/packet.c	/^char *ft_packet_data (char *fmt, va_list args, int *len)$/;"	f
ft_packet_free	/home/jasta/c/giFT/OpenFT/packet.c	/^void ft_packet_free (FTPacket *packet)$/;"	f
ft_packet_get_int	/home/jasta/c/giFT/OpenFT/packet.c	/^ft_uint32 ft_packet_get_int (FTPacket *packet, size_t size, int host_order)$/;"	f
ft_packet_get_str	/home/jasta/c/giFT/OpenFT/packet.c	/^char *ft_packet_get_str (FTPacket *packet)$/;"	f
ft_packet_new	/home/jasta/c/giFT/OpenFT/packet.c	/^FTPacket *ft_packet_new (ft_uint16 ft_command, char *data, int len)$/;"	f
ft_packet_send	/home/jasta/c/giFT/OpenFT/packet.c	/^int ft_packet_send (Connection *c, unsigned short ft_command, char *fmt, ...)$/;"	f
ft_packet_send_constructed	/home/jasta/c/giFT/OpenFT/packet.c	/^int ft_packet_send_constructed (Connection *c, FTPacket *packet)$/;"	f
ft_packet_send_data	/home/jasta/c/giFT/OpenFT/packet.c	/^static int ft_packet_send_data (Connection *c, unsigned short ft_command,$/;"	f	file:
ft_packet_send_indirect	/home/jasta/c/giFT/OpenFT/packet.c	/^int ft_packet_send_indirect (unsigned long deliver_to,$/;"	f
ft_scrolled_window	/home/jasta/c/giFT/ui/utils.c	/^GtkWidget *ft_scrolled_window (GtkWidget *widget, GtkPolicyType hpolicy,$/;"	f
ft_search	/home/jasta/c/giFT/OpenFT/search.c	/^List *ft_search (size_t *r_size, int search_type,$/;"	f
ft_self	/home/jasta/c/giFT/FT/ft.c	/^Connection *ft_self = NULL;$/;"	v
ft_self	/home/jasta/c/giFT/OpenFT/openft.c	/^Connection *ft_self   = NULL;$/;"	v
ft_shares	/home/jasta/c/giFT/OpenFT/share.c	/^HashTable *ft_shares = NULL;$/;"	v
ft_start	/home/jasta/c/giFT/FT/ft.c	/^static Connection *ft_start (Protocol *p, unsigned short port)$/;"	f	file:
ft_start	/home/jasta/c/giFT/OpenFT/openft.c	/^static Connection *ft_start (unsigned short klass, unsigned short port)$/;"	f	file:
ft_uint16	/home/jasta/c/giFT/FT/ft.h	/^typedef unsigned short ft_uint16;$/;"	t
ft_uint16	/home/jasta/c/giFT/OpenFT/openft.h	/^typedef unsigned short ft_uint16;$/;"	t
ft_uint32	/home/jasta/c/giFT/FT/ft.h	/^typedef unsigned long  ft_uint32;$/;"	t
ft_uint32	/home/jasta/c/giFT/OpenFT/openft.h	/^typedef unsigned long  ft_uint32;$/;"	t
ft_uint8	/home/jasta/c/giFT/FT/ft.h	/^typedef unsigned char  ft_uint8;$/;"	t
ft_uint8	/home/jasta/c/giFT/OpenFT/openft.h	/^typedef unsigned char  ft_uint8;$/;"	t
ft_upload	/home/jasta/c/giFT/OpenFT/openft.c	/^void ft_upload (Chunk *chunk, char *segment, size_t len)$/;"	f
func	/home/jasta/c/giFT/OpenFT/protocol.c	/^	ProtocolHandler func;$/;"	m	struct:_handler_table	file:
func	/home/jasta/c/giFT/src/if_event.h	/^	IFEventFunc func;$/;"	m	struct:_if_event
func	/home/jasta/c/giFT/src/interface.h	/^	InterfaceCloseFunc func;$/;"	m	struct:_interface_event
func	/home/jasta/c/giFT/src/mortal.h	/^	MortalDestroyFunc func;$/;"	m	struct:
func	/home/jasta/c/giFT/src/queue.h	/^	QueueWriteFunc func;$/;"	m	struct:_write_queue
gather_stats	/home/jasta/c/giFT/OpenFT/daemon.c	/^static Connection *gather_stats (Connection *c, Node *node,$/;"	f	file:
gb	/home/jasta/c/giFT/FT/ft.h	/^	unsigned int gb;$/;"	m	struct:
generate_keys	/home/jasta/c/giFT/FT/crypt.c	/^void generate_keys(con_key *my_key)$/;"	f
generic_column_sort	/home/jasta/c/giFT/ui/utils.c	/^void generic_column_sort (GtkWidget *w, int column, char *sort_info)$/;"	f
generic_column_sort_int	/home/jasta/c/giFT/ui/utils.c	/^static int generic_column_sort_int (GtkCList *clist,$/;"	f	file:
generic_column_sort_str	/home/jasta/c/giFT/ui/utils.c	/^static int generic_column_sort_str (GtkCList *clist,$/;"	f	file:
get_next_host	/home/jasta/c/giFT/FT/ft.c	/^unsigned int get_next_host(char **ip, unsigned short *port)$/;"	f
get_qtype	/home/jasta/c/giFT/FT/daemon.c	/^static int get_qtype(char *value, QueryTermType *qtp)$/;"	f	file:
gift_conf	/home/jasta/c/giFT/src/main.c	/^Config         *gift_conf;        \/* main configuration file     *\/$/;"	v
gift_conf_path	/home/jasta/c/giFT/src/conf.c	/^char *gift_conf_path(char *fmt, ...)$/;"	f
gift_config_new	/home/jasta/c/giFT/src/conf.c	/^Config *gift_config_new (char *module)$/;"	f
gift_create_path	/home/jasta/c/giFT/src/conf.c	/^int gift_create_path (char *p)$/;"	f
gift_dir	/home/jasta/c/giFT/src/win32_support.c	/^static char *gift_dir = NULL;$/;"	v	file:
gift_expand_path	/home/jasta/c/giFT/src/conf.c	/^char *gift_expand_path (char *path)$/;"	f
gift_fe_conf	/home/jasta/c/giFT/ui/gift-fe.c	/^Config       *gift_fe_conf = NULL;$/;"	v
gift_find_home	/home/jasta/c/giFT/src/conf.c	/^char *gift_find_home ()$/;"	f
gift_message_box	/home/jasta/c/giFT/ui/ui_utils.c	/^int gift_message_box (char *title, char *message)$/;"	f
gift_setup_msg	/home/jasta/c/giFT/src/main.c	/^static void gift_setup_msg ()$/;"	f	file:
handle	/home/jasta/c/giFT/src/protocol.h	/^	void               *handle;$/;"	m	struct:_protocol
handle_heartbeat	/home/jasta/c/giFT/OpenFT/node.c	/^static Connection *handle_heartbeat (Connection *c, Node *node, void *udata)$/;"	f	file:
handle_timeout	/home/jasta/c/giFT/src/download.c	/^static void handle_timeout (Chunk *chunk, Transfer *transfer)$/;"	f	file:
hash	/home/jasta/c/giFT/FT/http.h	/^	char          *hash;$/;"	m	struct:
hash	/home/jasta/c/giFT/FT/search.h	/^    byte hash[20];$/;"	m	struct:
hash	/home/jasta/c/giFT/OpenFT/http.h	/^	char          *hash;$/;"	m	struct:
hash	/home/jasta/c/giFT/src/transfer.h	/^	char     *hash;          \/* 3da9f138de951c22c8a850899680a9e4       *\/$/;"	m	struct:_source
hash	/home/jasta/c/giFT/ui/share.h	/^	char *hash;      \/* unique hash for identifying this share *\/$/;"	m	struct:_shared_file
hash_direct	/home/jasta/c/giFT/src/hash.c	/^unsigned long hash_direct (unsigned long key)$/;"	f
hash_flatten	/home/jasta/c/giFT/src/hash.c	/^List *hash_flatten (HashTable *table)$/;"	f
hash_flatten_node	/home/jasta/c/giFT/src/hash.c	/^static int hash_flatten_node (unsigned long key, void *value, List **list)$/;"	f	file:
hash_func	/home/jasta/c/giFT/src/hash.h	/^	HashKeyFunc   hash_func;$/;"	m	struct:_hash_table
hash_node_destroy	/home/jasta/c/giFT/src/hash.c	/^static HashNode *hash_node_destroy (HashNode *node, HashTable *table)$/;"	f	file:
hash_node_new	/home/jasta/c/giFT/src/hash.c	/^static HashNode *hash_node_new (unsigned long key, void *value)$/;"	f	file:
hash_nodes_destroy	/home/jasta/c/giFT/src/hash.c	/^static void hash_nodes_destroy (HashNode *node, HashTable *table)$/;"	f	file:
hash_string	/home/jasta/c/giFT/src/hash.c	/^unsigned long hash_string (char *str)$/;"	f
hash_table_destroy	/home/jasta/c/giFT/src/hash.c	/^void hash_table_destroy (HashTable *table)$/;"	f
hash_table_destroy_free	/home/jasta/c/giFT/src/hash.c	/^void hash_table_destroy_free (HashTable *table)$/;"	f
hash_table_find	/home/jasta/c/giFT/src/hash.c	/^void *hash_table_find (HashTable *table, HashFunc func, void *udata)$/;"	f
hash_table_foreach	/home/jasta/c/giFT/src/hash.c	/^void hash_table_foreach (HashTable *table, HashFunc func, void *udata)$/;"	f
hash_table_foreach_remove	/home/jasta/c/giFT/src/hash.c	/^int hash_table_foreach_remove (HashTable *table, HashFunc func, void *udata)$/;"	f
hash_table_insert	/home/jasta/c/giFT/src/hash.c	/^void hash_table_insert (HashTable *table, unsigned long key, void *value)$/;"	f
hash_table_lookup	/home/jasta/c/giFT/src/hash.c	/^void *hash_table_lookup (HashTable *table, unsigned long key)$/;"	f
hash_table_lookup_node	/home/jasta/c/giFT/src/hash.c	/^static inline HashNode **hash_table_lookup_node (HashTable *table,$/;"	f	file:
hash_table_new	/home/jasta/c/giFT/src/hash.c	/^HashTable *hash_table_new ()$/;"	f
hash_table_remove	/home/jasta/c/giFT/src/hash.c	/^void hash_table_remove (HashTable *table, unsigned long key)$/;"	f
hash_table_resize	/home/jasta/c/giFT/src/hash.c	/^static void hash_table_resize (HashTable *table)$/;"	f	file:
header	/home/jasta/c/giFT/FT/http.h	/^	Dataset       *header;$/;"	m	struct:
header	/home/jasta/c/giFT/OpenFT/http.h	/^	Dataset       *header;$/;"	m	struct:
header_free	/home/jasta/c/giFT/FT/http.c	/^static void header_free (Dataset *dataset)$/;"	f	file:
header_free	/home/jasta/c/giFT/OpenFT/http.c	/^static void header_free (Dataset *dataset)$/;"	f	file:
header_parse	/home/jasta/c/giFT/FT/http.c	/^static void header_parse (Dataset *dataset, char *http_request)$/;"	f	file:
header_parse	/home/jasta/c/giFT/OpenFT/http.c	/^static void header_parse (Dataset *dataset, char *http_request)$/;"	f	file:
headers	/home/jasta/c/giFT/src/conf.h	/^	struct _list *headers;$/;"	m	struct:
heartbeat	/home/jasta/c/giFT/OpenFT/node.h	/^	int            heartbeat : 4;$/;"	m	struct:
hfile	/home/jasta/c/giFT/FT/ft.h	/^char *hfile;$/;"	v
host	/home/jasta/c/giFT/FT/ft.h	/^}host;$/;"	t
host	/home/jasta/c/giFT/FT/search.h	/^    struct sockaddr_in host;$/;"	m	struct:
host	/home/jasta/c/giFT/OpenFT/share.h	/^	unsigned long  host;       \/* ip of the user who owns this share *\/$/;"	m	struct:
hosts	/home/jasta/c/giFT/FT/ft.h	/^List *hosts;$/;"	v
hpath	/home/jasta/c/giFT/src/sharing.h	/^	char         *hpath;  \/*           \/file.mp3 (memory from path) *\/$/;"	m	struct:_file_share
html_page_index	/home/jasta/c/giFT/OpenFT/html.c	/^char *html_page_index (char *file)$/;"	f
html_page_redirect	/home/jasta/c/giFT/FT/html.c	/^char *html_page_redirect (char *page)$/;"	f
html_page_redirect	/home/jasta/c/giFT/OpenFT/html.c	/^char *html_page_redirect (char *page)$/;"	f
html_strip	/home/jasta/c/giFT/FT/html.c	/^char *html_strip (char *html)$/;"	f
html_strip	/home/jasta/c/giFT/OpenFT/html.c	/^char *html_strip (char *html)$/;"	f
html_update_nodepage	/home/jasta/c/giFT/FT/html.c	/^void html_update_nodepage ()$/;"	f
html_update_nodepage	/home/jasta/c/giFT/OpenFT/html.c	/^void html_update_nodepage ()$/;"	f
http_bind	/home/jasta/c/giFT/OpenFT/openft.c	/^Connection *http_bind = NULL;$/;"	v
http_cancel	/home/jasta/c/giFT/FT/http.c	/^void http_cancel (Chunk *chunk)$/;"	f
http_cancel	/home/jasta/c/giFT/OpenFT/http.c	/^void http_cancel (Chunk *chunk)$/;"	f
http_connection_close	/home/jasta/c/giFT/FT/http.c	/^static int http_connection_close (Connection *c, Chunk *chunk,$/;"	f	file:
http_connection_close	/home/jasta/c/giFT/OpenFT/http.c	/^static int http_connection_close (Connection *c, Chunk *chunk,$/;"	f	file:
http_handle_cgiquery	/home/jasta/c/giFT/OpenFT/http.c	/^char *http_handle_cgiquery (Connection *c, char *request)$/;"	f
http_handle_incoming	/home/jasta/c/giFT/OpenFT/http.c	/^void http_handle_incoming (Protocol *p, Connection *c)$/;"	f
http_port	/home/jasta/c/giFT/OpenFT/node.h	/^	unsigned short http_port;$/;"	m	struct:
http_port	/home/jasta/c/giFT/OpenFT/share.h	/^	unsigned short http_port;$/;"	m	struct:
http_port_verify	/home/jasta/c/giFT/OpenFT/node.h	/^	Connection    *http_port_verify;$/;"	m	struct:
http_pull_file	/home/jasta/c/giFT/FT/http.c	/^int http_pull_file (Chunk *chunk, char *source, int indirect)$/;"	f
http_pull_file	/home/jasta/c/giFT/OpenFT/http.c	/^int http_pull_file (Chunk *chunk, char *source, int indirect)$/;"	f
http_push_file	/home/jasta/c/giFT/OpenFT/http.c	/^int http_push_file (Chunk *chunk)$/;"	f
http_start	/home/jasta/c/giFT/OpenFT/openft.c	/^static Connection *http_start (unsigned short port)$/;"	f	file:
http_transfer_free	/home/jasta/c/giFT/FT/http.c	/^void http_transfer_free (OpenFT_Transfer *xfer)$/;"	f
http_transfer_free	/home/jasta/c/giFT/OpenFT/http.c	/^void http_transfer_free (OpenFT_Transfer *xfer)$/;"	f
http_transfer_new	/home/jasta/c/giFT/FT/http.c	/^OpenFT_Transfer *http_transfer_new (OpenFT_TransferCB cb,$/;"	f
http_transfer_new	/home/jasta/c/giFT/OpenFT/http.c	/^OpenFT_Transfer *http_transfer_new (OpenFT_TransferCB cb,$/;"	f
id	/home/jasta/c/giFT/FT/ft.h	/^	unsigned short id;$/;"	m	struct:
id	/home/jasta/c/giFT/FT/search.h	/^        unsigned long  id;  \/* the hash table this data structure is stored in is$/;"	m	struct:_search
id	/home/jasta/c/giFT/FT/search.h	/^    unsigned short id;$/;"	m	struct:s_QueryResponse
id	/home/jasta/c/giFT/OpenFT/search.h	/^	IFEventID  id;  \/* the hash table this data structure is stored in is$/;"	m	struct:_search
id	/home/jasta/c/giFT/src/event.h	/^	int           id;$/;"	m	struct:
id	/home/jasta/c/giFT/src/if_event.h	/^	IFEventID id;$/;"	m	struct:_if_event
id	/home/jasta/c/giFT/src/transfer.h	/^	IFEventID     id;$/;"	m	struct:_transfer
id	/home/jasta/c/giFT/ui/daemon.h	/^	unsigned long id;$/;"	m	struct:_daemon_event
id	/home/jasta/c/giFT/ui/obj.h	/^	unsigned long id;$/;"	m	struct:
id	/home/jasta/c/giFT/ui/search.h	/^	unsigned long id;$/;"	m	struct:
id	/home/jasta/c/giFT/ui/transfer.h	/^	unsigned long id;$/;"	m	struct:
id_counter	/home/jasta/c/giFT/src/if_event.c	/^static IFEventID  id_counter = 0;$/;"	v	file:
if_event_attach	/home/jasta/c/giFT/src/if_event.c	/^void if_event_attach (Connection *c)$/;"	f
if_event_close	/home/jasta/c/giFT/src/if_event.c	/^void if_event_close (Connection *c)$/;"	f
if_event_data	/home/jasta/c/giFT/src/if_event.c	/^void *if_event_data (IFEventID id)$/;"	f
if_event_free	/home/jasta/c/giFT/src/if_event.c	/^static void if_event_free (IFEvent *event)$/;"	f	file:
if_event_new	/home/jasta/c/giFT/src/if_event.c	/^IFEventID if_event_new (Connection *c, IFEventType type, IFEventFunc func,$/;"	f
if_event_remove	/home/jasta/c/giFT/src/if_event.c	/^void if_event_remove (IFEventID id)$/;"	f
if_event_reply	/home/jasta/c/giFT/src/if_event.c	/^void if_event_reply (IFEventID id, char *event_name, ...)$/;"	f
in	/home/jasta/c/giFT/src/md5.h	/^	unsigned char in[64];$/;"	m	struct:MD5Context
in_packet	/home/jasta/c/giFT/FT/ft.h	/^	packet_str in_packet;$/;"	m	struct:
in_value	/home/jasta/c/giFT/FT/ft.h	/^	__u32 in_value;$/;"	m	struct:
inc_key	/home/jasta/c/giFT/FT/ft.h	/^	con_key inc_key;$/;"	m	struct:
incoming	/home/jasta/c/giFT/OpenFT/node.h	/^	int            incoming : 1;$/;"	m	struct:
incoming_connection	/home/jasta/c/giFT/OpenFT/http.c	/^static int incoming_connection (Protocol *p, Connection *c)$/;"	f	file:
index_sort_cmp	/home/jasta/c/giFT/src/sharing.c	/^static int index_sort_cmp (FileShare *a, FileShare *b)$/;"	f	file:
indirect	/home/jasta/c/giFT/FT/http.h	/^	int            indirect;$/;"	m	struct:
indirect	/home/jasta/c/giFT/OpenFT/http.h	/^	int            indirect;$/;"	m	struct:
indirect_downloads	/home/jasta/c/giFT/FT/http.c	/^static Dataset *indirect_downloads = NULL;$/;"	v	file:
indirect_downloads	/home/jasta/c/giFT/OpenFT/http.c	/^static Dataset *indirect_downloads = NULL;$/;"	v	file:
input	/home/jasta/c/giFT/OpenFT/node.h	/^	int            input;$/;"	m	struct:
input	/home/jasta/c/giFT/ui/feconnect.h	/^	int input;$/;"	m	struct:_fe_connection
input_add	/home/jasta/c/giFT/src/event.c	/^void input_add (Protocol *p, Connection *c, InputState state,$/;"	f
input_find	/home/jasta/c/giFT/src/event.c	/^static Input *input_find (int fd, InputState state, InputCallback cb)$/;"	f	file:
input_remove	/home/jasta/c/giFT/src/event.c	/^void input_remove (Connection *c)$/;"	f
input_remove_full	/home/jasta/c/giFT/src/event.c	/^void input_remove_full (Connection *c, InputState state, InputCallback cb)$/;"	f
input_window	/home/jasta/c/giFT/src/win32_support.c	/^static HWND input_window;$/;"	v	file:
inputs	/home/jasta/c/giFT/src/event.c	/^static List      *inputs = NULL;$/;"	v	file:
inputs_free	/home/jasta/c/giFT/src/event.c	/^static List *inputs_free = NULL;$/;"	v	file:
interface_close	/home/jasta/c/giFT/src/interface.c	/^void interface_close (Connection *c)$/;"	f
interface_connection	/home/jasta/c/giFT/src/interface.c	/^static void interface_connection (Protocol *p, Connection *c)$/;"	f	file:
interface_construct_packet	/home/jasta/c/giFT/src/interface.c	/^char *interface_construct_packet (int *len, char *event, va_list args)$/;"	f
interface_handle_incoming	/home/jasta/c/giFT/src/interface.c	/^static void interface_handle_incoming (Protocol *p, Connection *c)$/;"	f	file:
interface_init	/home/jasta/c/giFT/src/interface.c	/^int interface_init (unsigned short port)$/;"	f
interface_parse_packet	/home/jasta/c/giFT/src/interface.c	/^int interface_parse_packet (Dataset **dataset, char *packet)$/;"	f
interface_send	/home/jasta/c/giFT/src/interface.c	/^void interface_send (Connection *c, char *event, ...)$/;"	f
interface_send_err	/home/jasta/c/giFT/src/interface.c	/^void interface_send_err (Connection *c, char *error)$/;"	f
interval	/home/jasta/c/giFT/src/event.h	/^	int           interval;$/;"	m	struct:
invert_strcmp	/home/jasta/c/giFT/src/dataset.c	/^static int invert_strcmp (char *a, char *b)$/;"	f	file:
ip	/home/jasta/c/giFT/FT/http.h	/^	unsigned long  ip;$/;"	m	struct:
ip	/home/jasta/c/giFT/OpenFT/http.h	/^	unsigned long  ip;$/;"	m	struct:
ip	/home/jasta/c/giFT/OpenFT/node.h	/^	unsigned long  ip;$/;"	m	struct:
items	/home/jasta/c/giFT/src/hash.h	/^	unsigned long items;$/;"	m	struct:_hash_table
iterator	/home/jasta/c/giFT/OpenFT/netorg.c	/^static List *iterator    = NULL;  \/* current "position" in connections *\/$/;"	v	file:
kbps_max	/home/jasta/c/giFT/OpenFT/search.h	/^	size_t     kbps_max;$/;"	m	struct:_search
kbps_min	/home/jasta/c/giFT/OpenFT/search.h	/^	size_t     kbps_min;$/;"	m	struct:_search
key	/home/jasta/c/giFT/FT/ft.h	/^	unsigned char key[64];	\/\/we use just 64 bytes$/;"	m	struct:
key	/home/jasta/c/giFT/src/hash.h	/^	unsigned long  key;$/;"	m	struct:_hash_node
key3	/home/jasta/c/giFT/FT/ft.h	/^	unsigned char key3[60];$/;"	m	struct:
key_as_host	/home/jasta/c/giFT/OpenFT/search.c	/^static int key_as_host (unsigned long key, Dataset *dataset,$/;"	f	file:
key_as_md5	/home/jasta/c/giFT/OpenFT/search.c	/^static int key_as_md5 (unsigned long key, FileShare *file,$/;"	f	file:
key_equal_func	/home/jasta/c/giFT/src/hash.h	/^	HashEqualFunc key_equal_func;$/;"	m	struct:_hash_table
key_h	/home/jasta/c/giFT/src/conf.h	/^	HKEY          key_h;$/;"	m	struct:
key_remove_func	/home/jasta/c/giFT/src/hash.h	/^	HashFunc      key_remove_func;$/;"	m	struct:_hash_table
keys	/home/jasta/c/giFT/src/conf.h	/^    struct _hash_table *keys;$/;"	m	struct:
last	/home/jasta/c/giFT/src/list.h	/^	struct _list *last;  \/* last node, for optimized append *\/$/;"	m	struct:_list
last_event	/home/jasta/c/giFT/ui/daemon.c	/^static DaemonEvent    *last_event  = NULL;$/;"	v	file:
lasttime	/home/jasta/c/giFT/FT/ft.h	/^	time_t lasttime;$/;"	m	struct:
len	/home/jasta/c/giFT/FT/search.h	/^    size_t len;$/;"	m	struct:
len	/home/jasta/c/giFT/OpenFT/packet.h	/^	ft_uint16 len;$/;"	m	struct:
len	/home/jasta/c/giFT/src/nb.h	/^   int len;$/;"	m	struct:
list_append	/home/jasta/c/giFT/src/list.c	/^List *list_append (List *list, void *data)$/;"	f
list_copy	/home/jasta/c/giFT/src/list.c	/^List *list_copy (List *list)$/;"	f
list_find	/home/jasta/c/giFT/src/list.c	/^List *list_find (List *list, void *data)$/;"	f
list_find_custom	/home/jasta/c/giFT/src/list.c	/^List *list_find_custom (List *list, void *data, CompareFunc func)$/;"	f
list_foreach	/home/jasta/c/giFT/src/list.c	/^void list_foreach (List *list, ListForeachFunc func, void *udata)$/;"	f
list_foreach_remove	/home/jasta/c/giFT/src/list.c	/^List *list_foreach_remove (List *list, ListForeachFunc func, void *udata)$/;"	f
list_free	/home/jasta/c/giFT/src/list.c	/^List *list_free (List *list)$/;"	f
list_last	/home/jasta/c/giFT/src/list.c	/^List *list_last (List *list)$/;"	f
list_length	/home/jasta/c/giFT/src/list.c	/^int list_length (List *list)$/;"	f
list_new_entry	/home/jasta/c/giFT/src/list.c	/^static List *list_new_entry (List *head, void *data)$/;"	f	file:
list_next	/home/jasta/c/giFT/src/list.h	20;"	d
list_nth_data	/home/jasta/c/giFT/src/list.c	/^void *list_nth_data (List *list, int nth)$/;"	f
list_prepend	/home/jasta/c/giFT/src/list.c	/^List *list_prepend (List *list, void *data)$/;"	f
list_prev	/home/jasta/c/giFT/src/list.h	21;"	d
list_remove	/home/jasta/c/giFT/src/list.c	/^List *list_remove (List *list, void *data)$/;"	f
list_remove_custom	/home/jasta/c/giFT/src/list.c	/^List *list_remove_custom (List *list, void *data, CompareFunc func)$/;"	f
list_shift	/home/jasta/c/giFT/src/list.c	/^List *list_shift (List *list, void **data)$/;"	f
list_sort	/home/jasta/c/giFT/src/list.c	/^List *list_sort (List *list, CompareFunc compare_func)$/;"	f
list_sort_default	/home/jasta/c/giFT/src/list.c	/^static int list_sort_default (char *a, char *b)$/;"	f	file:
list_sort_merge	/home/jasta/c/giFT/src/list.c	/^static List *list_sort_merge (List *l1, List *l2, CompareFunc compare_func)$/;"	f	file:
load_protocols	/home/jasta/c/giFT/src/main.c	/^static int load_protocols (List *fnames)$/;"	f	file:
load_save_hosts	/home/jasta/c/giFT/FT/misc.c	/^void load_save_hosts(char *path, int save)$/;"	f
load_types	/home/jasta/c/giFT/src/mime.c	/^static void load_types ()$/;"	f	file:
local_cleanup	/home/jasta/c/giFT/OpenFT/share.c	/^static int local_cleanup (unsigned long key, FileShare *file, void *udata)$/;"	f	file:
local_files	/home/jasta/c/giFT/src/sharing.c	/^static unsigned long local_files = 0;$/;"	v	file:
local_find_node	/home/jasta/c/giFT/OpenFT/share.c	/^static int local_find_node (unsigned long key, FileShare *file,$/;"	f	file:
local_import	/home/jasta/c/giFT/OpenFT/share.c	/^static int local_import (unsigned long key, FileShare *file, void *udata)$/;"	f	file:
local_shares	/home/jasta/c/giFT/src/sharing.c	/^static Dataset    *local_shares = NULL;$/;"	v	file:
local_size	/home/jasta/c/giFT/src/sharing.c	/^static double        local_size  = 0.0; \/* as MB *\/$/;"	v	file:
local_submit_destroy	/home/jasta/c/giFT/OpenFT/share.c	/^static void local_submit_destroy ()$/;"	f	file:
local_submit_write	/home/jasta/c/giFT/OpenFT/share.c	/^static void local_submit_write (Connection *c, FileShare *file, void *udata)$/;"	f	file:
locate_future_parent	/home/jasta/c/giFT/OpenFT/share.c	/^static Connection *locate_future_parent (Connection *c, Node *node,$/;"	f	file:
locate_node	/home/jasta/c/giFT/OpenFT/node.c	/^static Connection *locate_node (Connection *c, Node *node,$/;"	f	file:
locate_node	/home/jasta/c/giFT/OpenFT/packet.c	/^static Connection *locate_node (Connection *c, Node *node,$/;"	f	file:
location	/home/jasta/c/giFT/ui/share.h	/^	char *location;  \/* href location to this file *\/$/;"	m	struct:_shared_file
log_control	/home/jasta/c/giFT/src/win32_support.c	/^static HWND log_control;$/;"	v	file:
log_window	/home/jasta/c/giFT/src/win32_support.c	/^static HWND log_window;$/;"	v	file:
log_window_create	/home/jasta/c/giFT/src/win32_support.c	/^static void log_window_create (HINSTANCE instance)$/;"	f	file:
log_window_proc	/home/jasta/c/giFT/src/win32_support.c	/^static LRESULT CALLBACK log_window_proc (HWND window, UINT message,$/;"	f	file:
log_window_resize_controls	/home/jasta/c/giFT/src/win32_support.c	/^static void log_window_resize_controls ()$/;"	f	file:
log_window_show	/home/jasta/c/giFT/src/win32_support.c	/^static void log_window_show ()$/;"	f	file:
logfile	/home/jasta/c/giFT/FT/ft.h	/^FILE *logfile;$/;"	v
loop_running	/home/jasta/c/giFT/src/event.c	/^static int loop_running = 1;$/;"	v	file:
main	/home/jasta/c/giFT/src/main.c	/^int main (int argc, char **argv)$/;"	f
main	/home/jasta/c/giFT/ui/gift-fe.c	/^int main (int argc, char **argv)$/;"	f
make_cmp_int	/home/jasta/c/giFT/FT/daemon.c	/^static int make_cmp_int(char *value, QueryTermType *qtp, size_t *qlp, byte *qdata)$/;"	f	file:
match_filename	/home/jasta/c/giFT/OpenFT/search.c	/^static int match_filename (FileShare *file, Dataset *dataset)$/;"	f	file:
match_host	/home/jasta/c/giFT/OpenFT/search.c	/^static int match_host (FileShare *file, Dataset *dataset)$/;"	f	file:
match_md5	/home/jasta/c/giFT/OpenFT/search.c	/^static int match_md5 (FileShare *file, Dataset *dataset)$/;"	f	file:
max_seek	/home/jasta/c/giFT/src/transfer.h	/^	unsigned long max_seek; \/* current filesize according to the filesystem *\/$/;"	m	struct:_transfer
maxresults	/home/jasta/c/giFT/FT/search.h	/^    unsigned short maxresults;$/;"	m	struct:s_ComplexQuery
md5	/home/jasta/c/giFT/src/sharing.h	/^	char         *md5;$/;"	m	struct:_file_share
md5_append	/home/jasta/c/giFT/src/md5.h	32;"	d
md5_checksum	/home/jasta/c/giFT/src/md5.c	/^char *md5_checksum (char *path, unsigned long size)$/;"	f
md5_finish	/home/jasta/c/giFT/src/md5.h	33;"	d
md5_init	/home/jasta/c/giFT/src/md5.h	30;"	d
md5_state_t	/home/jasta/c/giFT/src/md5.h	31;"	d
media_filter	/home/jasta/c/giFT/ui/gift-fe.h	/^	GtkWidget *media_filter;$/;"	m	struct:
media_filter_select	/home/jasta/c/giFT/ui/ui.c	/^static void media_filter_select (GtkWidget *widget, char *data)$/;"	f	file:
megs	/home/jasta/c/giFT/OpenFT/node.h	/^	unsigned long  megs;$/;"	m	struct:
mem_alloc	/home/jasta/c/giFT/FT/ft.h	/^	int mem_alloc;$/;"	m	struct:
mem_used	/home/jasta/c/giFT/FT/ft.h	/^	int mem_used;$/;"	m	struct:
menu_append	/home/jasta/c/giFT/ui/menu.c	/^GtkWidget *menu_append (GtkWidget *menu, char *menu_text)$/;"	f
menu_append_sep	/home/jasta/c/giFT/ui/menu.c	/^GtkWidget *menu_append_sep (GtkWidget *menu)$/;"	f
menu_cancel_download	/home/jasta/c/giFT/ui/download.c	/^static void menu_cancel_download (GtkWidget *menu, Transfer *transfer)$/;"	f	file:
menu_cancel_upload	/home/jasta/c/giFT/ui/upload.c	/^static void menu_cancel_upload (GtkWidget *menu, Transfer *transfer)$/;"	f	file:
menu_clear_download	/home/jasta/c/giFT/ui/download.c	/^static void menu_clear_download (GtkWidget *menu, Transfer *transfer)$/;"	f	file:
menu_create_main	/home/jasta/c/giFT/ui/menu.c	/^GtkWidget *menu_create_main (GtkWidget *window)$/;"	f
menu_if	/home/jasta/c/giFT/ui/menu-if.h	/^static GtkItemFactoryEntry menu_if[] =$/;"	v
menu_pause_download	/home/jasta/c/giFT/ui/download.c	/^static void menu_pause_download (GtkWidget *menu, Transfer *transfer)$/;"	f	file:
menu_popup_download	/home/jasta/c/giFT/ui/download.c	/^int menu_popup_download (GtkWidget *dl_list, Transfer *download, guint button,$/;"	f
menu_popup_search	/home/jasta/c/giFT/ui/search.c	/^int menu_popup_search (GtkWidget *srch_list, Search *srch, guint button,$/;"	f
menu_popup_upload	/home/jasta/c/giFT/ui/upload.c	/^int menu_popup_upload (GtkWidget *ul_list, Transfer *upload, guint button,$/;"	f
menu_pref_show	/home/jasta/c/giFT/ui/menu.c	/^static void menu_pref_show (GtkWidget *widget, char *page)$/;"	f	file:
menu_submenu_append	/home/jasta/c/giFT/ui/menu.c	/^GtkWidget *menu_submenu_append (GtkWidget *menu_bar, char *menu_text)$/;"	f
message_loop	/home/jasta/c/giFT/src/win32_support.c	/^static int message_loop ()$/;"	f	file:
mime_open	/home/jasta/c/giFT/src/mime.c	/^FILE *mime_open (char *file, char *mode, char **mime, size_t *size)$/;"	f
mime_size	/home/jasta/c/giFT/src/mime.c	/^static size_t mime_size (char *file, char *mime)$/;"	f	file:
mime_type	/home/jasta/c/giFT/src/mime.c	/^char *mime_type (char *file, char *ext)$/;"	f
mime_types	/home/jasta/c/giFT/src/mime.c	/^Dataset *mime_types = NULL;$/;"	v
month_tab	/home/jasta/c/giFT/FT/http.c	/^static const char *month_tab =$/;"	v	file:
month_tab	/home/jasta/c/giFT/OpenFT/http.c	/^static const char *month_tab =$/;"	v	file:
mtime	/home/jasta/c/giFT/src/conf.h	/^	time_t        mtime;$/;"	m	struct:
mtime	/home/jasta/c/giFT/src/sharing.h	/^	time_t        mtime;$/;"	m	struct:_file_share
name	/home/jasta/c/giFT/FT/daemon.c	/^	char *name;$/;"	m	struct:_daemon_event	file:
name	/home/jasta/c/giFT/OpenFT/daemon.c	/^	char *name;$/;"	m	struct:_daemon_event	file:
name	/home/jasta/c/giFT/src/conf.h	/^	char               *name;$/;"	m	struct:
name	/home/jasta/c/giFT/src/daemon.c	/^	char          *name;$/;"	m	struct:_dc_event	file:
name	/home/jasta/c/giFT/src/protocol.h	/^	char               *name;$/;"	m	struct:_protocol
name	/home/jasta/c/giFT/ui/daemon.c	/^	char           *name;$/;"	m	struct:_fe_ev_handler	file:
nb_active	/home/jasta/c/giFT/src/nb.c	/^NBRead *nb_active (int type)$/;"	f
nb_add	/home/jasta/c/giFT/src/nb.c	/^void nb_add (NBRead *nb, char c)$/;"	f
nb_destroy	/home/jasta/c/giFT/src/nb.c	/^void nb_destroy (int type)$/;"	f
nb_destroy_all	/home/jasta/c/giFT/src/nb.c	/^void nb_destroy_all ()$/;"	f
nb_finish	/home/jasta/c/giFT/src/nb.c	/^void nb_finish (NBRead *nb)$/;"	f
nb_free	/home/jasta/c/giFT/src/nb.c	/^void nb_free (NBRead *nb)$/;"	f
nb_rd	/home/jasta/c/giFT/src/nb.c	/^List *nb_rd = NULL;$/;"	v
nb_read	/home/jasta/c/giFT/src/nb.c	/^int nb_read (NBRead *nb, int source, size_t count, char *term)$/;"	f
nb_terminate	/home/jasta/c/giFT/src/nb.c	/^void nb_terminate (NBRead *nb)$/;"	f
nb_type	/home/jasta/c/giFT/src/nb.h	/^   int nb_type;$/;"	m	struct:
net_accept	/home/jasta/c/giFT/src/network.c	/^int net_accept (int s_fd)$/;"	f
net_bind	/home/jasta/c/giFT/src/network.c	/^int net_bind (unsigned short port)$/;"	f
net_close	/home/jasta/c/giFT/src/network.c	/^void net_close (int fd)$/;"	f
net_connect	/home/jasta/c/giFT/src/network.c	/^int net_connect (char *ip, unsigned short port)$/;"	f
net_ip_str	/home/jasta/c/giFT/src/network.c	/^char *net_ip_str (unsigned long ip)$/;"	f
net_local_ip	/home/jasta/c/giFT/src/network.c	/^unsigned long net_local_ip ()$/;"	f
net_peer_ip	/home/jasta/c/giFT/src/network.c	/^char *net_peer_ip (int fd)$/;"	f
net_send	/home/jasta/c/giFT/src/network.c	/^int net_send (int fd, char *data)$/;"	f
net_set_blocking	/home/jasta/c/giFT/src/network.c	/^int net_set_blocking (int s_fd, int blocking)$/;"	f
net_sock_error	/home/jasta/c/giFT/src/network.c	/^int net_sock_error (int s_fd)$/;"	f
netstat	/home/jasta/c/giFT/FT/ft.h	/^_netstat netstat;$/;"	v
network	/home/jasta/c/giFT/ui/share.h	/^	char *network;   \/* ptr into user ... *\/$/;"	m	struct:_shared_file
networkname	/home/jasta/c/giFT/FT/search.h	/^    char *networkname;$/;"	m	struct:
next	/home/jasta/c/giFT/src/hash.h	/^	struct _hash_node *next;$/;"	m	struct:_hash_node
next	/home/jasta/c/giFT/src/list.h	/^	struct _list *next;$/;"	m	struct:_list
next_timer	/home/jasta/c/giFT/src/event.c	/^static time_t next_timer (time_t current_time)$/;"	f	file:
node_add	/home/jasta/c/giFT/OpenFT/node.c	/^static Connection *node_add (int fd)$/;"	f	file:
node_class_add	/home/jasta/c/giFT/OpenFT/node.c	/^void node_class_add (Connection *c, unsigned short class)$/;"	f
node_class_change	/home/jasta/c/giFT/OpenFT/node.c	/^static void node_class_change (Connection *c, unsigned short change)$/;"	f	file:
node_class_remove	/home/jasta/c/giFT/OpenFT/node.c	/^void node_class_remove (Connection *c, unsigned short klass)$/;"	f
node_class_set	/home/jasta/c/giFT/OpenFT/node.c	/^void node_class_set (Connection *c, unsigned short class)$/;"	f
node_class_str	/home/jasta/c/giFT/OpenFT/utils.c	/^char *node_class_str (Node *node)$/;"	f
node_conn_set	/home/jasta/c/giFT/OpenFT/node.c	/^void node_conn_set (Connection *c, unsigned long ip, signed long port,$/;"	f
node_disconnect	/home/jasta/c/giFT/OpenFT/node.c	/^void node_disconnect (Connection *c)$/;"	f
node_disconnect_idle	/home/jasta/c/giFT/OpenFT/netorg.c	/^static Connection *node_disconnect_idle (Connection *c, Node *node,$/;"	f	file:
node_free	/home/jasta/c/giFT/OpenFT/node.c	/^void node_free (Connection *c)$/;"	f
node_highest_class	/home/jasta/c/giFT/OpenFT/node.c	/^unsigned short node_highest_class (Node *node)$/;"	f
node_maintain_link	/home/jasta/c/giFT/OpenFT/node.c	/^static Connection *node_maintain_link (Connection *c, Node *node, FILE *f)$/;"	f	file:
node_maintain_links	/home/jasta/c/giFT/OpenFT/node.c	/^int node_maintain_links (void *udata)$/;"	f
node_new	/home/jasta/c/giFT/OpenFT/node.c	/^Connection *node_new (int fd)$/;"	f
node_reconnect	/home/jasta/c/giFT/OpenFT/netorg.c	/^static Connection *node_reconnect (Connection *c, Node *node, int *processed)$/;"	f	file:
node_register	/home/jasta/c/giFT/OpenFT/node.c	/^Connection *node_register (unsigned long ip, signed short port,$/;"	f
node_remove	/home/jasta/c/giFT/OpenFT/node.c	/^void node_remove (Connection *c)$/;"	f
node_state_set	/home/jasta/c/giFT/OpenFT/node.c	/^void node_state_set (Connection *c, unsigned short state)$/;"	f
node_stats	/home/jasta/c/giFT/OpenFT/node.c	/^static Connection *node_stats (Connection *c, Node *node, void *udata)$/;"	f	file:
node_update_cache	/home/jasta/c/giFT/OpenFT/node.c	/^void node_update_cache ()$/;"	f
nodeinfo_request	/home/jasta/c/giFT/OpenFT/protocol.c	/^FT_HANDLER (nodeinfo_request);$/;"	v
nodeinfo_response	/home/jasta/c/giFT/OpenFT/protocol.c	/^FT_HANDLER (nodeinfo_response);$/;"	v
nodelist_output	/home/jasta/c/giFT/OpenFT/protocol.c	/^static Connection *nodelist_output (Connection *c, Node *node,$/;"	f	file:
nodelist_queue_destroy	/home/jasta/c/giFT/OpenFT/protocol.c	/^static void nodelist_queue_destroy (Connection *c, Node *response,$/;"	f	file:
nodelist_queue_write	/home/jasta/c/giFT/OpenFT/protocol.c	/^static void nodelist_queue_write (Connection *c, Node *response,$/;"	f	file:
nodelist_request	/home/jasta/c/giFT/OpenFT/protocol.c	/^FT_HANDLER (nodelist_request);$/;"	v
nodelist_response	/home/jasta/c/giFT/OpenFT/protocol.c	/^FT_HANDLER (nodelist_response);$/;"	v
nodepage_mtime	/home/jasta/c/giFT/FT/html.c	/^static time_t     nodepage_mtime = 0;$/;"	v	file:
nodepage_mtime	/home/jasta/c/giFT/OpenFT/html.c	/^static time_t nodepage_mtime = 0;$/;"	v	file:
nodes	/home/jasta/c/giFT/src/hash.h	/^	HashNode    **nodes;$/;"	m	struct:_hash_table
notebook	/home/jasta/c/giFT/ui/gift-fe.h	/^	GtkWidget *notebook;$/;"	m	struct:
nprimes	/home/jasta/c/giFT/src/hash.c	/^static size_t nprimes = sizeof (primes) \/ sizeof (primes[0]);$/;"	v	file:
ntags	/home/jasta/c/giFT/FT/search.h	/^    size_t ntags;$/;"	m	struct:
numresp	/home/jasta/c/giFT/FT/search.h	/^    size_t numresp;$/;"	m	struct:s_QueryResponse
numterms	/home/jasta/c/giFT/FT/search.h	/^    size_t numterms;$/;"	m	struct:s_ComplexQuery
obj	/home/jasta/c/giFT/src/mortal.h	/^	void             *obj;$/;"	m	struct:
obj	/home/jasta/c/giFT/ui/daemon.h	/^	void *obj;$/;"	m	struct:_daemon_event
obj	/home/jasta/c/giFT/ui/obj.h	/^	struct _object_data obj;$/;"	m	struct:
obj_copy_data	/home/jasta/c/giFT/ui/obj.c	/^void obj_copy_data (ObjectData *obj_data, char *name, ObjectData *inc_data)$/;"	f
obj_data	/home/jasta/c/giFT/ui/search.h	/^	ObjectData obj_data;$/;"	m	struct:
obj_data	/home/jasta/c/giFT/ui/transfer.h	/^	ObjectData obj_data;$/;"	m	struct:
obj_destroy_notify	/home/jasta/c/giFT/ui/obj.c	/^void obj_destroy_notify (void *obj)$/;"	f
obj_free	/home/jasta/c/giFT/ui/obj.c	/^void obj_free (void *obj)$/;"	f
obj_get_data	/home/jasta/c/giFT/ui/obj.c	/^void *obj_get_data (ObjectData *obj_data, char *name)$/;"	f
obj_new	/home/jasta/c/giFT/ui/obj.c	/^void *obj_new (size_t size, unsigned int type)$/;"	f
obj_set_data	/home/jasta/c/giFT/ui/obj.c	/^void obj_set_data (ObjectData *obj_data, char *name, void *data)$/;"	f
oct_value_from_hex	/home/jasta/c/giFT/FT/html.c	/^static int oct_value_from_hex (char hex_char)$/;"	f	file:
oct_value_from_hex	/home/jasta/c/giFT/OpenFT/html.c	/^static int oct_value_from_hex (char hex_char)$/;"	f	file:
oct_value_from_hex	/home/jasta/c/giFT/ui/utils.c	/^int oct_value_from_hex (char hex_char)$/;"	f
offset	/home/jasta/c/giFT/OpenFT/packet.h	/^	int offset;   \/* used internally, skipped over when writing *\/$/;"	m	struct:
open_output	/home/jasta/c/giFT/src/download.c	/^static int open_output (Transfer *transfer)$/;"	f	file:
openft_conf	/home/jasta/c/giFT/OpenFT/openft.c	/^Config *openft_conf = NULL;$/;"	v
openft_proto	/home/jasta/c/giFT/OpenFT/openft.c	/^Protocol *openft_proto = NULL;$/;"	v
openft_share_add	/home/jasta/c/giFT/OpenFT/share.c	/^void openft_share_add (FileShare *file)$/;"	f
openft_share_complete	/home/jasta/c/giFT/OpenFT/share.c	/^int openft_share_complete (FileShare *file)$/;"	f
openft_share_free	/home/jasta/c/giFT/OpenFT/share.c	/^void openft_share_free (FileShare *file)$/;"	f
openft_share_free_proto	/home/jasta/c/giFT/OpenFT/share.c	/^static void openft_share_free_proto (FileShare *file)$/;"	f	file:
openft_share_local_cleanup	/home/jasta/c/giFT/OpenFT/share.c	/^void openft_share_local_cleanup ()$/;"	f
openft_share_local_find	/home/jasta/c/giFT/OpenFT/share.c	/^FileShare *openft_share_local_find (char *filename)$/;"	f
openft_share_local_import	/home/jasta/c/giFT/OpenFT/share.c	/^void openft_share_local_import ()$/;"	f
openft_share_local_submit	/home/jasta/c/giFT/OpenFT/share.c	/^void openft_share_local_submit (Connection *c)$/;"	f
openft_share_local_verify	/home/jasta/c/giFT/OpenFT/share.c	/^char *openft_share_local_verify (char *filename)$/;"	f
openft_share_new	/home/jasta/c/giFT/OpenFT/share.c	/^FileShare *openft_share_new (char *host, unsigned short port,$/;"	f
openft_share_ref	/home/jasta/c/giFT/OpenFT/share.c	/^void openft_share_ref (FileShare *file)$/;"	f
openft_share_ref_mod	/home/jasta/c/giFT/OpenFT/share.c	/^static int openft_share_ref_mod (FileShare *file, int val)$/;"	f	file:
openft_share_remove_by_host	/home/jasta/c/giFT/OpenFT/share.c	/^void openft_share_remove_by_host (unsigned long host)$/;"	f
openft_share_stats_add	/home/jasta/c/giFT/OpenFT/share.c	/^void openft_share_stats_add (Connection *c, FileShare *file)$/;"	f
openft_share_stats_remove	/home/jasta/c/giFT/OpenFT/share.c	/^void openft_share_stats_remove (Connection *c, FileShare *file)$/;"	f
openft_share_stats_reset	/home/jasta/c/giFT/OpenFT/share.c	/^void openft_share_stats_reset (Connection *c)$/;"	f
openft_share_stats_set	/home/jasta/c/giFT/OpenFT/share.c	/^void openft_share_stats_set (Connection *c, unsigned long users,$/;"	f
openft_share_stats_size	/home/jasta/c/giFT/OpenFT/share.c	/^static double openft_share_stats_size (FileShare *file)$/;"	f	file:
openft_share_unref	/home/jasta/c/giFT/OpenFT/share.c	/^void openft_share_unref (FileShare *file)$/;"	f
options	/home/jasta/c/giFT/src/main.c	/^static Dataset *options;          \/* command-line parsed options *\/$/;"	v	file:
out_key	/home/jasta/c/giFT/FT/ft.h	/^	con_key	out_key;$/;"	m	struct:
out_packet	/home/jasta/c/giFT/FT/ft.h	/^	packet_str out_packet;$/;"	m	struct:
p	/home/jasta/c/giFT/src/transfer.h	/^	Protocol *p;             \/* p->name = OpenFT *\/$/;"	m	struct:_source
p_data	/home/jasta/c/giFT/FT/ft.h	/^	unsigned char * p_data;$/;"	m	struct:
packet_str	/home/jasta/c/giFT/FT/ft.h	/^}packet_str;$/;"	t
parse	/home/jasta/c/giFT/src/main.c	/^static List *parse (int argc, char **argv)$/;"	f	file:
path	/home/jasta/c/giFT/src/conf.h	/^	char         *path;$/;"	m	struct:
path	/home/jasta/c/giFT/src/sharing.h	/^	char         *path;   \/* \/data\/mp3s\/file.mp3                    *\/$/;"	m	struct:_file_share
path	/home/jasta/c/giFT/src/transfer.h	/^	char         *path;     \/* fully qualified local path to this file *\/$/;"	m	struct:_transfer
path_traverse	/home/jasta/c/giFT/src/sharing.c	/^static int path_traverse (FILE *f, char *root, char *path)$/;"	f	file:
persist	/home/jasta/c/giFT/src/if_event.h	/^	int persist;$/;"	m	struct:_if_event
ping_request	/home/jasta/c/giFT/OpenFT/protocol.c	/^FT_HANDLER (ping_request);$/;"	v
ping_response	/home/jasta/c/giFT/OpenFT/protocol.c	/^FT_HANDLER (ping_response);$/;"	v
port	/home/jasta/c/giFT/FT/ft.h	/^	unsigned short port;$/;"	m	struct:
port	/home/jasta/c/giFT/FT/http.h	/^	unsigned short port;$/;"	m	struct:
port	/home/jasta/c/giFT/OpenFT/http.h	/^	unsigned short port;$/;"	m	struct:
port	/home/jasta/c/giFT/OpenFT/node.h	/^	unsigned short port;$/;"	m	struct:
port	/home/jasta/c/giFT/OpenFT/share.h	/^	unsigned short port;$/;"	m	struct:
port_verify	/home/jasta/c/giFT/OpenFT/node.h	/^	Connection    *port_verify;$/;"	m	struct:
pos	/home/jasta/c/giFT/FT/ft.h	/^	int pos;$/;"	m	struct:
pre_load	/home/jasta/c/giFT/src/main.c	/^static List *pre_load (List *fnames)$/;"	f	file:
pref_button	/home/jasta/c/giFT/ui/pref.c	/^static void pref_button (GtkWidget *button, unsigned long pref_enum)$/;"	f	file:
pref_dialog	/home/jasta/c/giFT/ui/pref.c	/^static GtkWidget *pref_dialog = NULL;$/;"	v	file:
pref_dialog_close	/home/jasta/c/giFT/ui/pref.c	/^static void pref_dialog_close ()$/;"	f	file:
pref_hide	/home/jasta/c/giFT/ui/pref.c	/^static void pref_hide ()$/;"	f	file:
pref_pages	/home/jasta/c/giFT/ui/pref.c	/^static GtkWidget *pref_pages  = NULL;$/;"	v	file:
pref_pane	/home/jasta/c/giFT/ui/pref.c	/^static GtkWidget *pref_pane   = NULL;$/;"	v	file:
pref_select_page	/home/jasta/c/giFT/ui/pref.c	/^static void pref_select_page (char *page)$/;"	f	file:
pref_show	/home/jasta/c/giFT/ui/pref.c	/^void pref_show (char *page)$/;"	f
prepare_fds	/home/jasta/c/giFT/src/event.c	/^static int prepare_fds (fd_set *rset, fd_set *wset, fd_set *xset)$/;"	f	file:
primes	/home/jasta/c/giFT/src/hash.c	/^static const unsigned int primes[] =$/;"	v	file:
printQueryResponse	/home/jasta/c/giFT/FT/search.c	/^void printQueryResponse(QueryResponse qr, Connection *clients,	int allowPrivateIP)$/;"	f
print_bin_data	/home/jasta/c/giFT/FT/misc.c	/^void print_bin_data(unsigned char * data, int len)$/;"	f
protocol	/home/jasta/c/giFT/src/connection.h	/^	struct _protocol *protocol;  \/* protocol this connection belongs to *\/$/;"	m	struct:_connection
protocol	/home/jasta/c/giFT/src/event.h	/^	Protocol     *protocol;$/;"	m	struct:
protocol_destroy	/home/jasta/c/giFT/src/protocol.c	/^void protocol_destroy (Protocol *p)$/;"	f
protocol_find	/home/jasta/c/giFT/src/protocol.c	/^Protocol *protocol_find (char *name)$/;"	f
protocol_handle_command	/home/jasta/c/giFT/OpenFT/protocol.c	/^int protocol_handle_command (Protocol *p, Connection *c, FTPacket *packet)$/;"	f
protocol_handler	/home/jasta/c/giFT/OpenFT/protocol.c	/^protocol_handler[] =$/;"	v
protocol_load	/home/jasta/c/giFT/src/protocol.c	/^Protocol *protocol_load (char *file_name)$/;"	f
protocol_new	/home/jasta/c/giFT/src/protocol.c	/^Protocol *protocol_new ()$/;"	f
protocol_unload	/home/jasta/c/giFT/src/protocol.c	/^void protocol_unload (Protocol *p)$/;"	f
protocols	/home/jasta/c/giFT/src/main.c	/^List           *protocols = NULL; \/* all fully loaded protocols  *\/$/;"	v
pull_verify_source	/home/jasta/c/giFT/FT/http.c	/^static int pull_verify_source (Protocol *p, Connection *c)$/;"	f	file:
pull_verify_source	/home/jasta/c/giFT/OpenFT/http.c	/^static int pull_verify_source (Protocol *p, Connection *c)$/;"	f	file:
push_ack	/home/jasta/c/giFT/OpenFT/http.c	/^static int push_ack (Protocol *p, Connection *c)$/;"	f	file:
push_request	/home/jasta/c/giFT/OpenFT/protocol.c	/^FT_HANDLER (push_request);$/;"	v
push_response	/home/jasta/c/giFT/OpenFT/protocol.c	/^FT_HANDLER (push_response);$/;"	v
push_verify_source	/home/jasta/c/giFT/OpenFT/http.c	/^static int push_verify_source (Protocol *p, Connection *c)$/;"	f	file:
qid	/home/jasta/c/giFT/FT/search.h	/^    unsigned short qid;$/;"	m	struct:s_ComplexQuery
qtokens	/home/jasta/c/giFT/OpenFT/search.h	/^	ft_uint32 *qtokens;$/;"	m	struct:_search
query	/home/jasta/c/giFT/OpenFT/search.h	/^	char      *query;$/;"	m	struct:_search
query	/home/jasta/c/giFT/ui/gift-fe.h	/^	GtkWidget *query;$/;"	m	struct:
query_parse	/home/jasta/c/giFT/FT/http.c	/^static Dataset *query_parse (char *request)$/;"	f	file:
query_parse	/home/jasta/c/giFT/OpenFT/http.c	/^static Dataset *query_parse (char *request)$/;"	f	file:
queue_add	/home/jasta/c/giFT/src/queue.c	/^void queue_add (Connection *c, QueueWriteFunc func, QueueWriteFunc destroy_func,$/;"	f
queue_add_single	/home/jasta/c/giFT/src/queue.c	/^void queue_add_single (Connection *c, QueueWriteFunc func,$/;"	f
queue_destroy_default	/home/jasta/c/giFT/src/queue.c	/^static void queue_destroy_default (Connection *c, char *data, void *udata)$/;"	f	file:
queue_flush	/home/jasta/c/giFT/src/queue.c	/^void queue_flush (Connection *c)$/;"	f
queue_free	/home/jasta/c/giFT/src/queue.c	/^void queue_free (Connection *c)$/;"	f
queue_write	/home/jasta/c/giFT/src/queue.c	/^static void queue_write (Protocol *p, Connection *c)$/;"	f	file:
queue_write_default	/home/jasta/c/giFT/src/queue.c	/^static void queue_write_default (Connection *c, char *data, void *udata)$/;"	f	file:
range_start	/home/jasta/c/giFT/FT/http.h	/^	unsigned long  range_start;$/;"	m	struct:
range_start	/home/jasta/c/giFT/OpenFT/http.h	/^	unsigned long  range_start;$/;"	m	struct:
range_stop	/home/jasta/c/giFT/FT/http.h	/^	unsigned long  range_stop;$/;"	m	struct:
range_stop	/home/jasta/c/giFT/OpenFT/http.h	/^	unsigned long  range_stop;$/;"	m	struct:
readQueryResponse	/home/jasta/c/giFT/FT/search.c	/^QueryResponse readQueryResponse(int type, size_t size, byte *buf)$/;"	f
readQueryTerminated	/home/jasta/c/giFT/FT/search.c	/^unsigned short readQueryTerminated(int type, size_t size, byte *buf)$/;"	f
read_body	/home/jasta/c/giFT/FT/http.c	/^static int read_body (Protocol *p, Connection *c)$/;"	f	file:
read_body	/home/jasta/c/giFT/OpenFT/http.c	/^static int read_body (Protocol *p, Connection *c)$/;"	f	file:
read_int	/home/jasta/c/giFT/FT/misc.c	/^size_t read_int(byte **bufp, size_t *lenp)$/;"	f
read_response	/home/jasta/c/giFT/FT/http.c	/^static int read_response (Protocol *p, Connection *c)$/;"	f	file:
read_response	/home/jasta/c/giFT/OpenFT/http.c	/^static int read_response (Protocol *p, Connection *c)$/;"	f	file:
realm	/home/jasta/c/giFT/FT/search.h	/^    QueryRealm realm;$/;"	m	struct:s_ComplexQuery
realm	/home/jasta/c/giFT/OpenFT/search.h	/^	char      *realm;$/;"	m	struct:_search
recv_list	/home/jasta/c/giFT/OpenFT/node.h	/^	int            recv_list : 1;$/;"	m	struct:
ref	/home/jasta/c/giFT/FT/search.h	/^        int        ref; \/* how many servers this search relies on *\/$/;"	m	struct:_search
ref	/home/jasta/c/giFT/OpenFT/search.h	/^	int        ref; \/* how many servers this search relies on *\/$/;"	m	struct:_search
ref	/home/jasta/c/giFT/OpenFT/share.h	/^	int            ref;$/;"	m	struct:
ref	/home/jasta/c/giFT/src/mortal.h	/^	unsigned long     ref;$/;"	m	struct:
rekey_cmp	/home/jasta/c/giFT/FT/crypt.c	/^int rekey_cmp(const void *ap, const void *bp)$/;"	f
remove_free	/home/jasta/c/giFT/src/list.c	/^static int remove_free (void *data, void *udata)$/;"	f	file:
remove_source	/home/jasta/c/giFT/src/download.c	/^static void remove_source (Transfer *transfer, char *url)$/;"	f	file:
report_leak	/home/jasta/c/giFT/src/main.c	/^static void report_leak ()$/;"	f	file:
request_parse	/home/jasta/c/giFT/FT/http.c	/^static Dataset *request_parse (char *http_request)$/;"	f	file:
request_parse	/home/jasta/c/giFT/OpenFT/http.c	/^static Dataset *request_parse (char *http_request)$/;"	f	file:
response_parse	/home/jasta/c/giFT/FT/http.c	/^static Dataset *response_parse (char *http_response)$/;"	f	file:
response_parse	/home/jasta/c/giFT/OpenFT/http.c	/^static Dataset *response_parse (char *http_response)$/;"	f	file:
results	/home/jasta/c/giFT/OpenFT/search.c	/^	List      *results;$/;"	m	struct:_match_data	file:
root	/home/jasta/c/giFT/src/sharing.h	/^	char         *root;   \/* \/data\/mp3s                             *\/$/;"	m	struct:_file_share
s_ComplexQuery	/home/jasta/c/giFT/FT/search.h	/^typedef struct s_ComplexQuery {$/;"	s
s_QueryResponse	/home/jasta/c/giFT/FT/search.h	/^typedef struct s_QueryResponse {$/;"	s
save_bin_data	/home/jasta/c/giFT/FT/misc.c	/^void save_bin_data(unsigned char * data, int len)$/;"	f
save_state	/home/jasta/c/giFT/src/download.c	/^static void save_state (Transfer *transfer)$/;"	f	file:
search	/home/jasta/c/giFT/src/daemon.c	/^EV_HANDLER (search);$/;"	v
search	/home/jasta/c/giFT/ui/gift-fe.h	/^	GtkWidget *search;$/;"	m	struct:
search_execute	/home/jasta/c/giFT/ui/search.c	/^int search_execute (FTApp *ft, char *search, char *media)$/;"	f
search_find_unique	/home/jasta/c/giFT/ui/search.c	/^static GtkCTreeNode *search_find_unique (Search *srch)$/;"	f	file:
search_finish	/home/jasta/c/giFT/src/daemon.c	/^static void search_finish (IFEvent *event)$/;"	f	file:
search_flush_id	/home/jasta/c/giFT/ui/search.c	/^static int    search_flush_id = -1;$/;"	v	file:
search_flush_results	/home/jasta/c/giFT/ui/search.c	/^static int search_flush_results (FTApp *ft)$/;"	f	file:
search_free	/home/jasta/c/giFT/OpenFT/search.c	/^static void search_free (Search *search)$/;"	f	file:
search_free	/home/jasta/c/giFT/ui/search.c	/^void search_free (Search *obj)$/;"	f
search_insert_node	/home/jasta/c/giFT/ui/search.c	/^static int search_insert_node (Search *srch, GtkWidget *tree)$/;"	f	file:
search_match_func	/home/jasta/c/giFT/OpenFT/search.c	/^static SearchFunc search_match_func (Dataset **dataset, int search_type,$/;"	f	file:
search_new	/home/jasta/c/giFT/OpenFT/search.c	/^Search *search_new (IFEventID id, int search_type, char *query, char *exclude,$/;"	f
search_remove	/home/jasta/c/giFT/OpenFT/search.c	/^void search_remove (IFEventID id)$/;"	f
search_remove_query	/home/jasta/c/giFT/ui/search.c	/^static void search_remove_query (GtkWidget *mitem, Search *srch)$/;"	f	file:
search_reply	/home/jasta/c/giFT/OpenFT/search.c	/^void search_reply (IFEventID id, Connection *search_node, FileShare *file)$/;"	f
search_request	/home/jasta/c/giFT/FT/search.c	/^void search_request(Connection * my_con, int id, char *query)$/;"	f
search_request	/home/jasta/c/giFT/OpenFT/protocol.c	/^FT_HANDLER (search_request);$/;"	v
search_request_result	/home/jasta/c/giFT/OpenFT/protocol.c	/^static void search_request_result (Connection *c, FileShare *file,$/;"	f	file:
search_request_result_free	/home/jasta/c/giFT/OpenFT/protocol.c	/^static void search_request_result_free (Connection *c, FileShare *file,$/;"	f	file:
search_response	/home/jasta/c/giFT/OpenFT/protocol.c	/^FT_HANDLER (search_response);$/;"	v
search_response	/home/jasta/c/giFT/ui/search.c	/^static int search_response (char *head, int keys, GData *dataset,$/;"	f	file:
search_sort_size	/home/jasta/c/giFT/ui/search.c	/^static int search_sort_size (GtkCList *clist, const void *p1, const void *p2)$/;"	f	file:
search_tokenize	/home/jasta/c/giFT/OpenFT/search.c	/^ft_uint32 *search_tokenize (char *string)$/;"	f
search_unique_id	/home/jasta/c/giFT/OpenFT/search.c	/^unsigned long search_unique_id = 0;$/;"	v
seed	/home/jasta/c/giFT/FT/ft.h	/^	unsigned int seed;$/;"	m	struct:
sendComplexQuery	/home/jasta/c/giFT/FT/search.c	/^int sendComplexQuery(Connection *c, byte *compiled_query, size_t len)$/;"	f
send_attach	/home/jasta/c/giFT/ui/gift-fe.c	/^static int send_attach (int sock, FEConnection *c)$/;"	f	file:
send_reply_header	/home/jasta/c/giFT/OpenFT/http.c	/^static int send_reply_header (OpenFT_Transfer *xfer, int verify_share,$/;"	f	file:
send_request	/home/jasta/c/giFT/FT/http.c	/^static int send_request (int fd, char *rtype, char *request, char *extra)$/;"	f	file:
send_request	/home/jasta/c/giFT/OpenFT/http.c	/^static int send_request (int fd, char *rtype, char *request, char *extra)$/;"	f	file:
sent_list	/home/jasta/c/giFT/OpenFT/node.h	/^	int            sent_list : 1;$/;"	m	struct:
sfunc	/home/jasta/c/giFT/OpenFT/search.c	/^	SearchFunc sfunc;$/;"	m	struct:_match_data	file:
share	/home/jasta/c/giFT/src/daemon.c	/^EV_HANDLER (share);$/;"	v
share_add	/home/jasta/c/giFT/src/sharing.c	/^int share_add (char *root, char *path, char *md5,$/;"	f
share_build_index	/home/jasta/c/giFT/src/sharing.c	/^Dataset *share_build_index ()$/;"	f
share_clear	/home/jasta/c/giFT/src/sharing.c	/^void share_clear ()$/;"	f
share_clear_entry	/home/jasta/c/giFT/src/sharing.c	/^static int share_clear_entry (char *md5, FileShare *file, void *udata)$/;"	f	file:
share_clear_index	/home/jasta/c/giFT/src/sharing.c	/^void share_clear_index ()$/;"	f
share_dup	/home/jasta/c/giFT/ui/share.c	/^void share_dup (SharedFile *out, SharedFile *in)$/;"	f
share_fill_data	/home/jasta/c/giFT/ui/share.c	/^void share_fill_data (SharedFile *share, GData *ft_data)$/;"	f
share_foreach	/home/jasta/c/giFT/src/sharing.c	/^void share_foreach (HashFunc foreach_func, void *data)$/;"	f
share_free	/home/jasta/c/giFT/src/sharing.c	/^void share_free (FileShare *file)$/;"	f
share_free	/home/jasta/c/giFT/ui/share.c	/^void share_free (SharedFile *share)$/;"	f
share_index	/home/jasta/c/giFT/src/sharing.c	/^Dataset *share_index (unsigned long *files, double *size)$/;"	f
share_index_sorted	/home/jasta/c/giFT/src/sharing.c	/^List *share_index_sorted ()$/;"	f
share_lookup	/home/jasta/c/giFT/src/sharing.c	/^FileShare *share_lookup (char *path)$/;"	f
share_lookup_entry	/home/jasta/c/giFT/src/sharing.c	/^static int share_lookup_entry (char *md5, FileShare *file, char *path)$/;"	f	file:
share_new	/home/jasta/c/giFT/src/sharing.c	/^FileShare *share_new (char *root, char *path, char *md5,$/;"	f
share_request	/home/jasta/c/giFT/OpenFT/protocol.c	/^FT_HANDLER (share_request);$/;"	v
share_response	/home/jasta/c/giFT/OpenFT/protocol.c	/^FT_HANDLER (share_response);$/;"	v
share_sync	/home/jasta/c/giFT/OpenFT/daemon.c	/^static Connection *share_sync (Connection *c, Node *node, void *data)$/;"	f	file:
share_update_index	/home/jasta/c/giFT/src/sharing.c	/^Dataset *share_update_index ()$/;"	f
shares	/home/jasta/c/giFT/OpenFT/node.h	/^	unsigned long  shares;$/;"	m	struct:
shr	/home/jasta/c/giFT/ui/search.h	/^	SharedFile shr;    \/* shared file information *\/$/;"	m	struct:
shr	/home/jasta/c/giFT/ui/transfer.h	/^	SharedFile shr;         \/* shared data ... *\/$/;"	m	struct:
shutdown	/home/jasta/c/giFT/src/main.c	/^static void shutdown ()$/;"	f	file:
sid	/home/jasta/c/giFT/FT/search.h	/^		unsigned short sid; $/;"	m	struct:_search
size	/home/jasta/c/giFT/OpenFT/daemon.c	/^	double        size; \/* in gigs *\/$/;"	m	struct:_stats	file:
size	/home/jasta/c/giFT/OpenFT/search.c	/^	size_t     size;$/;"	m	struct:_match_data	file:
size	/home/jasta/c/giFT/src/hash.h	/^	size_t        size;$/;"	m	struct:_hash_table
size	/home/jasta/c/giFT/src/sharing.h	/^	unsigned long size;$/;"	m	struct:_file_share
size_max	/home/jasta/c/giFT/OpenFT/search.h	/^	size_t     size_max;$/;"	m	struct:_search
size_min	/home/jasta/c/giFT/OpenFT/search.h	/^	size_t     size_min;$/;"	m	struct:_search
size_t	/home/jasta/c/giFT/FT/misc.c	65;"	d	file:
snprintf	/home/jasta/c/giFT/src/win32_support.h	24;"	d
socket_get_data_flag	/home/jasta/c/giFT/FT/ft.h	/^	int	socket_get_data_flag;	\/\/ could be equal to 1 - we got data$/;"	m	struct:
source	/home/jasta/c/giFT/src/transfer.h	/^	Source       *source;    \/* data source *\/$/;"	m	struct:_chunk
source_equal	/home/jasta/c/giFT/src/transfer.c	/^int source_equal (Source *a, Source *b)$/;"	f
source_free	/home/jasta/c/giFT/src/transfer.c	/^void source_free (Source *source)$/;"	f
source_new	/home/jasta/c/giFT/src/transfer.c	/^Source *source_new (char *user, char *hash, char *url)$/;"	f
sources	/home/jasta/c/giFT/src/transfer.h	/^	List         *sources;  \/* sources used for downloading *\/$/;"	m	struct:_transfer
srch_buffer	/home/jasta/c/giFT/ui/search.c	/^static GList *srch_buffer     = NULL;$/;"	v	file:
srch_list	/home/jasta/c/giFT/ui/gift-fe.h	/^	GtkWidget *srch_list;$/;"	m	struct:
srch_list_download	/home/jasta/c/giFT/ui/search.c	/^static void srch_list_download (GtkWidget *mitem, Search *srch_node)$/;"	f	file:
srch_list_sort_column	/home/jasta/c/giFT/ui/search.c	/^void srch_list_sort_column (GtkWidget *w, int column, void *sort_col)$/;"	f
sroot	/home/jasta/c/giFT/src/sharing.c	/^static List       *sroot        = NULL;$/;"	v	file:
start	/home/jasta/c/giFT/src/transfer.h	/^	unsigned long start;$/;"	m	struct:_chunk
start_download	/home/jasta/c/giFT/src/daemon.c	/^static void start_download (Connection *c, Dataset *event)$/;"	f	file:
starttime	/home/jasta/c/giFT/FT/ft.h	/^	time_t starttime;$/;"	m	struct:
state	/home/jasta/c/giFT/FT/ft.h	/^	int state;$/;"	m	struct:
state	/home/jasta/c/giFT/OpenFT/node.h	/^	} state;$/;"	m	struct:
state	/home/jasta/c/giFT/src/event.h	/^	InputState    state;$/;"	m	struct:
state_path	/home/jasta/c/giFT/src/transfer.h	/^	char         *state_path;$/;"	m	struct:_transfer
stats	/home/jasta/c/giFT/src/daemon.c	/^EV_HANDLER (stats);$/;"	v
statsFileTypeName	/home/jasta/c/giFT/FT/search.c	/^const char *statsFileTypeName[NumStatsFileType] = {$/;"	v
stats_finish	/home/jasta/c/giFT/src/daemon.c	/^static void stats_finish (IFEvent *event)$/;"	f	file:
stats_list	/home/jasta/c/giFT/ui/gift-fe.h	/^	GtkWidget *stats_list;$/;"	m	struct:
stats_populate	/home/jasta/c/giFT/ui/stats.c	/^int stats_populate (GtkWidget *clist)$/;"	f
stats_request	/home/jasta/c/giFT/OpenFT/protocol.c	/^FT_HANDLER (stats_request);$/;"	v
stats_response	/home/jasta/c/giFT/OpenFT/protocol.c	/^FT_HANDLER (stats_response);$/;"	v
stats_response	/home/jasta/c/giFT/ui/stats.c	/^static int stats_response (char *head, int keys, GData *dataset,$/;"	f	file:
stats_timer_populate	/home/jasta/c/giFT/ui/stats.c	/^int stats_timer_populate (FTApp *ftapp)$/;"	f
stop	/home/jasta/c/giFT/src/transfer.h	/^	unsigned long stop;$/;"	m	struct:_chunk
str_isempty	/home/jasta/c/giFT/src/parse.c	/^int str_isempty (char *string)$/;"	f
strdup	/home/jasta/c/giFT/src/gift.h	63;"	d
string_lower	/home/jasta/c/giFT/src/parse.c	/^char *string_lower (char *string)$/;"	f
string_sep	/home/jasta/c/giFT/src/parse.c	/^char *string_sep (char **string, char *delim)$/;"	f
string_sep_ex	/home/jasta/c/giFT/src/parse.c	/^static char *string_sep_ex (char **string, char *needle, size_t needle_len,$/;"	f	file:
string_sep_set	/home/jasta/c/giFT/src/parse.c	/^char *string_sep_set (char **string, char *charset)$/;"	f
string_sep_set_func	/home/jasta/c/giFT/src/parse.c	/^static char *string_sep_set_func (char *string, char *charset)$/;"	f	file:
string_set	/home/jasta/c/giFT/src/parse.c	/^static char string_set[256] =$/;"	v	file:
strmove	/home/jasta/c/giFT/src/parse.c	/^void strmove (char *dst, const char *src)$/;"	f
support	/home/jasta/c/giFT/src/protocol.h	/^	struct _hash_table *support; \/* protocol-specific features *\/$/;"	m	struct:_protocol
tag	/home/jasta/c/giFT/FT/search.h	/^    unsigned int tag;$/;"	m	struct:
tags	/home/jasta/c/giFT/FT/search.h	/^    FileTag *tags;$/;"	m	struct:
term	/home/jasta/c/giFT/src/nb.h	/^   int term;$/;"	m	struct:
terms	/home/jasta/c/giFT/FT/search.h	/^    QueryTerm *terms;$/;"	m	struct:s_ComplexQuery
timeout	/home/jasta/c/giFT/src/transfer.h	/^	int           timeout;   \/* timeout *\/$/;"	m	struct:_chunk
timer	/home/jasta/c/giFT/src/transfer.h	/^	int           timer;    \/* logs the download progress in the resume file *\/$/;"	m	struct:_transfer
timer_add	/home/jasta/c/giFT/src/event.c	/^int timer_add (time_t interval, TimerCallback callback, void *data)$/;"	f
timer_counter	/home/jasta/c/giFT/src/event.c	/^static unsigned long timer_counter = 0;$/;"	v	file:
timer_remove	/home/jasta/c/giFT/src/event.c	/^void timer_remove (unsigned long id)$/;"	f
timer_uniq_id	/home/jasta/c/giFT/src/event.c	/^static unsigned long timer_uniq_id ()$/;"	f	file:
timers	/home/jasta/c/giFT/src/event.c	/^static HashTable *timers = NULL;$/;"	v	file:
timers_free	/home/jasta/c/giFT/src/event.c	/^static List *timers_free = NULL;$/;"	v	file:
tmp_recv	/home/jasta/c/giFT/src/transfer.h	/^	unsigned long tmp_recv;  \/* k\/s calculations, timeout *\/$/;"	m	struct:_chunk
tohex	/home/jasta/c/giFT/FT/search.c	/^char *tohex(byte *d,int l)$/;"	f
token_remove_punct	/home/jasta/c/giFT/OpenFT/search.c	/^static void token_remove_punct (char *token)$/;"	f	file:
tokens	/home/jasta/c/giFT/OpenFT/share.h	/^	ft_uint32     *tokens;     \/* list of tokens for quick searching *\/$/;"	m	struct:
total	/home/jasta/c/giFT/src/transfer.h	/^	unsigned long total;    \/* total filesize to download *\/$/;"	m	struct:_transfer
total	/home/jasta/c/giFT/ui/transfer.h	/^	unsigned long total;    \/* total size *\/$/;"	m	struct:
trace	/home/jasta/c/giFT/ui/gift-fe.h	31;"	d
trace_sock	/home/jasta/c/giFT/FT/ft.h	61;"	d
transfer	/home/jasta/c/giFT/src/daemon.c	/^EV_HANDLER (transfer);$/;"	v
transfer	/home/jasta/c/giFT/src/transfer.h	/^	Transfer     *transfer;  \/* parent *\/$/;"	m	struct:_chunk
transfer	/home/jasta/c/giFT/ui/daemon.c	/^FE_EV_HANDLER (transfer);$/;"	v
transfer_free	/home/jasta/c/giFT/src/transfer.c	/^void transfer_free (Transfer *transfer)$/;"	f
transfer_free	/home/jasta/c/giFT/ui/transfer.c	/^void transfer_free (Transfer *obj)$/;"	f
transfer_new	/home/jasta/c/giFT/src/transfer.c	/^Transfer *transfer_new (TransferType direction,$/;"	f
transfer_set_file	/home/jasta/c/giFT/FT/http.c	/^static void transfer_set_file (OpenFT_Transfer *xfer, char *filename)$/;"	f	file:
transfer_set_file	/home/jasta/c/giFT/OpenFT/http.c	/^static void transfer_set_file (OpenFT_Transfer *xfer, char *filename)$/;"	f	file:
transfer_stop	/home/jasta/c/giFT/src/transfer.c	/^void transfer_stop (Transfer *transfer, int cancel)$/;"	f
transmit	/home/jasta/c/giFT/src/transfer.h	/^	unsigned long transmit;  \/* currently received *\/$/;"	m	struct:_chunk
transmit	/home/jasta/c/giFT/src/transfer.h	/^	unsigned long transmit; \/* total received *\/$/;"	m	struct:_transfer
transmit	/home/jasta/c/giFT/ui/transfer.h	/^	unsigned long transmit; \/* total data sent\/received *\/$/;"	m	struct:
trim_whitespace	/home/jasta/c/giFT/src/parse.c	/^void trim_whitespace (char *string)$/;"	f
type	/home/jasta/c/giFT/FT/search.h	/^    QueryTermType type;$/;"	m	struct:
type	/home/jasta/c/giFT/OpenFT/search.h	/^	int        type;$/;"	m	struct:_search
type	/home/jasta/c/giFT/src/if_event.h	/^	IFEventType type;$/;"	m	struct:_if_event
type	/home/jasta/c/giFT/src/mime.c	/^	char *type;$/;"	m	struct:_mime_type	file:
type	/home/jasta/c/giFT/src/nb.h	/^   int type;$/;"	m	struct:
type	/home/jasta/c/giFT/src/sharing.h	/^	char         *type;   \/* audio\/mpeg                             *\/$/;"	m	struct:_file_share
type	/home/jasta/c/giFT/src/transfer.h	/^	TransferType  type;     \/* the type of the transfer *\/$/;"	m	struct:_transfer
type	/home/jasta/c/giFT/ui/obj.c	/^	unsigned int type;$/;"	m	struct:_free_table	file:
type	/home/jasta/c/giFT/ui/obj.h	/^	unsigned int type;$/;"	m	struct:_object_data
udata	/home/jasta/c/giFT/src/queue.h	/^	void          *udata;$/;"	m	struct:_write_queue
ui_search_clicked	/home/jasta/c/giFT/ui/ui.c	/^static void ui_search_clicked (GtkWidget *button, FTApp *ft)$/;"	f	file:
uint32	/home/jasta/c/giFT/src/md5.h	/^typedef unsigned int uint32;$/;"	t
uint32	/home/jasta/c/giFT/src/md5.h	/^typedef unsigned long uint32;$/;"	t
ul_frame	/home/jasta/c/giFT/ui/gift-fe.h	/^	GtkWidget *ul_frame;$/;"	m	struct:
ul_list	/home/jasta/c/giFT/ui/gift-fe.h	/^	GtkWidget *ul_list;$/;"	m	struct:
uniq_file	/home/jasta/c/giFT/src/download.c	/^static char *uniq_file (Transfer *transfer)$/;"	f	file:
uniq_id	/home/jasta/c/giFT/src/if_event.c	/^static IFEventID uniq_id ()$/;"	f	file:
upload	/home/jasta/c/giFT/src/protocol.h	/^	void (*upload)   (struct _chunk *chunk);$/;"	m	struct:_protocol
upload_close	/home/jasta/c/giFT/src/upload.c	/^static void upload_close (IFEvent *event)$/;"	f	file:
upload_free	/home/jasta/c/giFT/src/upload.c	/^void upload_free (Transfer *upload)$/;"	f
upload_insert	/home/jasta/c/giFT/ui/upload.c	/^Transfer *upload_insert (GtkWidget *ul_list, GData *ft_data)$/;"	f
upload_new	/home/jasta/c/giFT/src/upload.c	/^Transfer *upload_new (Protocol *p, char *host, char *hash, char *filename,$/;"	f
upload_report	/home/jasta/c/giFT/src/upload.c	/^static int upload_report (void *udata)$/;"	f	file:
upload_report_attached	/home/jasta/c/giFT/src/upload.c	/^void upload_report_attached (Connection *c)$/;"	f
upload_response	/home/jasta/c/giFT/ui/upload.c	/^int upload_response (char *head, int keys, GData *dataset, DaemonEvent *event)$/;"	f
upload_stop	/home/jasta/c/giFT/src/upload.c	/^void upload_stop (Transfer *upload, int cancel)$/;"	f
upload_timer	/home/jasta/c/giFT/src/upload.c	/^static int   upload_timer = -1;   \/* if_event_reply *\/$/;"	v	file:
upload_write	/home/jasta/c/giFT/src/upload.c	/^void upload_write (Chunk *chunk, char *segment, size_t len)$/;"	f
uploads	/home/jasta/c/giFT/src/upload.c	/^static List *uploads      = NULL;$/;"	v	file:
url	/home/jasta/c/giFT/src/transfer.h	/^	char     *url;           \/* OpenFT:\/\/65.4.102.175:1216\/file.tar.gz *\/$/;"	m	struct:_source
url_decode	/home/jasta/c/giFT/FT/html.c	/^char *url_decode (char *encoded)$/;"	f
url_decode	/home/jasta/c/giFT/OpenFT/html.c	/^char *url_decode (char *encoded)$/;"	f
url_encode	/home/jasta/c/giFT/FT/html.c	/^char *url_encode (char *decoded)$/;"	f
url_encode	/home/jasta/c/giFT/OpenFT/html.c	/^char *url_encode (char *decoded)$/;"	f
url_encode_char	/home/jasta/c/giFT/FT/html.c	/^static char *url_encode_char (char *stream, char c)$/;"	f	file:
url_encode_char	/home/jasta/c/giFT/OpenFT/html.c	/^static char *url_encode_char (char *stream, char c)$/;"	f	file:
usage	/home/jasta/c/giFT/src/main.c	/^static void usage (char *argv0, int exit_val)$/;"	f	file:
user	/home/jasta/c/giFT/src/transfer.h	/^	char     *user;          \/* 65.4.102.175                           *\/$/;"	m	struct:_source
user	/home/jasta/c/giFT/ui/share.h	/^	char *user;$/;"	m	struct:_shared_file
username	/home/jasta/c/giFT/FT/search.h	/^    char *username;$/;"	m	struct:
users	/home/jasta/c/giFT/FT/ft.h	/^	unsigned int users;$/;"	m	struct:
users	/home/jasta/c/giFT/OpenFT/daemon.c	/^	unsigned long users;$/;"	m	struct:_stats	file:
users	/home/jasta/c/giFT/OpenFT/node.h	/^	unsigned long  users;$/;"	m	struct:
valid	/home/jasta/c/giFT/FT/search.h	/^    int valid;$/;"	m	struct:
validate	/home/jasta/c/giFT/src/event.h	/^	int           validate; \/* timeout for incomplete sockets *\/$/;"	m	struct:
validate_share_submit	/home/jasta/c/giFT/OpenFT/utils.c	/^int validate_share_submit ()$/;"	f
validate_timeout	/home/jasta/c/giFT/src/event.c	/^static int validate_timeout (Input *input)$/;"	f	file:
value	/home/jasta/c/giFT/src/hash.h	/^	void          *value;$/;"	m	struct:_hash_node
verified	/home/jasta/c/giFT/OpenFT/node.h	/^	int            verified : 1;   \/* both ports have been verified *\/$/;"	m	struct:
verify_clear	/home/jasta/c/giFT/OpenFT/node.c	/^static void verify_clear (Connection **verify)$/;"	f	file:
version	/home/jasta/c/giFT/src/main.c	/^static void version ()$/;"	f	file:
vitality	/home/jasta/c/giFT/OpenFT/node.h	/^	time_t         vitality;$/;"	m	struct:
vsnprintf	/home/jasta/c/giFT/src/win32_support.h	25;"	d
watch_add	/home/jasta/c/giFT/src/watch.c	/^void watch_add (Connection *c)$/;"	f
watch_copy	/home/jasta/c/giFT/src/watch.c	/^List *watch_copy ()$/;"	f
watch_remove	/home/jasta/c/giFT/src/watch.c	/^void watch_remove (Connection *c)$/;"	f
win32_cleanup	/home/jasta/c/giFT/src/win32_support.c	/^void win32_cleanup ()$/;"	f
win32_data_dir	/home/jasta/c/giFT/src/win32_support.c	/^char *win32_data_dir ()$/;"	f
win32_fatal	/home/jasta/c/giFT/src/win32_support.c	/^void win32_fatal (const char *format, ...)$/;"	f
win32_gift_dir	/home/jasta/c/giFT/src/win32_support.c	/^char *win32_gift_dir ()$/;"	f
win32_gtod	/home/jasta/c/giFT/src/win32_support.c	/^void win32_gtod (long *sec, long *usec)$/;"	f
win32_init	/home/jasta/c/giFT/src/win32_support.c	/^static void win32_init (char *progname)$/;"	f	file:
win32_printf	/home/jasta/c/giFT/src/win32_support.c	/^void win32_printf (const char *format, ...)$/;"	f
window	/home/jasta/c/giFT/ui/gift-fe.h	/^	GtkWidget *window;$/;"	m	struct:
writeRawData	/home/jasta/c/giFT/FT/ft_packet.c	/^void writeRawData(packet_str *packet, unsigned char *data, int data_len)$/;"	f
write_escaped_string	/home/jasta/c/giFT/FT/search.c	3;"	d	file:
write_hex	/home/jasta/c/giFT/FT/search.c	/^static void write_hex(Connection *dc_con, byte *d, int l)$/;"	f	file:
write_int	/home/jasta/c/giFT/FT/search.c	/^static void write_int(Connection *dc_con, int v)$/;"	f	file:
write_queue	/home/jasta/c/giFT/src/connection.h	/^	List             *write_queue;$/;"	m	struct:_connection
write_source	/home/jasta/c/giFT/ui/download.c	/^static void write_source (FEConnection *c, Transfer *obj)$/;"	f	file:
write_string	/home/jasta/c/giFT/FT/search.c	/^void write_string(Connection *dc_con, char *msg)$/;"	f
write_url_escaped_string	/home/jasta/c/giFT/FT/search.c	4;"	d	file:
xfer	/home/jasta/c/giFT/ui/transfer.h	/^	int xfer;               \/* upload\/download *\/$/;"	m	struct:
xinu_state	/home/jasta/c/giFT/FT/ft.h	/^	__u32 xinu_state;$/;"	m	struct:
