# Makefile.in generated by automake 1.7.9 from Makefile.am.
# src/Makefile.  Generated from Makefile.in by configure.

# Copyright 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002, 2003
# Free Software Foundation, Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.



srcdir = .
top_srcdir = ..

pkgdatadir = $(datadir)/giFTcurs
pkglibdir = $(libdir)/giFTcurs
pkgincludedir = $(includedir)/giFTcurs
top_builddir = ..

am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
INSTALL = /usr/bin/install -c
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
host_triplet = i686-pc-linux-gnu
ACLOCAL = ${SHELL} /home/HEx/gift/giFTcurs/missing --run aclocal-1.7
ALLOCA = 
AMDEP_FALSE = #
AMDEP_TRUE = 
AMTAR = ${SHELL} /home/HEx/gift/giFTcurs/missing --run tar
AUTOCONF = ${SHELL} /home/HEx/gift/giFTcurs/missing --run autoconf
AUTOHEADER = ${SHELL} /home/HEx/gift/giFTcurs/missing --run autoheader
AUTOMAKE = ${SHELL} /home/HEx/gift/giFTcurs/missing --run automake-1.7
AWK = mawk
BUILD_INCLUDED_LIBINTL = no
CATOBJEXT = .gmo
CC = gcc
CCDEPMODE = depmode=gcc3
CFLAGS = -g -O2
CPP = gcc -E
CPPFLAGS = 
CURSES_INCLUDEDIR = 
CURSES_LIBS = -lncurses
CYGPATH_W = echo
DATADIRNAME = share
DEFS = -DHAVE_CONFIG_H
DEPDIR = .deps
ECHO_C = 
ECHO_N = -n
ECHO_T = 
EGREP = grep -E
EXEEXT = 
GENCAT = gencat
GLIBC21 = yes
GLIB_CFLAGS = -I/usr/include/glib-2.0 -I/usr/lib/glib-2.0/include  
GLIB_GENMARSHAL = glib-genmarshal
GLIB_LIBS = -lglib-2.0  
GLIB_MKENUMS = glib-mkenums
GMSGFMT = :
GOBJECT_QUERY = gobject-query
INSTALL_DATA = ${INSTALL} -m 644
INSTALL_PROGRAM = ${INSTALL}
INSTALL_SCRIPT = ${INSTALL}
INSTALL_STRIP_PROGRAM = ${SHELL} $(install_sh) -c -s
INSTOBJEXT = .mo
INTLBISON = bison
INTLLIBS = 
INTLOBJS = 
INTL_LIBTOOL_SUFFIX_PREFIX = 
LDFLAGS = 
LIBICONV = 
LIBINTL = 
LIBOBJS = 
LIBS = -lgpm 
LTLIBICONV = 
LTLIBINTL = 
LTLIBOBJS = 
MAKEINFO = ${SHELL} /home/HEx/gift/giFTcurs/missing --run makeinfo
MKINSTALLDIRS = ./mkinstalldirs
MSGFMT = :
MSGMERGE = :
OBJEXT = o
PACKAGE = giFTcurs
PACKAGE_BUGREPORT = 
PACKAGE_NAME = 
PACKAGE_STRING = 
PACKAGE_TARNAME = 
PACKAGE_VERSION = 
PATH_SEPARATOR = :
PKG_CONFIG = /usr/bin/pkg-config
POSUB = po
RANLIB = ranlib
SET_MAKE = 
SHELL = /bin/sh
STRIP = 
USE_INCLUDED_LIBINTL = no
USE_NLS = yes
VERSION = 040708-cvs
XGETTEXT = :
ac_ct_CC = gcc
ac_ct_RANLIB = ranlib
ac_ct_STRIP = 
am__fastdepCC_FALSE = #
am__fastdepCC_TRUE = 
am__include = include
am__leading_dot = .
am__quote = 
bindir = ${exec_prefix}/bin
build = i686-pc-linux-gnu
build_alias = 
build_cpu = i686
build_os = linux-gnu
build_vendor = pc
datadir = ${prefix}/share
exec_prefix = ${prefix}
host = i686-pc-linux-gnu
host_alias = 
host_cpu = i686
host_os = linux-gnu
host_vendor = pc
includedir = ${prefix}/include
infodir = ${prefix}/info
install_sh = /home/HEx/gift/giFTcurs/install-sh
libdir = ${exec_prefix}/lib
libexecdir = ${exec_prefix}/libexec
localstatedir = ${prefix}/var
mandir = ${prefix}/man
oldincludedir = /usr/include
prefix = /usr/local
program_transform_name = s,x,x,
sbindir = ${exec_prefix}/sbin
sharedstatedir = ${prefix}/com
sysconfdir = ${prefix}/etc
target_alias = 
AM_CFLAGS = -Wall -Wstrict-prototypes -Wwrite-strings -Wpointer-arith -Winline

bin_PROGRAMS = giFTcurs

giFTcurs_SOURCES = \
	main.c        giftcurs.h \
	ban.c         ban.h \
	get.c         get.h \
	gift.c        gift.h \
	list.c        list.h \
	misc.c        misc.h \
	parse.c       parse.h \
	protocol.c    protocol.h \
	screen.c      screen.h \
	search.c      search.h \
	settings.c    settings.h \
	transfer.c    transfer.h \
	tree.c        tree.h \
	ui.c          ui.h \
	ui_console.c  \
	ui_draw.c     ui_draw.h \
	ui_help.c     \
	ui_main.c     ui_main.h \
	ui_mouse.c    ui_mouse.h \
	ui_settings.c \
	ui_transfer.c \
	format.c      format.h \
	xcommon.c     xcommon.h


giFTcurs_LDADD =  $(CURSES_LIBS) $(GLIB_LIBS)

EXTRA_PROGRAMS = giFTwakeup

giFTwakeup_SOURCES = \
	wakeup.c       \
	list.c        list.h \
	parse.c       parse.h \
	protocol.c    protocol.h \
	xcommon.c     xcommon.h


giFTwakeup_LDADD = $(GLIB_LIBS)

TESTS = test_parse test_list
check_PROGRAMS = test_parse test_list
test_parse_SOURCES = test_parse.c parse.c list.c
test_parse_LDADD = $(GLIB_LIBS)
test_list_SOURCES = test_list.c list.c
test_list_LDADD = $(GLIB_LIBS)

localedir = $(datadir)/locale
INCLUDES = -I../intl $(CURSES_INCLUDEDIR) $(GLIB_CFLAGS) -DLOCALEDIR=\"$(localedir)\"
subdir = src
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
mkinstalldirs = $(SHELL) $(top_srcdir)/mkinstalldirs
CONFIG_HEADER = $(top_builddir)/config.h
CONFIG_CLEAN_FILES =
EXTRA_PROGRAMS = giFTwakeup$(EXEEXT)
bin_PROGRAMS = giFTcurs$(EXEEXT)
check_PROGRAMS = test_parse$(EXEEXT) test_list$(EXEEXT)
PROGRAMS = $(bin_PROGRAMS)

am_giFTcurs_OBJECTS = main.$(OBJEXT) ban.$(OBJEXT) get.$(OBJEXT) \
	gift.$(OBJEXT) list.$(OBJEXT) misc.$(OBJEXT) parse.$(OBJEXT) \
	protocol.$(OBJEXT) screen.$(OBJEXT) search.$(OBJEXT) \
	settings.$(OBJEXT) transfer.$(OBJEXT) tree.$(OBJEXT) \
	ui.$(OBJEXT) ui_console.$(OBJEXT) ui_draw.$(OBJEXT) \
	ui_help.$(OBJEXT) ui_main.$(OBJEXT) ui_mouse.$(OBJEXT) \
	ui_settings.$(OBJEXT) ui_transfer.$(OBJEXT) format.$(OBJEXT) \
	xcommon.$(OBJEXT)
giFTcurs_OBJECTS = $(am_giFTcurs_OBJECTS)
giFTcurs_DEPENDENCIES =
giFTcurs_LDFLAGS =
am_giFTwakeup_OBJECTS = wakeup.$(OBJEXT) list.$(OBJEXT) parse.$(OBJEXT) \
	protocol.$(OBJEXT) xcommon.$(OBJEXT)
giFTwakeup_OBJECTS = $(am_giFTwakeup_OBJECTS)
giFTwakeup_DEPENDENCIES =
giFTwakeup_LDFLAGS =
am_test_list_OBJECTS = test_list.$(OBJEXT) list.$(OBJEXT)
test_list_OBJECTS = $(am_test_list_OBJECTS)
test_list_DEPENDENCIES =
test_list_LDFLAGS =
am_test_parse_OBJECTS = test_parse.$(OBJEXT) parse.$(OBJEXT) \
	list.$(OBJEXT)
test_parse_OBJECTS = $(am_test_parse_OBJECTS)
test_parse_DEPENDENCIES =
test_parse_LDFLAGS =

DEFAULT_INCLUDES =  -I. -I$(srcdir) -I$(top_builddir)
depcomp = $(SHELL) $(top_srcdir)/depcomp
am__depfiles_maybe = depfiles
DEP_FILES = ./$(DEPDIR)/ban.Po ./$(DEPDIR)/format.Po \
	./$(DEPDIR)/get.Po ./$(DEPDIR)/gift.Po \
	./$(DEPDIR)/list.Po ./$(DEPDIR)/main.Po \
	./$(DEPDIR)/misc.Po ./$(DEPDIR)/parse.Po \
	./$(DEPDIR)/protocol.Po ./$(DEPDIR)/screen.Po \
	./$(DEPDIR)/search.Po ./$(DEPDIR)/settings.Po \
	./$(DEPDIR)/test_list.Po ./$(DEPDIR)/test_parse.Po \
	./$(DEPDIR)/transfer.Po ./$(DEPDIR)/tree.Po \
	./$(DEPDIR)/ui.Po ./$(DEPDIR)/ui_console.Po \
	./$(DEPDIR)/ui_draw.Po ./$(DEPDIR)/ui_help.Po \
	./$(DEPDIR)/ui_main.Po ./$(DEPDIR)/ui_mouse.Po \
	./$(DEPDIR)/ui_settings.Po \
	./$(DEPDIR)/ui_transfer.Po ./$(DEPDIR)/wakeup.Po \
	./$(DEPDIR)/xcommon.Po
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
CCLD = $(CC)
LINK = $(CCLD) $(AM_CFLAGS) $(CFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@
DIST_SOURCES = $(giFTcurs_SOURCES) $(giFTwakeup_SOURCES) \
	$(test_list_SOURCES) $(test_parse_SOURCES)
DIST_COMMON = $(srcdir)/Makefile.in Makefile.am
SOURCES = $(giFTcurs_SOURCES) $(giFTwakeup_SOURCES) $(test_list_SOURCES) $(test_parse_SOURCES)

all: all-am

.SUFFIXES:
.SUFFIXES: .c .o .obj
$(srcdir)/Makefile.in:  Makefile.am  $(top_srcdir)/configure.in $(ACLOCAL_M4)
	cd $(top_srcdir) && \
	  $(AUTOMAKE) --gnu  src/Makefile
Makefile:  $(srcdir)/Makefile.in  $(top_builddir)/config.status
	cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)
binPROGRAMS_INSTALL = $(INSTALL_PROGRAM)
install-binPROGRAMS: $(bin_PROGRAMS)
	@$(NORMAL_INSTALL)
	$(mkinstalldirs) $(DESTDIR)$(bindir)
	@list='$(bin_PROGRAMS)'; for p in $$list; do \
	  p1=`echo $$p|sed 's/$(EXEEXT)$$//'`; \
	  if test -f $$p \
	  ; then \
	    f=`echo "$$p1" | sed 's,^.*/,,;$(transform);s/$$/$(EXEEXT)/'`; \
	   echo " $(INSTALL_PROGRAM_ENV) $(binPROGRAMS_INSTALL) $$p $(DESTDIR)$(bindir)/$$f"; \
	   $(INSTALL_PROGRAM_ENV) $(binPROGRAMS_INSTALL) $$p $(DESTDIR)$(bindir)/$$f || exit 1; \
	  else :; fi; \
	done

uninstall-binPROGRAMS:
	@$(NORMAL_UNINSTALL)
	@list='$(bin_PROGRAMS)'; for p in $$list; do \
	  f=`echo "$$p" | sed 's,^.*/,,;s/$(EXEEXT)$$//;$(transform);s/$$/$(EXEEXT)/'`; \
	  echo " rm -f $(DESTDIR)$(bindir)/$$f"; \
	  rm -f $(DESTDIR)$(bindir)/$$f; \
	done

clean-binPROGRAMS:
	-test -z "$(bin_PROGRAMS)" || rm -f $(bin_PROGRAMS)

clean-checkPROGRAMS:
	-test -z "$(check_PROGRAMS)" || rm -f $(check_PROGRAMS)
giFTcurs$(EXEEXT): $(giFTcurs_OBJECTS) $(giFTcurs_DEPENDENCIES) 
	@rm -f giFTcurs$(EXEEXT)
	$(LINK) $(giFTcurs_LDFLAGS) $(giFTcurs_OBJECTS) $(giFTcurs_LDADD) $(LIBS)
giFTwakeup$(EXEEXT): $(giFTwakeup_OBJECTS) $(giFTwakeup_DEPENDENCIES) 
	@rm -f giFTwakeup$(EXEEXT)
	$(LINK) $(giFTwakeup_LDFLAGS) $(giFTwakeup_OBJECTS) $(giFTwakeup_LDADD) $(LIBS)
test_list$(EXEEXT): $(test_list_OBJECTS) $(test_list_DEPENDENCIES) 
	@rm -f test_list$(EXEEXT)
	$(LINK) $(test_list_LDFLAGS) $(test_list_OBJECTS) $(test_list_LDADD) $(LIBS)
test_parse$(EXEEXT): $(test_parse_OBJECTS) $(test_parse_DEPENDENCIES) 
	@rm -f test_parse$(EXEEXT)
	$(LINK) $(test_parse_LDFLAGS) $(test_parse_OBJECTS) $(test_parse_LDADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT) core *.core

distclean-compile:
	-rm -f *.tab.c

include ./$(DEPDIR)/ban.Po
include ./$(DEPDIR)/format.Po
include ./$(DEPDIR)/get.Po
include ./$(DEPDIR)/gift.Po
include ./$(DEPDIR)/list.Po
include ./$(DEPDIR)/main.Po
include ./$(DEPDIR)/misc.Po
include ./$(DEPDIR)/parse.Po
include ./$(DEPDIR)/protocol.Po
include ./$(DEPDIR)/screen.Po
include ./$(DEPDIR)/search.Po
include ./$(DEPDIR)/settings.Po
include ./$(DEPDIR)/test_list.Po
include ./$(DEPDIR)/test_parse.Po
include ./$(DEPDIR)/transfer.Po
include ./$(DEPDIR)/tree.Po
include ./$(DEPDIR)/ui.Po
include ./$(DEPDIR)/ui_console.Po
include ./$(DEPDIR)/ui_draw.Po
include ./$(DEPDIR)/ui_help.Po
include ./$(DEPDIR)/ui_main.Po
include ./$(DEPDIR)/ui_mouse.Po
include ./$(DEPDIR)/ui_settings.Po
include ./$(DEPDIR)/ui_transfer.Po
include ./$(DEPDIR)/wakeup.Po
include ./$(DEPDIR)/xcommon.Po

.c.o:
	if $(COMPILE) -MT $@ -MD -MP -MF "$(DEPDIR)/$*.Tpo" \
	  -c -o $@ `test -f '$<' || echo '$(srcdir)/'`$<; \
	then mv -f "$(DEPDIR)/$*.Tpo" "$(DEPDIR)/$*.Po"; \
	else rm -f "$(DEPDIR)/$*.Tpo"; exit 1; \
	fi
#	source='$<' object='$@' libtool=no \
#	depfile='$(DEPDIR)/$*.Po' tmpdepfile='$(DEPDIR)/$*.TPo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(COMPILE) -c `test -f '$<' || echo '$(srcdir)/'`$<

.c.obj:
	if $(COMPILE) -MT $@ -MD -MP -MF "$(DEPDIR)/$*.Tpo" \
	  -c -o $@ `if test -f '$<'; then $(CYGPATH_W) '$<'; else $(CYGPATH_W) '$(srcdir)/$<'; fi`; \
	then mv -f "$(DEPDIR)/$*.Tpo" "$(DEPDIR)/$*.Po"; \
	else rm -f "$(DEPDIR)/$*.Tpo"; exit 1; \
	fi
#	source='$<' object='$@' libtool=no \
#	depfile='$(DEPDIR)/$*.Po' tmpdepfile='$(DEPDIR)/$*.TPo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(COMPILE) -c `if test -f '$<'; then $(CYGPATH_W) '$<'; else $(CYGPATH_W) '$(srcdir)/$<'; fi`
uninstall-info-am:

ETAGS = etags
ETAGSFLAGS =

CTAGS = ctags
CTAGSFLAGS =

tags: TAGS

ID: $(HEADERS) $(SOURCES) $(LISP) $(TAGS_FILES)
	list='$(SOURCES) $(HEADERS) $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	mkid -fID $$unique

TAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	test -z "$(ETAGS_ARGS)$$tags$$unique" \
	  || $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	     $$tags $$unique

ctags: CTAGS
CTAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	test -z "$(CTAGS_ARGS)$$tags$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$tags $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && cd $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) $$here

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

check-TESTS: $(TESTS)
	@failed=0; all=0; xfail=0; xpass=0; skip=0; \
	srcdir=$(srcdir); export srcdir; \
	list='$(TESTS)'; \
	if test -n "$$list"; then \
	  for tst in $$list; do \
	    if test -f ./$$tst; then dir=./; \
	    elif test -f $$tst; then dir=; \
	    else dir="$(srcdir)/"; fi; \
	    if $(TESTS_ENVIRONMENT) $${dir}$$tst; then \
	      all=`expr $$all + 1`; \
	      case " $(XFAIL_TESTS) " in \
	      *" $$tst "*) \
	        xpass=`expr $$xpass + 1`; \
	        failed=`expr $$failed + 1`; \
	        echo "XPASS: $$tst"; \
	      ;; \
	      *) \
	        echo "PASS: $$tst"; \
	      ;; \
	      esac; \
	    elif test $$? -ne 77; then \
	      all=`expr $$all + 1`; \
	      case " $(XFAIL_TESTS) " in \
	      *" $$tst "*) \
	        xfail=`expr $$xfail + 1`; \
	        echo "XFAIL: $$tst"; \
	      ;; \
	      *) \
	        failed=`expr $$failed + 1`; \
	        echo "FAIL: $$tst"; \
	      ;; \
	      esac; \
	    else \
	      skip=`expr $$skip + 1`; \
	      echo "SKIP: $$tst"; \
	    fi; \
	  done; \
	  if test "$$failed" -eq 0; then \
	    if test "$$xfail" -eq 0; then \
	      banner="All $$all tests passed"; \
	    else \
	      banner="All $$all tests behaved as expected ($$xfail expected failures)"; \
	    fi; \
	  else \
	    if test "$$xpass" -eq 0; then \
	      banner="$$failed of $$all tests failed"; \
	    else \
	      banner="$$failed of $$all tests did not behave as expected ($$xpass unexpected passes)"; \
	    fi; \
	  fi; \
	  dashes="$$banner"; \
	  skipped=""; \
	  if test "$$skip" -ne 0; then \
	    skipped="($$skip tests were not run)"; \
	    test `echo "$$skipped" | wc -c` -gt `echo "$$banner" | wc -c` && \
	      dashes="$$skipped"; \
	  fi; \
	  report=""; \
	  if test "$$failed" -ne 0 && test -n "$(PACKAGE_BUGREPORT)"; then \
	    report="Please report to $(PACKAGE_BUGREPORT)"; \
	    test `echo "$$report" | wc -c` -gt `echo "$$banner" | wc -c` && \
	      dashes="$$report"; \
	  fi; \
	  dashes=`echo "$$dashes" | sed s/./=/g`; \
	  echo "$$dashes"; \
	  echo "$$banner"; \
	  test -n "$$skipped" && echo "$$skipped"; \
	  test -n "$$report" && echo "$$report"; \
	  echo "$$dashes"; \
	  test "$$failed" -eq 0; \
	else :; fi
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)

top_distdir = ..
distdir = $(top_distdir)/$(PACKAGE)-$(VERSION)

distdir: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's|.|.|g'`; \
	list='$(DISTFILES)'; for file in $$list; do \
	  case $$file in \
	    $(srcdir)/*) file=`echo "$$file" | sed "s|^$$srcdirstrip/||"`;; \
	    $(top_srcdir)/*) file=`echo "$$file" | sed "s|^$$topsrcdirstrip/|$(top_builddir)/|"`;; \
	  esac; \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  dir=`echo "$$file" | sed -e 's,/[^/]*$$,,'`; \
	  if test "$$dir" != "$$file" && test "$$dir" != "."; then \
	    dir="/$$dir"; \
	    $(mkinstalldirs) "$(distdir)$$dir"; \
	  else \
	    dir=''; \
	  fi; \
	  if test -d $$d/$$file; then \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -pR $(srcdir)/$$file $(distdir)$$dir || exit 1; \
	    fi; \
	    cp -pR $$d/$$file $(distdir)$$dir || exit 1; \
	  else \
	    test -f $(distdir)/$$file \
	    || cp -p $$d/$$file $(distdir)/$$file \
	    || exit 1; \
	  fi; \
	done
check-am: all-am
	$(MAKE) $(AM_MAKEFLAGS) $(check_PROGRAMS)
	$(MAKE) $(AM_MAKEFLAGS) check-TESTS
check: check-am
all-am: Makefile $(PROGRAMS)

installdirs:
	$(mkinstalldirs) $(DESTDIR)$(bindir)
install: install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	$(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	  install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	  `test -z '$(STRIP)' || \
	    echo "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'"` install
mostlyclean-generic:

clean-generic:

distclean-generic:
	-rm -f $(CONFIG_CLEAN_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
clean: clean-am

clean-am: clean-binPROGRAMS clean-checkPROGRAMS clean-generic \
	mostlyclean-am

distclean: distclean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-tags

dvi: dvi-am

dvi-am:

info: info-am

info-am:

install-data-am:

install-exec-am: install-binPROGRAMS

install-info: install-info-am

install-man:

installcheck-am:

maintainer-clean: maintainer-clean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

uninstall-am: uninstall-binPROGRAMS uninstall-info-am

.PHONY: CTAGS GTAGS all all-am check check-TESTS check-am clean \
	clean-binPROGRAMS clean-checkPROGRAMS clean-generic ctags \
	distclean distclean-compile distclean-generic distclean-tags \
	distdir dvi dvi-am info info-am install install-am \
	install-binPROGRAMS install-data install-data-am install-exec \
	install-exec-am install-info install-info-am install-man \
	install-strip installcheck installcheck-am installdirs \
	maintainer-clean maintainer-clean-generic mostlyclean \
	mostlyclean-compile mostlyclean-generic pdf pdf-am ps ps-am \
	tags uninstall uninstall-am uninstall-binPROGRAMS \
	uninstall-info-am

# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
